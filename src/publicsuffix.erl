-module(publicsuffix).

-export([suffix/1, domain/1]).

%% This is autogenerated by script from
%% https://publicsuffix.org/list/public_suffix_list.dat

suffix(Domain) ->
	Parts = lists:reverse(string:tokens(Domain, ".")),
	[First | Rest] = Parts,
	parts(First, Rest).

domain(Domain) ->
	Suffix = suffix(Domain),
	case Suffix == Domain of
		true ->
    		Domain;
    	false ->
		    Subdomains = string:tokens(string:sub_string(Domain, 1, string:rstr(Domain, Suffix) - 2), "."),
		    Subdomain = lists:last(Subdomains),
		    Subdomain ++ "." ++ Suffix
	end.

parts("hitachi", _Any) ->
    "hitachi";
parts("mobi", []) ->
    undefined;
parts("mobi", Parts) ->
   [First | Rest] = Parts,
   mobi(First, Rest);
parts("singles", _Any) ->
    "singles";
parts("lotto", _Any) ->
    "lotto";
parts("hr", []) ->
    undefined;
parts("hr", Parts) ->
   [First | Rest] = Parts,
   hr(First, Rest);
parts("alipay", _Any) ->
    "alipay";
parts("zuerich", _Any) ->
    "zuerich";
parts("property", _Any) ->
    "property";
parts("unicom", _Any) ->
    "unicom";
parts("builders", []) ->
    undefined;
parts("builders", Parts) ->
   [First | Rest] = Parts,
   builders(First, Rest);
parts("uno", _Any) ->
    "uno";
parts("itv", _Any) ->
    "itv";
parts("eus", []) ->
    undefined;
parts("eus", Parts) ->
   [First | Rest] = Parts,
   eus(First, Rest);
parts("fly", _Any) ->
    "fly";
parts("news", []) ->
    undefined;
parts("news", Parts) ->
   [First | Rest] = Parts,
   news(First, Rest);
parts("ms", []) ->
    undefined;
parts("ms", Parts) ->
   [First | Rest] = Parts,
   ms(First, Rest);
parts("aetna", _Any) ->
    "aetna";
parts("bm", []) ->
    undefined;
parts("bm", Parts) ->
   [First | Rest] = Parts,
   bm(First, Rest);
parts("vu", []) ->
    undefined;
parts("vu", Parts) ->
   [First | Rest] = Parts,
   vu(First, Rest);
parts("kim", _Any) ->
    "kim";
parts("bayern", _Any) ->
    "bayern";
parts("sr", _Any) ->
    "sr";
parts("fitness", _Any) ->
    "fitness";
parts("like", _Any) ->
    "like";
parts("vi", []) ->
    undefined;
parts("vi", Parts) ->
   [First | Rest] = Parts,
   vi(First, Rest);
parts("ooo", _Any) ->
    "ooo";
parts("airtel", _Any) ->
    "airtel";
parts("sh", []) ->
    undefined;
parts("sh", Parts) ->
   [First | Rest] = Parts,
   sh(First, Rest);
parts("fo", _Any) ->
    "fo";
parts("citi", _Any) ->
    "citi";
parts("frogans", _Any) ->
    "frogans";
parts("fun", _Any) ->
    "fun";
parts("website", []) ->
    undefined;
parts("website", Parts) ->
   [First | Rest] = Parts,
   website(First, Rest);
parts("associates", _Any) ->
    "associates";
parts("toray", _Any) ->
    "toray";
parts("rest", _Any) ->
    "rest";
parts("okinawa", _Any) ->
    "okinawa";
parts("gle", _Any) ->
    "gle";
parts("exchange", _Any) ->
    "exchange";
parts("sarl", _Any) ->
    "sarl";
parts("sandvik", _Any) ->
    "sandvik";
parts("shangrila", _Any) ->
    "shangrila";
parts("crs", _Any) ->
    "crs";
parts("fido", _Any) ->
    "fido";
parts("ls", []) ->
    undefined;
parts("ls", Parts) ->
   [First | Rest] = Parts,
   ls(First, Rest);
parts("rentals", _Any) ->
    "rentals";
parts("cymru", _Any) ->
    "cymru";
parts("cy", []) ->
    undefined;
parts("cy", Parts) ->
   [First | Rest] = Parts,
   cy(First, Rest);
parts("dentist", _Any) ->
    "dentist";
parts("goog", []) ->
    undefined;
parts("goog", Parts) ->
   [First | Rest] = Parts,
   goog(First, Rest);
parts("bbt", _Any) ->
    "bbt";
parts("hospital", _Any) ->
    "hospital";
parts("nba", _Any) ->
    "nba";
parts("booking", _Any) ->
    "booking";
parts("loans", _Any) ->
    "loans";
parts("grainger", _Any) ->
    "grainger";
parts("nrw", _Any) ->
    "nrw";
parts("eco", _Any) ->
    "eco";
parts("gs", _Any) ->
    "gs";
parts("cam", _Any) ->
    "cam";
parts("hbo", _Any) ->
    "hbo";
parts("app", []) ->
    undefined;
parts("app", Parts) ->
   [First | Rest] = Parts,
   app(First, Rest);
parts("gbiz", _Any) ->
    "gbiz";
parts("tickets", _Any) ->
    "tickets";
parts("coffee", _Any) ->
    "coffee";
parts("loan", _Any) ->
    "loan";
parts("ferrero", _Any) ->
    "ferrero";
parts("graphics", _Any) ->
    "graphics";
parts("circle", _Any) ->
    "circle";
parts("domains", _Any) ->
    "domains";
parts("travelersinsurance", _Any) ->
    "travelersinsurance";
parts("ng", []) ->
    undefined;
parts("ng", Parts) ->
   [First | Rest] = Parts,
   ng(First, Rest);
parts("reisen", _Any) ->
    "reisen";
parts("cloud", []) ->
    undefined;
parts("cloud", Parts) ->
   [First | Rest] = Parts,
   cloud(First, Rest);
parts("gal", _Any) ->
    "gal";
parts("sc", []) ->
    undefined;
parts("sc", Parts) ->
   [First | Rest] = Parts,
   sc(First, Rest);
parts("bz", []) ->
    undefined;
parts("bz", Parts) ->
   [First | Rest] = Parts,
   bz(First, Rest);
parts("by", []) ->
    undefined;
parts("by", Parts) ->
   [First | Rest] = Parts,
   by(First, Rest);
parts("accountants", _Any) ->
    "accountants";
parts("career", _Any) ->
    "career";
parts("photos", []) ->
    undefined;
parts("photos", Parts) ->
   [First | Rest] = Parts,
   photos(First, Rest);
parts("lifestyle", _Any) ->
    "lifestyle";
parts("vg", []) ->
    undefined;
parts("vg", Parts) ->
   [First | Rest] = Parts,
   vg(First, Rest);
parts("tk", _Any) ->
    "tk";
parts("blog", _Any) ->
    "blog";
parts("dealer", _Any) ->
    "dealer";
parts("cooking", _Any) ->
    "cooking";
parts("datsun", _Any) ->
    "datsun";
parts("mormon", _Any) ->
    "mormon";
parts("call", _Any) ->
    "call";
parts("bio", _Any) ->
    "bio";
parts("courses", _Any) ->
    "courses";
parts("tires", _Any) ->
    "tires";
parts("deloitte", _Any) ->
    "deloitte";
parts("rsvp", _Any) ->
    "rsvp";
parts("contact", _Any) ->
    "contact";
parts("furniture", _Any) ->
    "furniture";
parts("gap", _Any) ->
    "gap";
parts("build", _Any) ->
    "build";
parts("engineering", _Any) ->
    "engineering";
parts("netbank", _Any) ->
    "netbank";
parts("cz", []) ->
    undefined;
parts("cz", Parts) ->
   [First | Rest] = Parts,
   cz(First, Rest);
parts("td", []) ->
    undefined;
parts("td", Parts) ->
   [First | Rest] = Parts,
   td(First, Rest);
parts("jp", []) ->
    undefined;
parts("jp", Parts) ->
   [First | Rest] = Parts,
   jp(First, Rest);
parts("town", _Any) ->
    "town";
parts("tt", []) ->
    undefined;
parts("tt", Parts) ->
   [First | Rest] = Parts,
   tt(First, Rest);
parts("brussels", _Any) ->
    "brussels";
parts("juniper", _Any) ->
    "juniper";
parts("dabur", _Any) ->
    "dabur";
parts("moi", _Any) ->
    "moi";
parts("condos", _Any) ->
    "condos";
parts("ott", _Any) ->
    "ott";
parts("inc", _Any) ->
    "inc";
parts("office", _Any) ->
    "office";
parts("jo", []) ->
    undefined;
parts("jo", Parts) ->
   [First | Rest] = Parts,
   jo(First, Rest);
parts("pharmacy", _Any) ->
    "pharmacy";
parts("cm", []) ->
    undefined;
parts("cm", Parts) ->
   [First | Rest] = Parts,
   cm(First, Rest);
parts("im", []) ->
    undefined;
parts("im", Parts) ->
   [First | Rest] = Parts,
   im(First, Rest);
parts("parts", _Any) ->
    "parts";
parts("yachts", _Any) ->
    "yachts";
parts("coupon", _Any) ->
    "coupon";
parts("paris", _Any) ->
    "paris";
parts("center", _Any) ->
    "center";
parts("marketing", _Any) ->
    "marketing";
parts("attorney", _Any) ->
    "attorney";
parts("melbourne", _Any) ->
    "melbourne";
parts("prof", _Any) ->
    "prof";
parts("cheap", _Any) ->
    "cheap";
parts("dvag", _Any) ->
    "dvag";
parts("aol", _Any) ->
    "aol";
parts("stada", _Any) ->
    "stada";
parts("ni", []) ->
    undefined;
parts("ni", Parts) ->
   [First | Rest] = Parts,
   ni(First, Rest);
parts("sv", []) ->
    undefined;
parts("sv", Parts) ->
   [First | Rest] = Parts,
   sv(First, Rest);
parts("memorial", _Any) ->
    "memorial";
parts("case", _Any) ->
    "case";
parts("nu", []) ->
    undefined;
parts("nu", Parts) ->
   [First | Rest] = Parts,
   nu(First, Rest);
parts("creditcard", _Any) ->
    "creditcard";
parts("ricoh", _Any) ->
    "ricoh";
parts("mitsubishi", _Any) ->
    "mitsubishi";
parts("sucks", _Any) ->
    "sucks";
parts("markets", _Any) ->
    "markets";
parts("ps", []) ->
    undefined;
parts("ps", Parts) ->
   [First | Rest] = Parts,
   ps(First, Rest);
parts("beer", _Any) ->
    "beer";
parts("map", _Any) ->
    "map";
parts("goodyear", _Any) ->
    "goodyear";
parts("re", []) ->
    undefined;
parts("re", Parts) ->
   [First | Rest] = Parts,
   re(First, Rest);
parts("got", _Any) ->
    "got";
parts("webcam", _Any) ->
    "webcam";
parts("nissan", _Any) ->
    "nissan";
parts("arte", _Any) ->
    "arte";
parts("new", _Any) ->
    "new";
parts("country", _Any) ->
    "country";
parts("moda", _Any) ->
    "moda";
parts("imdb", _Any) ->
    "imdb";
parts("uz", []) ->
    undefined;
parts("uz", Parts) ->
   [First | Rest] = Parts,
   uz(First, Rest);
parts("band", _Any) ->
    "band";
parts("camera", _Any) ->
    "camera";
parts("partners", _Any) ->
    "partners";
parts("pf", []) ->
    undefined;
parts("pf", Parts) ->
   [First | Rest] = Parts,
   pf(First, Rest);
parts("jio", _Any) ->
    "jio";
parts("diy", _Any) ->
    "diy";
parts("ipiranga", _Any) ->
    "ipiranga";
parts("jaguar", _Any) ->
    "jaguar";
parts("voyage", _Any) ->
    "voyage";
parts("th", []) ->
    undefined;
parts("th", Parts) ->
   [First | Rest] = Parts,
   th(First, Rest);
parts("nokia", _Any) ->
    "nokia";
parts("dance", _Any) ->
    "dance";
parts("london", _Any) ->
    "london";
parts("zone", []) ->
    undefined;
parts("zone", Parts) ->
   [First | Rest] = Parts,
   zone(First, Rest);
parts("pro", []) ->
    undefined;
parts("pro", Parts) ->
   [First | Rest] = Parts,
   pro(First, Rest);
parts("banamex", _Any) ->
    "banamex";
parts("tr", []) ->
    undefined;
parts("tr", Parts) ->
   [First | Rest] = Parts,
   tr(First, Rest);
parts("actor", _Any) ->
    "actor";
parts("chintai", _Any) ->
    "chintai";
parts("capetown", _Any) ->
    "capetown";
parts("net", []) ->
    undefined;
parts("net", Parts) ->
   [First | Rest] = Parts,
   net(First, Rest);
parts("ist", _Any) ->
    "ist";
parts("lasalle", _Any) ->
    "lasalle";
parts("iq", []) ->
    undefined;
parts("iq", Parts) ->
   [First | Rest] = Parts,
   iq(First, Rest);
parts("calvinklein", _Any) ->
    "calvinklein";
parts("open", _Any) ->
    "open";
parts("fish", _Any) ->
    "fish";
parts("pl", []) ->
    undefined;
parts("pl", Parts) ->
   [First | Rest] = Parts,
   pl(First, Rest);
parts("nowtv", _Any) ->
    "nowtv";
parts("icu", _Any) ->
    "icu";
parts("nikon", _Any) ->
    "nikon";
parts("science", []) ->
    undefined;
parts("science", Parts) ->
   [First | Rest] = Parts,
   science(First, Rest);
parts("today", []) ->
    undefined;
parts("today", Parts) ->
   [First | Rest] = Parts,
   today(First, Rest);
parts("immo", _Any) ->
    "immo";
parts("systems", []) ->
    undefined;
parts("systems", Parts) ->
   [First | Rest] = Parts,
   systems(First, Rest);
parts("bingo", _Any) ->
    "bingo";
parts("tc", []) ->
    undefined;
parts("tc", Parts) ->
   [First | Rest] = Parts,
   tc(First, Rest);
parts("cx", []) ->
    undefined;
parts("cx", Parts) ->
   [First | Rest] = Parts,
   cx(First, Rest);
parts("boats", _Any) ->
    "boats";
parts("cern", _Any) ->
    "cern";
parts("bo", []) ->
    undefined;
parts("bo", Parts) ->
   [First | Rest] = Parts,
   bo(First, Rest);
parts("se", []) ->
    undefined;
parts("se", Parts) ->
   [First | Rest] = Parts,
   se(First, Rest);
parts("page", []) ->
    undefined;
parts("page", Parts) ->
   [First | Rest] = Parts,
   page(First, Rest);
parts("casa", []) ->
    undefined;
parts("casa", Parts) ->
   [First | Rest] = Parts,
   casa(First, Rest);
parts("firmdale", _Any) ->
    "firmdale";
parts("kia", _Any) ->
    "kia";
parts("chanel", _Any) ->
    "chanel";
parts("ovh", []) ->
    undefined;
parts("ovh", Parts) ->
   [First | Rest] = Parts,
   ovh(First, Rest);
parts("surf", _Any) ->
    "surf";
parts("crown", _Any) ->
    "crown";
parts("au", []) ->
    undefined;
parts("au", Parts) ->
   [First | Rest] = Parts,
   au(First, Rest);
parts("auspost", _Any) ->
    "auspost";
parts("spa", _Any) ->
    "spa";
parts("dk", []) ->
    undefined;
parts("dk", Parts) ->
   [First | Rest] = Parts,
   dk(First, Rest);
parts("gives", _Any) ->
    "gives";
parts("ford", _Any) ->
    "ford";
parts("ing", _Any) ->
    "ing";
parts("voto", _Any) ->
    "voto";
parts("ai", []) ->
    undefined;
parts("ai", Parts) ->
   [First | Rest] = Parts,
   ai(First, Rest);
parts("style", _Any) ->
    "style";
parts("men", _Any) ->
    "men";
parts("bw", []) ->
    undefined;
parts("bw", Parts) ->
   [First | Rest] = Parts,
   bw(First, Rest);
parts("kddi", _Any) ->
    "kddi";
parts("homes", _Any) ->
    "homes";
parts("versicherung", _Any) ->
    "versicherung";
parts("fm", []) ->
    undefined;
parts("fm", Parts) ->
   [First | Rest] = Parts,
   fm(First, Rest);
parts("desi", _Any) ->
    "desi";
parts("live", []) ->
    undefined;
parts("live", Parts) ->
   [First | Rest] = Parts,
   live(First, Rest);
parts("skype", _Any) ->
    "skype";
parts("nissay", _Any) ->
    "nissay";
parts("seat", _Any) ->
    "seat";
parts("mango", _Any) ->
    "mango";
parts("site", []) ->
    undefined;
parts("site", Parts) ->
   [First | Rest] = Parts,
   site(First, Rest);
parts("verisign", _Any) ->
    "verisign";
parts("st", []) ->
    undefined;
parts("st", Parts) ->
   [First | Rest] = Parts,
   st(First, Rest);
parts("sd", []) ->
    undefined;
parts("sd", Parts) ->
   [First | Rest] = Parts,
   sd(First, Rest);
parts("online", []) ->
    undefined;
parts("online", Parts) ->
   [First | Rest] = Parts,
   online(First, Rest);
parts("sa", []) ->
    undefined;
parts("sa", Parts) ->
   [First | Rest] = Parts,
   sa(First, Rest);
parts("zara", _Any) ->
    "zara";
parts("io", []) ->
    undefined;
parts("io", Parts) ->
   [First | Rest] = Parts,
   io(First, Rest);
parts("cbre", _Any) ->
    "cbre";
parts("co", []) ->
    undefined;
parts("co", Parts) ->
   [First | Rest] = Parts,
   co(First, Rest);
parts("kerryproperties", _Any) ->
    "kerryproperties";
parts("hamburg", _Any) ->
    "hamburg";
parts("ht", []) ->
    undefined;
parts("ht", Parts) ->
   [First | Rest] = Parts,
   ht(First, Rest);
parts("kaufen", _Any) ->
    "kaufen";
parts("gl", []) ->
    undefined;
parts("gl", Parts) ->
   [First | Rest] = Parts,
   gl(First, Rest);
parts("nyc", _Any) ->
    "nyc";
parts("man", _Any) ->
    "man";
parts("one", []) ->
    undefined;
parts("one", Parts) ->
   [First | Rest] = Parts,
   one(First, Rest);
parts("koeln", _Any) ->
    "koeln";
parts("cw", []) ->
    undefined;
parts("cw", Parts) ->
   [First | Rest] = Parts,
   cw(First, Rest);
parts("sk", []) ->
    undefined;
parts("sk", Parts) ->
   [First | Rest] = Parts,
   sk(First, Rest);
parts("supplies", _Any) ->
    "supplies";
parts("latino", _Any) ->
    "latino";
parts("degree", _Any) ->
    "degree";
parts("mtn", _Any) ->
    "mtn";
parts("study", _Any) ->
    "study";
parts("de", []) ->
    undefined;
parts("de", Parts) ->
   [First | Rest] = Parts,
   de(First, Rest);
parts("farm", []) ->
    undefined;
parts("farm", Parts) ->
   [First | Rest] = Parts,
   farm(First, Rest);
parts("hk", []) ->
    undefined;
parts("hk", Parts) ->
   [First | Rest] = Parts,
   hk(First, Rest);
parts("chase", _Any) ->
    "chase";
parts("diamonds", _Any) ->
    "diamonds";
parts("esq", _Any) ->
    "esq";
parts("dating", _Any) ->
    "dating";
parts("aramco", _Any) ->
    "aramco";
parts("clinic", _Any) ->
    "clinic";
parts("photography", _Any) ->
    "photography";
parts("gf", _Any) ->
    "gf";
parts("schwarz", _Any) ->
    "schwarz";
parts("guitars", _Any) ->
    "guitars";
parts("info", []) ->
    undefined;
parts("info", Parts) ->
   [First | Rest] = Parts,
   info(First, Rest);
parts("citic", _Any) ->
    "citic";
parts("tennis", _Any) ->
    "tennis";
parts("java", _Any) ->
    "java";
parts("cisco", _Any) ->
    "cisco";
parts("insurance", _Any) ->
    "insurance";
parts("airforce", _Any) ->
    "airforce";
parts("art", _Any) ->
    "art";
parts("ag", []) ->
    undefined;
parts("ag", Parts) ->
   [First | Rest] = Parts,
   ag(First, Rest);
parts("george", _Any) ->
    "george";
parts("realestate", _Any) ->
    "realestate";
parts("vivo", _Any) ->
    "vivo";
parts("tui", _Any) ->
    "tui";
parts("vet", _Any) ->
    "vet";
parts("vacations", _Any) ->
    "vacations";
parts("bauhaus", _Any) ->
    "bauhaus";
parts("rugby", _Any) ->
    "rugby";
parts("ml", []) ->
    undefined;
parts("ml", Parts) ->
   [First | Rest] = Parts,
   ml(First, Rest);
parts("vn", []) ->
    undefined;
parts("vn", Parts) ->
   [First | Rest] = Parts,
   vn(First, Rest);
parts("weather", _Any) ->
    "weather";
parts("cfd", _Any) ->
    "cfd";
parts("charity", _Any) ->
    "charity";
parts("final", _Any) ->
    "final";
parts("tv", []) ->
    undefined;
parts("tv", Parts) ->
   [First | Rest] = Parts,
   tv(First, Rest);
parts("legal", _Any) ->
    "legal";
parts("house", _Any) ->
    "house";
parts("gdn", []) ->
    undefined;
parts("gdn", Parts) ->
   [First | Rest] = Parts,
   gdn(First, Rest);
parts("earth", _Any) ->
    "earth";
parts("tjmaxx", _Any) ->
    "tjmaxx";
parts("firestone", _Any) ->
    "firestone";
parts("ntt", _Any) ->
    "ntt";
parts("guardian", _Any) ->
    "guardian";
parts("gb", _Any) ->
    "gb";
parts("repair", _Any) ->
    "repair";
parts("next", _Any) ->
    "next";
parts("es", []) ->
    undefined;
parts("es", Parts) ->
   [First | Rest] = Parts,
   es(First, Rest);
parts("silk", _Any) ->
    "silk";
parts("temasek", _Any) ->
    "temasek";
parts("uy", []) ->
    undefined;
parts("uy", Parts) ->
   [First | Rest] = Parts,
   uy(First, Rest);
parts("xxx", _Any) ->
    "xxx";
parts("homedepot", _Any) ->
    "homedepot";
parts("bnpparibas", _Any) ->
    "bnpparibas";
parts("airbus", _Any) ->
    "airbus";
parts("lb", []) ->
    undefined;
parts("lb", Parts) ->
   [First | Rest] = Parts,
   lb(First, Rest);
parts("tools", _Any) ->
    "tools";
parts("photo", _Any) ->
    "photo";
parts("theatre", _Any) ->
    "theatre";
parts("star", _Any) ->
    "star";
parts("globo", _Any) ->
    "globo";
parts("broker", _Any) ->
    "broker";
parts("ericsson", _Any) ->
    "ericsson";
parts("avianca", _Any) ->
    "avianca";
parts("university", _Any) ->
    "university";
parts("lacaixa", _Any) ->
    "lacaixa";
parts("international", _Any) ->
    "international";
parts("dupont", _Any) ->
    "dupont";
parts("merckmsd", _Any) ->
    "merckmsd";
parts("sbs", _Any) ->
    "sbs";
parts("lawyer", _Any) ->
    "lawyer";
parts("dj", _Any) ->
    "dj";
parts("mp", []) ->
    undefined;
parts("mp", Parts) ->
   [First | Rest] = Parts,
   mp(First, Rest);
parts("cf", []) ->
    undefined;
parts("cf", Parts) ->
   [First | Rest] = Parts,
   cf(First, Rest);
parts("careers", _Any) ->
    "careers";
parts("jot", _Any) ->
    "jot";
parts("abc", _Any) ->
    "abc";
parts("shia", _Any) ->
    "shia";
parts("lundbeck", _Any) ->
    "lundbeck";
parts("americanexpress", _Any) ->
    "americanexpress";
parts("faith", []) ->
    undefined;
parts("faith", Parts) ->
   [First | Rest] = Parts,
   faith(First, Rest);
parts("gw", _Any) ->
    "gw";
parts("natura", _Any) ->
    "natura";
parts("wedding", _Any) ->
    "wedding";
parts("management", []) ->
    undefined;
parts("management", Parts) ->
   [First | Rest] = Parts,
   management(First, Rest);
parts("amsterdam", _Any) ->
    "amsterdam";
parts("pccw", _Any) ->
    "pccw";
parts("tattoo", _Any) ->
    "tattoo";
parts("alsace", _Any) ->
    "alsace";
parts("guge", _Any) ->
    "guge";
parts("kw", []) ->
    undefined;
parts("kw", Parts) ->
   [First | Rest] = Parts,
   kw(First, Rest);
parts("kuokgroup", _Any) ->
    "kuokgroup";
parts("forex", _Any) ->
    "forex";
parts("marshalls", _Any) ->
    "marshalls";
parts("world", _Any) ->
    "world";
parts("promo", _Any) ->
    "promo";
parts("villas", _Any) ->
    "villas";
parts("il", []) ->
    undefined;
parts("il", Parts) ->
   [First | Rest] = Parts,
   il(First, Rest);
parts("gmail", _Any) ->
    "gmail";
parts("cl", []) ->
    undefined;
parts("cl", Parts) ->
   [First | Rest] = Parts,
   cl(First, Rest);
parts("vc", []) ->
    undefined;
parts("vc", Parts) ->
   [First | Rest] = Parts,
   vc(First, Rest);
parts("place", []) ->
    undefined;
parts("place", Parts) ->
   [First | Rest] = Parts,
   place(First, Rest);
parts("ninja", _Any) ->
    "ninja";
parts("compare", _Any) ->
    "compare";
parts("pramerica", _Any) ->
    "pramerica";
parts("amfam", _Any) ->
    "amfam";
parts("top", []) ->
    undefined;
parts("top", Parts) ->
   [First | Rest] = Parts,
   top(First, Rest);
parts("kosher", _Any) ->
    "kosher";
parts("capital", _Any) ->
    "capital";
parts("able", _Any) ->
    "able";
parts("sky", _Any) ->
    "sky";
parts("luxe", _Any) ->
    "luxe";
parts("sony", _Any) ->
    "sony";
parts("pru", _Any) ->
    "pru";
parts("living", _Any) ->
    "living";
parts("quest", _Any) ->
    "quest";
parts("gp", []) ->
    undefined;
parts("gp", Parts) ->
   [First | Rest] = Parts,
   gp(First, Rest);
parts("taobao", _Any) ->
    "taobao";
parts("su", []) ->
    undefined;
parts("su", Parts) ->
   [First | Rest] = Parts,
   su(First, Rest);
parts("limited", _Any) ->
    "limited";
parts("ae", []) ->
    undefined;
parts("ae", Parts) ->
   [First | Rest] = Parts,
   ae(First, Rest);
parts("hu", []) ->
    undefined;
parts("hu", Parts) ->
   [First | Rest] = Parts,
   hu(First, Rest);
parts("us", []) ->
    undefined;
parts("us", Parts) ->
   [First | Rest] = Parts,
   us(First, Rest);
parts("post", _Any) ->
    "post";
parts("coupons", _Any) ->
    "coupons";
parts("mw", []) ->
    undefined;
parts("mw", Parts) ->
   [First | Rest] = Parts,
   mw(First, Rest);
parts("kitchen", _Any) ->
    "kitchen";
parts("gea", _Any) ->
    "gea";
parts("audio", _Any) ->
    "audio";
parts("finance", _Any) ->
    "finance";
parts("fujitsu", _Any) ->
    "fujitsu";
parts("giving", _Any) ->
    "giving";
parts("bcg", _Any) ->
    "bcg";
parts("events", []) ->
    undefined;
parts("events", Parts) ->
   [First | Rest] = Parts,
   events(First, Rest);
parts("makeup", _Any) ->
    "makeup";
parts("taipei", _Any) ->
    "taipei";
parts("bestbuy", _Any) ->
    "bestbuy";
parts("land", []) ->
    undefined;
parts("land", Parts) ->
   [First | Rest] = Parts,
   land(First, Rest);
parts("meme", _Any) ->
    "meme";
parts("sandvikcoromant", _Any) ->
    "sandvikcoromant";
parts("money", _Any) ->
    "money";
parts("kerrylogistics", _Any) ->
    "kerrylogistics";
parts("market", _Any) ->
    "market";
parts("si", []) ->
    undefined;
parts("si", Parts) ->
   [First | Rest] = Parts,
   si(First, Rest);
parts("wtf", _Any) ->
    "wtf";
parts("lds", _Any) ->
    "lds";
parts("citadel", _Any) ->
    "citadel";
parts("mo", []) ->
    undefined;
parts("mo", Parts) ->
   [First | Rest] = Parts,
   mo(First, Rest);
parts("kp", []) ->
    undefined;
parts("kp", Parts) ->
   [First | Rest] = Parts,
   kp(First, Rest);
parts("bzh", _Any) ->
    "bzh";
parts("beauty", _Any) ->
    "beauty";
parts("boehringer", _Any) ->
    "boehringer";
parts("epson", _Any) ->
    "epson";
parts("safe", _Any) ->
    "safe";
parts("date", _Any) ->
    "date";
parts("itau", _Any) ->
    "itau";
parts("jpmorgan", _Any) ->
    "jpmorgan";
parts("here", _Any) ->
    "here";
parts("health", []) ->
    undefined;
parts("health", Parts) ->
   [First | Rest] = Parts,
   health(First, Rest);
parts("safety", _Any) ->
    "safety";
parts("ad", []) ->
    undefined;
parts("ad", Parts) ->
   [First | Rest] = Parts,
   ad(First, Rest);
parts("moscow", _Any) ->
    "moscow";
parts("bb", []) ->
    undefined;
parts("bb", Parts) ->
   [First | Rest] = Parts,
   bb(First, Rest);
parts("at", []) ->
    undefined;
parts("at", Parts) ->
   [First | Rest] = Parts,
   at(First, Rest);
parts("dad", _Any) ->
    "dad";
parts("gq", _Any) ->
    "gq";
parts("bosch", _Any) ->
    "bosch";
parts("rodeo", _Any) ->
    "rodeo";
parts("dunlop", _Any) ->
    "dunlop";
parts("travelers", _Any) ->
    "travelers";
parts("maison", _Any) ->
    "maison";
parts("coach", _Any) ->
    "coach";
parts("statebank", _Any) ->
    "statebank";
parts("latrobe", _Any) ->
    "latrobe";
parts("schule", _Any) ->
    "schule";
parts("gallery", _Any) ->
    "gallery";
parts("microsoft", _Any) ->
    "microsoft";
parts("mx", []) ->
    undefined;
parts("mx", Parts) ->
   [First | Rest] = Parts,
   mx(First, Rest);
parts("nr", []) ->
    undefined;
parts("nr", Parts) ->
   [First | Rest] = Parts,
   nr(First, Rest);
parts("tkmaxx", _Any) ->
    "tkmaxx";
parts("pin", _Any) ->
    "pin";
parts("taxi", _Any) ->
    "taxi";
parts("prod", _Any) ->
    "prod";
parts("tn", []) ->
    undefined;
parts("tn", Parts) ->
   [First | Rest] = Parts,
   tn(First, Rest);
parts("book", _Any) ->
    "book";
parts("pw", []) ->
    undefined;
parts("pw", Parts) ->
   [First | Rest] = Parts,
   pw(First, Rest);
parts("kindle", _Any) ->
    "kindle";
parts("edu", _Any) ->
    "edu";
parts("bf", []) ->
    undefined;
parts("bf", Parts) ->
   [First | Rest] = Parts,
   bf(First, Rest);
parts("scot", []) ->
    undefined;
parts("scot", Parts) ->
   [First | Rest] = Parts,
   scot(First, Rest);
parts("menu", []) ->
    undefined;
parts("menu", Parts) ->
   [First | Rest] = Parts,
   menu(First, Rest);
parts("express", _Any) ->
    "express";
parts("gallup", _Any) ->
    "gallup";
parts("corsica", _Any) ->
    "corsica";
parts("yun", _Any) ->
    "yun";
parts("dvr", _Any) ->
    "dvr";
parts("lifeinsurance", _Any) ->
    "lifeinsurance";
parts("nc", []) ->
    undefined;
parts("nc", Parts) ->
   [First | Rest] = Parts,
   nc(First, Rest);
parts("swatch", _Any) ->
    "swatch";
parts("cologne", _Any) ->
    "cologne";
parts("neustar", _Any) ->
    "neustar";
parts("sg", []) ->
    undefined;
parts("sg", Parts) ->
   [First | Rest] = Parts,
   sg(First, Rest);
parts("games", []) ->
    undefined;
parts("games", Parts) ->
   [First | Rest] = Parts,
   games(First, Rest);
parts("mq", _Any) ->
    "mq";
parts("nfl", _Any) ->
    "nfl";
parts("game", _Any) ->
    "game";
parts("bentley", _Any) ->
    "bentley";
parts("prime", _Any) ->
    "prime";
parts("day", _Any) ->
    "day";
parts("salon", _Any) ->
    "salon";
parts("aws", _Any) ->
    "aws";
parts("fans", _Any) ->
    "fans";
parts("bmw", _Any) ->
    "bmw";
parts("hiphop", _Any) ->
    "hiphop";
parts("sj", _Any) ->
    "sj";
parts("axa", _Any) ->
    "axa";
parts("creditunion", _Any) ->
    "creditunion";
parts("church", _Any) ->
    "church";
parts("madrid", _Any) ->
    "madrid";
parts("thd", _Any) ->
    "thd";
parts("camp", _Any) ->
    "camp";
parts("ar", []) ->
    undefined;
parts("ar", Parts) ->
   [First | Rest] = Parts,
   ar(First, Rest);
parts("praxi", _Any) ->
    "praxi";
parts("xbox", _Any) ->
    "xbox";
parts("red", _Any) ->
    "red";
parts("ski", _Any) ->
    "ski";
parts("ve", []) ->
    undefined;
parts("ve", Parts) ->
   [First | Rest] = Parts,
   ve(First, Rest);
parts("dclk", _Any) ->
    "dclk";
parts("apple", _Any) ->
    "apple";
parts("aarp", _Any) ->
    "aarp";
parts("zappos", _Any) ->
    "zappos";
parts("kerryhotels", _Any) ->
    "kerryhotels";
parts("redstone", _Any) ->
    "redstone";
parts("auction", _Any) ->
    "auction";
parts("expert", _Any) ->
    "expert";
parts("hdfcbank", _Any) ->
    "hdfcbank";
parts("anz", _Any) ->
    "anz";
parts("data", _Any) ->
    "data";
parts("bs", []) ->
    undefined;
parts("bs", Parts) ->
   [First | Rest] = Parts,
   bs(First, Rest);
parts("docs", _Any) ->
    "docs";
parts("na", []) ->
    undefined;
parts("na", Parts) ->
   [First | Rest] = Parts,
   na(First, Rest);
parts("bible", _Any) ->
    "bible";
parts("talk", _Any) ->
    "talk";
parts("estate", _Any) ->
    "estate";
parts("kz", []) ->
    undefined;
parts("kz", Parts) ->
   [First | Rest] = Parts,
   kz(First, Rest);
parts("plumbing", _Any) ->
    "plumbing";
parts("radio", _Any) ->
    "radio";
parts("pics", _Any) ->
    "pics";
parts("google", _Any) ->
    "google";
parts("broadway", _Any) ->
    "broadway";
parts("boutique", _Any) ->
    "boutique";
parts("mz", []) ->
    undefined;
parts("mz", Parts) ->
   [First | Rest] = Parts,
   mz(First, Rest);
parts("jprs", _Any) ->
    "jprs";
parts("barclays", _Any) ->
    "barclays";
parts("bike", _Any) ->
    "bike";
parts("ink", _Any) ->
    "ink";
parts("schaeffler", _Any) ->
    "schaeffler";
parts("works", _Any) ->
    "works";
parts("stream", _Any) ->
    "stream";
parts("statefarm", _Any) ->
    "statefarm";
parts("gifts", _Any) ->
    "gifts";
parts("py", []) ->
    undefined;
parts("py", Parts) ->
   [First | Rest] = Parts,
   py(First, Rest);
parts("secure", _Any) ->
    "secure";
parts("km", []) ->
    undefined;
parts("km", Parts) ->
   [First | Rest] = Parts,
   km(First, Rest);
parts("movie", _Any) ->
    "movie";
parts("holdings", _Any) ->
    "holdings";
parts("fashion", _Any) ->
    "fashion";
parts("fyi", _Any) ->
    "fyi";
parts("store", []) ->
    undefined;
parts("store", Parts) ->
   [First | Rest] = Parts,
   store(First, Rest);
parts("afl", _Any) ->
    "afl";
parts("sener", _Any) ->
    "sener";
parts("volvo", _Any) ->
    "volvo";
parts("joy", _Any) ->
    "joy";
parts("hisamitsu", _Any) ->
    "hisamitsu";
parts("cuisinella", _Any) ->
    "cuisinella";
parts("ceo", _Any) ->
    "ceo";
parts("audible", _Any) ->
    "audible";
parts("comsec", _Any) ->
    "comsec";
parts("gm", _Any) ->
    "gm";
parts("wed", _Any) ->
    "wed";
parts("saxo", _Any) ->
    "saxo";
parts("tmall", _Any) ->
    "tmall";
parts("bcn", _Any) ->
    "bcn";
parts("holiday", _Any) ->
    "holiday";
parts("ally", _Any) ->
    "ally";
parts("ac", []) ->
    undefined;
parts("ac", Parts) ->
   [First | Rest] = Parts,
   ac(First, Rest);
parts("gift", _Any) ->
    "gift";
parts("codes", _Any) ->
    "codes";
parts("cash", _Any) ->
    "cash";
parts("cab", _Any) ->
    "cab";
parts("work", _Any) ->
    "work";
parts("osaka", _Any) ->
    "osaka";
parts("hkt", _Any) ->
    "hkt";
parts("lease", _Any) ->
    "lease";
parts("reise", _Any) ->
    "reise";
parts("mobile", _Any) ->
    "mobile";
parts("lanxess", _Any) ->
    "lanxess";
parts("dental", _Any) ->
    "dental";
parts("godaddy", _Any) ->
    "godaddy";
parts("soccer", _Any) ->
    "soccer";
parts("kiwi", _Any) ->
    "kiwi";
parts("bot", _Any) ->
    "bot";
parts("blackfriday", _Any) ->
    "blackfriday";
parts("kfh", _Any) ->
    "kfh";
parts("meet", _Any) ->
    "meet";
parts("sn", []) ->
    undefined;
parts("sn", Parts) ->
   [First | Rest] = Parts,
   sn(First, Rest);
parts("investments", _Any) ->
    "investments";
parts("hn", []) ->
    undefined;
parts("hn", Parts) ->
   [First | Rest] = Parts,
   hn(First, Rest);
parts("bostik", _Any) ->
    "bostik";
parts("poker", _Any) ->
    "poker";
parts("dog", _Any) ->
    "dog";
parts("email", _Any) ->
    "email";
parts("ikano", _Any) ->
    "ikano";
parts("richardli", _Any) ->
    "richardli";
parts("team", []) ->
    undefined;
parts("team", Parts) ->
   [First | Rest] = Parts,
   team(First, Rest);
parts("weber", _Any) ->
    "weber";
parts("author", _Any) ->
    "author";
parts("fund", _Any) ->
    "fund";
parts("direct", _Any) ->
    "direct";
parts("monash", _Any) ->
    "monash";
parts("shell", _Any) ->
    "shell";
parts("abb", _Any) ->
    "abb";
parts("sew", _Any) ->
    "sew";
parts("barefoot", _Any) ->
    "barefoot";
parts("pub", []) ->
    undefined;
parts("pub", Parts) ->
   [First | Rest] = Parts,
   pub(First, Rest);
parts("baby", _Any) ->
    "baby";
parts("pizza", []) ->
    undefined;
parts("pizza", Parts) ->
   [First | Rest] = Parts,
   pizza(First, Rest);
parts("my", []) ->
    undefined;
parts("my", Parts) ->
   [First | Rest] = Parts,
   my(First, Rest);
parts("qa", []) ->
    undefined;
parts("qa", Parts) ->
   [First | Rest] = Parts,
   qa(First, Rest);
parts("rent", _Any) ->
    "rent";
parts("ventures", _Any) ->
    "ventures";
parts("pohl", _Any) ->
    "pohl";
parts("kpmg", _Any) ->
    "kpmg";
parts("wang", _Any) ->
    "wang";
parts("mil", _Any) ->
    "mil";
parts("tj", []) ->
    undefined;
parts("tj", Parts) ->
   [First | Rest] = Parts,
   tj(First, Rest);
parts("pm", []) ->
    undefined;
parts("pm", Parts) ->
   [First | Rest] = Parts,
   pm(First, Rest);
parts("florist", _Any) ->
    "florist";
parts("fidelity", _Any) ->
    "fidelity";
parts("capitalone", _Any) ->
    "capitalone";
parts("wolterskluwer", _Any) ->
    "wolterskluwer";
parts("cal", _Any) ->
    "cal";
parts("ky", []) ->
    undefined;
parts("ky", Parts) ->
   [First | Rest] = Parts,
   ky(First, Rest);
parts("flowers", _Any) ->
    "flowers";
parts("walmart", _Any) ->
    "walmart";
parts("pnc", _Any) ->
    "pnc";
parts("caravan", _Any) ->
    "caravan";
parts("oracle", _Any) ->
    "oracle";
parts("hangout", _Any) ->
    "hangout";
parts("fishing", _Any) ->
    "fishing";
parts("moe", _Any) ->
    "moe";
parts("jcb", _Any) ->
    "jcb";
parts("feedback", _Any) ->
    "feedback";
parts("va", _Any) ->
    "va";
parts("nico", _Any) ->
    "nico";
parts("theater", _Any) ->
    "theater";
parts("tg", _Any) ->
    "tg";
parts("nagoya", _Any) ->
    "nagoya";
parts("click", _Any) ->
    "click";
parts("ne", _Any) ->
    "ne";
parts("ly", []) ->
    undefined;
parts("ly", Parts) ->
   [First | Rest] = Parts,
   ly(First, Rest);
parts("wiki", []) ->
    undefined;
parts("wiki", Parts) ->
   [First | Rest] = Parts,
   wiki(First, Rest);
parts("is", []) ->
    undefined;
parts("is", Parts) ->
   [First | Rest] = Parts,
   is(First, Rest);
parts("sydney", _Any) ->
    "sydney";
parts("bofa", _Any) ->
    "bofa";
parts("lexus", _Any) ->
    "lexus";
parts("msd", _Any) ->
    "msd";
parts("hyundai", _Any) ->
    "hyundai";
parts("ru", []) ->
    undefined;
parts("ru", Parts) ->
   [First | Rest] = Parts,
   ru(First, Rest);
parts("za", []) ->
    undefined;
parts("za", Parts) ->
   [First | Rest] = Parts,
   za(First, Rest);
parts("fan", _Any) ->
    "fan";
parts("fage", _Any) ->
    "fage";
parts("tci", _Any) ->
    "tci";
parts("frl", _Any) ->
    "frl";
parts("gy", []) ->
    undefined;
parts("gy", Parts) ->
   [First | Rest] = Parts,
   gy(First, Rest);
parts("tatamotors", _Any) ->
    "tatamotors";
parts("cd", []) ->
    undefined;
parts("cd", Parts) ->
   [First | Rest] = Parts,
   cd(First, Rest);
parts("watches", _Any) ->
    "watches";
parts("id", []) ->
    undefined;
parts("id", Parts) ->
   [First | Rest] = Parts,
   id(First, Rest);
parts("lefrak", _Any) ->
    "lefrak";
parts("play", _Any) ->
    "play";
parts("mls", _Any) ->
    "mls";
parts("it", []) ->
    undefined;
parts("it", Parts) ->
   [First | Rest] = Parts,
   it(First, Rest);
parts("golf", _Any) ->
    "golf";
parts("tech", _Any) ->
    "tech";
parts("scholarships", _Any) ->
    "scholarships";
parts("cbn", _Any) ->
    "cbn";
parts("pictet", _Any) ->
    "pictet";
parts("tz", []) ->
    undefined;
parts("tz", Parts) ->
   [First | Rest] = Parts,
   tz(First, Rest);
parts("so", []) ->
    undefined;
parts("so", Parts) ->
   [First | Rest] = Parts,
   so(First, Rest);
parts("allstate", _Any) ->
    "allstate";
parts("yodobashi", _Any) ->
    "yodobashi";
parts("sport", _Any) ->
    "sport";
parts("be", []) ->
    undefined;
parts("be", Parts) ->
   [First | Rest] = Parts,
   be(First, Rest);
parts("ril", _Any) ->
    "ril";
parts("beats", _Any) ->
    "beats";
parts("ca", []) ->
    undefined;
parts("ca", Parts) ->
   [First | Rest] = Parts,
   ca(First, Rest);
parts("cleaning", _Any) ->
    "cleaning";
parts("frontier", _Any) ->
    "frontier";
parts("edeka", _Any) ->
    "edeka";
parts("hermes", _Any) ->
    "hermes";
parts("sharp", _Any) ->
    "sharp";
parts("arab", _Any) ->
    "arab";
parts("food", _Any) ->
    "food";
parts("rehab", _Any) ->
    "rehab";
parts("tunes", _Any) ->
    "tunes";
parts("kpn", _Any) ->
    "kpn";
parts("emerck", _Any) ->
    "emerck";
parts("hockey", _Any) ->
    "hockey";
parts("zero", _Any) ->
    "zero";
parts("whoswho", _Any) ->
    "whoswho";
parts("suzuki", _Any) ->
    "suzuki";
parts("catholic", _Any) ->
    "catholic";
parts("kred", _Any) ->
    "kred";
parts("clinique", _Any) ->
    "clinique";
parts("gay", []) ->
    undefined;
parts("gay", Parts) ->
   [First | Rest] = Parts,
   gay(First, Rest);
parts("gent", _Any) ->
    "gent";
parts("design", []) ->
    undefined;
parts("design", Parts) ->
   [First | Rest] = Parts,
   design(First, Rest);
parts("solutions", _Any) ->
    "solutions";
parts("otsuka", _Any) ->
    "otsuka";
parts("energy", _Any) ->
    "energy";
parts("mu", []) ->
    undefined;
parts("mu", Parts) ->
   [First | Rest] = Parts,
   mu(First, Rest);
parts("rwe", _Any) ->
    "rwe";
parts("sling", _Any) ->
    "sling";
parts("fr", []) ->
    undefined;
parts("fr", Parts) ->
   [First | Rest] = Parts,
   fr(First, Rest);
parts("tvs", _Any) ->
    "tvs";
parts("gi", []) ->
    undefined;
parts("gi", Parts) ->
   [First | Rest] = Parts,
   gi(First, Rest);
parts("nab", _Any) ->
    "nab";
parts("fail", _Any) ->
    "fail";
parts("cyou", _Any) ->
    "cyou";
parts("ltd", _Any) ->
    "ltd";
parts("haus", _Any) ->
    "haus";
parts("now", _Any) ->
    "now";
parts("bbc", _Any) ->
    "bbc";
parts("ieee", _Any) ->
    "ieee";
parts("sas", _Any) ->
    "sas";
parts("li", []) ->
    undefined;
parts("li", Parts) ->
   [First | Rest] = Parts,
   li(First, Rest);
parts("ice", _Any) ->
    "ice";
parts("observer", _Any) ->
    "observer";
parts("farmers", _Any) ->
    "farmers";
parts("xyz", []) ->
    undefined;
parts("xyz", Parts) ->
   [First | Rest] = Parts,
   xyz(First, Rest);
parts("lu", []) ->
    undefined;
parts("lu", Parts) ->
   [First | Rest] = Parts,
   lu(First, Rest);
parts("report", _Any) ->
    "report";
parts("infiniti", _Any) ->
    "infiniti";
parts("landrover", _Any) ->
    "landrover";
parts("flir", _Any) ->
    "flir";
parts("agency", _Any) ->
    "agency";
parts("tm", []) ->
    undefined;
parts("tm", Parts) ->
   [First | Rest] = Parts,
   tm(First, Rest);
parts("cricket", _Any) ->
    "cricket";
parts("exposed", _Any) ->
    "exposed";
parts("rio", _Any) ->
    "rio";
parts("quebec", _Any) ->
    "quebec";
parts("ki", []) ->
    undefined;
parts("ki", Parts) ->
   [First | Rest] = Parts,
   ki(First, Rest);
parts("dnp", _Any) ->
    "dnp";
parts("skin", _Any) ->
    "skin";
parts("ggee", _Any) ->
    "ggee";
parts("accountant", _Any) ->
    "accountant";
parts("gmx", _Any) ->
    "gmx";
parts("gu", []) ->
    undefined;
parts("gu", Parts) ->
   [First | Rest] = Parts,
   gu(First, Rest);
parts("engineer", _Any) ->
    "engineer";
parts("pwc", _Any) ->
    "pwc";
parts("origins", _Any) ->
    "origins";
parts("pay", _Any) ->
    "pay";
parts("kyoto", _Any) ->
    "kyoto";
parts("icbc", _Any) ->
    "icbc";
parts("delta", _Any) ->
    "delta";
parts("watch", _Any) ->
    "watch";
parts("mba", _Any) ->
    "mba";
parts("marriott", _Any) ->
    "marriott";
parts("weatherchannel", _Any) ->
    "weatherchannel";
parts("bond", _Any) ->
    "bond";
parts("fit", _Any) ->
    "fit";
parts("contractors", _Any) ->
    "contractors";
parts("cipriani", _Any) ->
    "cipriani";
parts("tours", _Any) ->
    "tours";
parts("buy", _Any) ->
    "buy";
parts("yamaxun", _Any) ->
    "yamaxun";
parts("af", []) ->
    undefined;
parts("af", Parts) ->
   [First | Rest] = Parts,
   af(First, Rest);
parts("smile", _Any) ->
    "smile";
parts("arpa", []) ->
    undefined;
parts("arpa", Parts) ->
   [First | Rest] = Parts,
   arpa(First, Rest);
parts("pictures", _Any) ->
    "pictures";
parts("lplfinancial", _Any) ->
    "lplfinancial";
parts("nike", _Any) ->
    "nike";
parts("dds", _Any) ->
    "dds";
parts("save", _Any) ->
    "save";
parts("football", _Any) ->
    "football";
parts("free", _Any) ->
    "free";
parts("ruhr", _Any) ->
    "ruhr";
parts("jll", _Any) ->
    "jll";
parts("mg", []) ->
    undefined;
parts("mg", Parts) ->
   [First | Rest] = Parts,
   mg(First, Rest);
parts("viva", _Any) ->
    "viva";
parts("sina", _Any) ->
    "sina";
parts("dubai", _Any) ->
    "dubai";
parts("ferrari", _Any) ->
    "ferrari";
parts("target", _Any) ->
    "target";
parts("company", _Any) ->
    "company";
parts("bing", _Any) ->
    "bing";
parts("sncf", _Any) ->
    "sncf";
parts("biz", []) ->
    undefined;
parts("biz", Parts) ->
   [First | Rest] = Parts,
   biz(First, Rest);
parts("black", _Any) ->
    "black";
parts("al", []) ->
    undefined;
parts("al", Parts) ->
   [First | Rest] = Parts,
   al(First, Rest);
parts("seek", _Any) ->
    "seek";
parts("bharti", _Any) ->
    "bharti";
parts("maif", _Any) ->
    "maif";
parts("ie", []) ->
    undefined;
parts("ie", Parts) ->
   [First | Rest] = Parts,
   ie(First, Rest);
parts("education", []) ->
    undefined;
parts("education", Parts) ->
   [First | Rest] = Parts,
   education(First, Rest);
parts("ubank", _Any) ->
    "ubank";
parts("gmo", _Any) ->
    "gmo";
parts("rip", []) ->
    undefined;
parts("rip", Parts) ->
   [First | Rest] = Parts,
   rip(First, Rest);
parts("ba", []) ->
    undefined;
parts("ba", Parts) ->
   [First | Rest] = Parts,
   ba(First, Rest);
parts("sx", []) ->
    undefined;
parts("sx", Parts) ->
   [First | Rest] = Parts,
   sx(First, Rest);
parts("int", []) ->
    undefined;
parts("int", Parts) ->
   [First | Rest] = Parts,
   int(First, Rest);
parts("bt", []) ->
    undefined;
parts("bt", Parts) ->
   [First | Rest] = Parts,
   bt(First, Rest);
parts("best", _Any) ->
    "best";
parts("eat", _Any) ->
    "eat";
parts("catering", _Any) ->
    "catering";
parts("aco", _Any) ->
    "aco";
parts("digital", []) ->
    undefined;
parts("digital", Parts) ->
   [First | Rest] = Parts,
   digital(First, Rest);
parts("tjx", _Any) ->
    "tjx";
parts("ltda", _Any) ->
    "ltda";
parts("bid", _Any) ->
    "bid";
parts("host", []) ->
    undefined;
parts("host", Parts) ->
   [First | Rest] = Parts,
   host(First, Rest);
parts("organic", _Any) ->
    "organic";
parts("baidu", _Any) ->
    "baidu";
parts("med", _Any) ->
    "med";
parts("vegas", _Any) ->
    "vegas";
parts("kg", []) ->
    undefined;
parts("kg", Parts) ->
   [First | Rest] = Parts,
   kg(First, Rest);
parts("cpa", _Any) ->
    "cpa";
parts("club", []) ->
    undefined;
parts("club", Parts) ->
   [First | Rest] = Parts,
   club(First, Rest);
parts("homegoods", _Any) ->
    "homegoods";
parts("wine", _Any) ->
    "wine";
parts("erni", _Any) ->
    "erni";
parts("school", _Any) ->
    "school";
parts("gg", []) ->
    undefined;
parts("gg", Parts) ->
   [First | Rest] = Parts,
   gg(First, Rest);
parts("room", _Any) ->
    "room";
parts("lidl", _Any) ->
    "lidl";
parts("pars", _Any) ->
    "pars";
parts("shop", []) ->
    undefined;
parts("shop", Parts) ->
   [First | Rest] = Parts,
   shop(First, Rest);
parts("plus", _Any) ->
    "plus";
parts("philips", _Any) ->
    "philips";
parts("properties", _Any) ->
    "properties";
parts("teva", _Any) ->
    "teva";
parts("cruises", _Any) ->
    "cruises";
parts("technology", []) ->
    undefined;
parts("technology", Parts) ->
   [First | Rest] = Parts,
   technology(First, Rest);
parts("surgery", _Any) ->
    "surgery";
parts("org", []) ->
    undefined;
parts("org", Parts) ->
   [First | Rest] = Parts,
   org(First, Rest);
parts("racing", _Any) ->
    "racing";
parts("do", []) ->
    undefined;
parts("do", Parts) ->
   [First | Rest] = Parts,
   do(First, Rest);
parts("toyota", _Any) ->
    "toyota";
parts("mortgage", _Any) ->
    "mortgage";
parts("nl", []) ->
    undefined;
parts("nl", Parts) ->
   [First | Rest] = Parts,
   nl(First, Rest);
parts("amica", _Any) ->
    "amica";
parts("schmidt", _Any) ->
    "schmidt";
parts("financial", []) ->
    undefined;
parts("financial", Parts) ->
   [First | Rest] = Parts,
   financial(First, Rest);
parts("casino", _Any) ->
    "casino";
parts("pn", []) ->
    undefined;
parts("pn", Parts) ->
   [First | Rest] = Parts,
   pn(First, Rest);
parts("mtr", _Any) ->
    "mtr";
parts("xihuan", _Any) ->
    "xihuan";
parts("komatsu", _Any) ->
    "komatsu";
parts("music", _Any) ->
    "music";
parts("wanggou", _Any) ->
    "wanggou";
parts("williamhill", _Any) ->
    "williamhill";
parts("pet", _Any) ->
    "pet";
parts("tw", []) ->
    undefined;
parts("tw", Parts) ->
   [First | Rest] = Parts,
   tw(First, Rest);
parts("vana", _Any) ->
    "vana";
parts("discover", _Any) ->
    "discover";
parts("nf", []) ->
    undefined;
parts("nf", Parts) ->
   [First | Rest] = Parts,
   nf(First, Rest);
parts("tube", _Any) ->
    "tube";
parts("yoga", _Any) ->
    "yoga";
parts("tirol", _Any) ->
    "tirol";
parts("city", _Any) ->
    "city";
parts("tushu", _Any) ->
    "tushu";
parts("dell", _Any) ->
    "dell";
parts("nec", _Any) ->
    "nec";
parts("americanfamily", _Any) ->
    "americanfamily";
parts("bom", _Any) ->
    "bom";
parts("to", []) ->
    undefined;
parts("to", Parts) ->
   [First | Rest] = Parts,
   to(First, Rest);
parts("sz", []) ->
    undefined;
parts("sz", Parts) ->
   [First | Rest] = Parts,
   sz(First, Rest);
parts("gop", _Any) ->
    "gop";
parts("guru", _Any) ->
    "guru";
parts("trv", _Any) ->
    "trv";
parts("wme", _Any) ->
    "wme";
parts("seven", _Any) ->
    "seven";
parts("aeg", _Any) ->
    "aeg";
parts("aquarelle", _Any) ->
    "aquarelle";
parts("flickr", _Any) ->
    "flickr";
parts("lipsy", _Any) ->
    "lipsy";
parts("moto", _Any) ->
    "moto";
parts("drive", _Any) ->
    "drive";
parts("omega", _Any) ->
    "omega";
parts("community", []) ->
    undefined;
parts("community", Parts) ->
   [First | Rest] = Parts,
   community(First, Rest);
parts("cards", _Any) ->
    "cards";
parts("law", _Any) ->
    "law";
parts("coop", _Any) ->
    "coop";
parts("select", _Any) ->
    "select";
parts("credit", _Any) ->
    "credit";
parts("pioneer", _Any) ->
    "pioneer";
parts("lamborghini", _Any) ->
    "lamborghini";
parts("hm", _Any) ->
    "hm";
parts("aero", []) ->
    undefined;
parts("aero", Parts) ->
   [First | Rest] = Parts,
   aero(First, Rest);
parts("lighting", _Any) ->
    "lighting";
parts("physio", _Any) ->
    "physio";
parts("istanbul", _Any) ->
    "istanbul";
parts("bridgestone", _Any) ->
    "bridgestone";
parts("youtube", _Any) ->
    "youtube";
parts("gucci", _Any) ->
    "gucci";
parts("construction", _Any) ->
    "construction";
parts("br", []) ->
    undefined;
parts("br", Parts) ->
   [First | Rest] = Parts,
   br(First, Rest);
parts("barclaycard", _Any) ->
    "barclaycard";
parts("sm", _Any) ->
    "sm";
parts("yahoo", _Any) ->
    "yahoo";
parts("cv", []) ->
    undefined;
parts("cv", Parts) ->
   [First | Rest] = Parts,
   cv(First, Rest);
parts("tips", _Any) ->
    "tips";
parts("eg", []) ->
    undefined;
parts("eg", Parts) ->
   [First | Rest] = Parts,
   eg(First, Rest);
parts("republican", _Any) ->
    "republican";
parts("phd", _Any) ->
    "phd";
parts("visa", _Any) ->
    "visa";
parts("sbi", _Any) ->
    "sbi";
parts("bh", []) ->
    undefined;
parts("bh", Parts) ->
   [First | Rest] = Parts,
   bh(First, Rest);
parts("dtv", _Any) ->
    "dtv";
parts("flights", _Any) ->
    "flights";
parts("fast", _Any) ->
    "fast";
parts("lat", _Any) ->
    "lat";
parts("delivery", _Any) ->
    "delivery";
parts("agakhan", _Any) ->
    "agakhan";
parts("sfr", _Any) ->
    "sfr";
parts("guide", _Any) ->
    "guide";
parts("nextdirect", _Any) ->
    "nextdirect";
parts("mckinsey", _Any) ->
    "mckinsey";
parts("wien", _Any) ->
    "wien";
parts("trading", _Any) ->
    "trading";
parts("as", []) ->
    undefined;
parts("as", Parts) ->
   [First | Rest] = Parts,
   as(First, Rest);
parts("enterprises", _Any) ->
    "enterprises";
parts("cool", []) ->
    undefined;
parts("cool", Parts) ->
   [First | Rest] = Parts,
   cool(First, Rest);
parts("netflix", _Any) ->
    "netflix";
parts("global", _Any) ->
    "global";
parts("saarland", _Any) ->
    "saarland";
parts("fire", _Any) ->
    "fire";
parts("je", []) ->
    undefined;
parts("je", Parts) ->
   [First | Rest] = Parts,
   je(First, Rest);
parts("intuit", _Any) ->
    "intuit";
parts("travel", _Any) ->
    "travel";
parts("jnj", _Any) ->
    "jnj";
parts("softbank", _Any) ->
    "softbank";
parts("kn", []) ->
    undefined;
parts("kn", Parts) ->
   [First | Rest] = Parts,
   kn(First, Rest);
parts("reviews", _Any) ->
    "reviews";
parts("ryukyu", _Any) ->
    "ryukyu";
parts("stcgroup", _Any) ->
    "stcgroup";
parts("bv", _Any) ->
    "bv";
parts("orange", []) ->
    undefined;
parts("orange", Parts) ->
   [First | Rest] = Parts,
   orange(First, Rest);
parts("tokyo", _Any) ->
    "tokyo";
parts("chat", _Any) ->
    "chat";
parts("uk", []) ->
    undefined;
parts("uk", Parts) ->
   [First | Rest] = Parts,
   uk(First, Rest);
parts("lpl", _Any) ->
    "lpl";
parts("cr", []) ->
    undefined;
parts("cr", Parts) ->
   [First | Rest] = Parts,
   cr(First, Rest);
parts("ups", _Any) ->
    "ups";
parts("ir", []) ->
    undefined;
parts("ir", Parts) ->
   [First | Rest] = Parts,
   ir(First, Rest);
parts("glass", _Any) ->
    "glass";
parts("goo", _Any) ->
    "goo";
parts("rw", []) ->
    undefined;
parts("rw", Parts) ->
   [First | Rest] = Parts,
   rw(First, Rest);
parts("doctor", _Any) ->
    "doctor";
parts("dm", []) ->
    undefined;
parts("dm", Parts) ->
   [First | Rest] = Parts,
   dm(First, Rest);
parts("dev", []) ->
    undefined;
parts("dev", Parts) ->
   [First | Rest] = Parts,
   dev(First, Rest);
parts("sohu", _Any) ->
    "sohu";
parts("xerox", _Any) ->
    "xerox";
parts("vote", _Any) ->
    "vote";
parts("run", []) ->
    undefined;
parts("run", Parts) ->
   [First | Rest] = Parts,
   run(First, Rest);
parts("ch", []) ->
    undefined;
parts("ch", Parts) ->
   [First | Rest] = Parts,
   ch(First, Rest);
parts("commbank", _Any) ->
    "commbank";
parts("hdfc", _Any) ->
    "hdfc";
parts("ro", []) ->
    undefined;
parts("ro", Parts) ->
   [First | Rest] = Parts,
   ro(First, Rest);
parts("yandex", _Any) ->
    "yandex";
parts("ua", []) ->
    undefined;
parts("ua", Parts) ->
   [First | Rest] = Parts,
   ua(First, Rest);
parts("blockbuster", _Any) ->
    "blockbuster";
parts("show", _Any) ->
    "show";
parts("gn", []) ->
    undefined;
parts("gn", Parts) ->
   [First | Rest] = Parts,
   gn(First, Rest);
parts("claims", _Any) ->
    "claims";
parts("bms", _Any) ->
    "bms";
parts("walter", _Any) ->
    "walter";
parts("politie", _Any) ->
    "politie";
parts("limo", _Any) ->
    "limo";
parts("dz", []) ->
    undefined;
parts("dz", Parts) ->
   [First | Rest] = Parts,
   dz(First, Rest);
parts("academy", []) ->
    undefined;
parts("academy", Parts) ->
   [First | Rest] = Parts,
   academy(First, Rest);
parts("sy", []) ->
    undefined;
parts("sy", Parts) ->
   [First | Rest] = Parts,
   sy(First, Rest);
parts("eu", []) ->
    undefined;
parts("eu", Parts) ->
   [First | Rest] = Parts,
   eu(First, Rest);
parts("lotte", _Any) ->
    "lotte";
parts("protection", _Any) ->
    "protection";
parts("discount", _Any) ->
    "discount";
parts("supply", _Any) ->
    "supply";
parts("com", []) ->
    undefined;
parts("com", Parts) ->
   [First | Rest] = Parts,
   com(First, Rest);
parts("garden", _Any) ->
    "garden";
parts("dish", _Any) ->
    "dish";
parts("win", _Any) ->
    "win";
parts("lol", []) ->
    undefined;
parts("lol", Parts) ->
   [First | Rest] = Parts,
   lol(First, Rest);
parts("virgin", _Any) ->
    "virgin";
parts("motorcycles", _Any) ->
    "motorcycles";
parts("olayan", _Any) ->
    "olayan";
parts("krd", []) ->
    undefined;
parts("krd", Parts) ->
   [First | Rest] = Parts,
   krd(First, Rest);
parts("futbol", _Any) ->
    "futbol";
parts("industries", _Any) ->
    "industries";
parts("lego", _Any) ->
    "lego";
parts("computer", _Any) ->
    "computer";
parts("mn", []) ->
    undefined;
parts("mn", Parts) ->
   [First | Rest] = Parts,
   mn(First, Rest);
parts("weibo", _Any) ->
    "weibo";
parts("help", _Any) ->
    "help";
parts("cc", []) ->
    undefined;
parts("cc", Parts) ->
   [First | Rest] = Parts,
   cc(First, Rest);
parts("tdk", _Any) ->
    "tdk";
parts("xin", _Any) ->
    "xin";
parts("press", _Any) ->
    "press";
parts("mma", _Any) ->
    "mma";
parts("training", _Any) ->
    "training";
parts("vodka", _Any) ->
    "vodka";
parts("barcelona", _Any) ->
    "barcelona";
parts("et", []) ->
    undefined;
parts("et", Parts) ->
   [First | Rest] = Parts,
   et(First, Rest);
parts("athleta", _Any) ->
    "athleta";
parts("in", []) ->
    undefined;
parts("in", Parts) ->
   [First | Rest] = Parts,
   in(First, Rest);
parts("cn", []) ->
    undefined;
parts("cn", Parts) ->
   [First | Rest] = Parts,
   cn(First, Rest);
parts("goldpoint", _Any) ->
    "goldpoint";
parts("aig", _Any) ->
    "aig";
parts("mc", []) ->
    undefined;
parts("mc", Parts) ->
   [First | Rest] = Parts,
   mc(First, Rest);
parts("asda", _Any) ->
    "asda";
parts("grocery", _Any) ->
    "grocery";
parts("baseball", _Any) ->
    "baseball";
parts("extraspace", _Any) ->
    "extraspace";
parts("mom", _Any) ->
    "mom";
parts("you", _Any) ->
    "you";
parts("allfinanz", _Any) ->
    "allfinanz";
parts("toshiba", _Any) ->
    "toshiba";
parts("gh", []) ->
    undefined;
parts("gh", Parts) ->
   [First | Rest] = Parts,
   gh(First, Rest);
parts("vision", _Any) ->
    "vision";
parts("onion", _Any) ->
    "onion";
parts("bbva", _Any) ->
    "bbva";
parts("kr", []) ->
    undefined;
parts("kr", Parts) ->
   [First | Rest] = Parts,
   kr(First, Rest);
parts("total", _Any) ->
    "total";
parts("ollo", _Any) ->
    "ollo";
parts("solar", _Any) ->
    "solar";
parts("irish", _Any) ->
    "irish";
parts("directory", _Any) ->
    "directory";
parts("bar", _Any) ->
    "bar";
parts("bargains", _Any) ->
    "bargains";
parts("equipment", _Any) ->
    "equipment";
parts("az", []) ->
    undefined;
parts("az", Parts) ->
   [First | Rest] = Parts,
   az(First, Rest);
parts("media", []) ->
    undefined;
parts("media", Parts) ->
   [First | Rest] = Parts,
   media(First, Rest);
parts("miami", _Any) ->
    "miami";
parts("gov", _Any) ->
    "gov";
parts("gr", []) ->
    undefined;
parts("gr", Parts) ->
   [First | Rest] = Parts,
   gr(First, Rest);
parts("honda", _Any) ->
    "honda";
parts("akdn", _Any) ->
    "akdn";
parts("ibm", _Any) ->
    "ibm";
parts("ubs", _Any) ->
    "ubs";
parts("lr", []) ->
    undefined;
parts("lr", Parts) ->
   [First | Rest] = Parts,
   lr(First, Rest);
parts("diet", _Any) ->
    "diet";
parts("staples", _Any) ->
    "staples";
parts("hosting", []) ->
    undefined;
parts("hosting", Parts) ->
   [First | Rest] = Parts,
   hosting(First, Rest);
parts("basketball", []) ->
    undefined;
parts("basketball", Parts) ->
   [First | Rest] = Parts,
   basketball(First, Rest);
parts("dot", _Any) ->
    "dot";
parts("am", []) ->
    undefined;
parts("am", Parts) ->
   [First | Rest] = Parts,
   am(First, Rest);
parts("bloomberg", _Any) ->
    "bloomberg";
parts("wf", []) ->
    undefined;
parts("wf", Parts) ->
   [First | Rest] = Parts,
   wf(First, Rest);
parts("sexy", _Any) ->
    "sexy";
parts("read", _Any) ->
    "read";
parts("fi", []) ->
    undefined;
parts("fi", Parts) ->
   [First | Rest] = Parts,
   fi(First, Rest);
parts("phone", _Any) ->
    "phone";
parts("link", []) ->
    undefined;
parts("link", Parts) ->
   [First | Rest] = Parts,
   link(First, Rest);
parts("autos", _Any) ->
    "autos";
parts("box", _Any) ->
    "box";
parts("sex", _Any) ->
    "sex";
parts("mh", _Any) ->
    "mh";
parts("zw", []) ->
    undefined;
parts("zw", Parts) ->
   [First | Rest] = Parts,
   zw(First, Rest);
parts("lc", []) ->
    undefined;
parts("lc", Parts) ->
   [First | Rest] = Parts,
   lc(First, Rest);
parts("ifm", _Any) ->
    "ifm";
parts("chrome", _Any) ->
    "chrome";
parts("redumbrella", _Any) ->
    "redumbrella";
parts("fedex", _Any) ->
    "fedex";
parts("auto", _Any) ->
    "auto";
parts("mov", _Any) ->
    "mov";
parts("mr", []) ->
    undefined;
parts("mr", Parts) ->
   [First | Rest] = Parts,
   mr(First, Rest);
parts("gold", _Any) ->
    "gold";
parts("nowruz", _Any) ->
    "nowruz";
parts("group", []) ->
    undefined;
parts("group", Parts) ->
   [First | Rest] = Parts,
   group(First, Rest);
parts("ss", []) ->
    undefined;
parts("ss", Parts) ->
   [First | Rest] = Parts,
   ss(First, Rest);
parts("alibaba", _Any) ->
    "alibaba";
parts("trust", _Any) ->
    "trust";
parts("hair", _Any) ->
    "hair";
parts("progressive", _Any) ->
    "progressive";
parts("cruise", _Any) ->
    "cruise";
parts("hiv", _Any) ->
    "hiv";
parts("vin", _Any) ->
    "vin";
parts("name", []) ->
    undefined;
parts("name", Parts) ->
   [First | Rest] = Parts,
   name(First, Rest);
parts("juegos", _Any) ->
    "juegos";
parts("pr", []) ->
    undefined;
parts("pr", Parts) ->
   [First | Rest] = Parts,
   pr(First, Rest);
parts("sap", _Any) ->
    "sap";
parts("llp", _Any) ->
    "llp";
parts("archi", _Any) ->
    "archi";
parts("wtc", _Any) ->
    "wtc";
parts("shoes", _Any) ->
    "shoes";
parts("kids", _Any) ->
    "kids";
parts("ismaili", _Any) ->
    "ismaili";
parts("wales", _Any) ->
    "wales";
parts("lgbt", _Any) ->
    "lgbt";
parts("realty", _Any) ->
    "realty";
parts("foundation", _Any) ->
    "foundation";
parts("fairwinds", _Any) ->
    "fairwinds";
parts("qpon", _Any) ->
    "qpon";
parts("jewelry", _Any) ->
    "jewelry";
parts("forsale", _Any) ->
    "forsale";
parts("durban", _Any) ->
    "durban";
parts("gratis", _Any) ->
    "gratis";
parts("tl", []) ->
    undefined;
parts("tl", Parts) ->
   [First | Rest] = Parts,
   tl(First, Rest);
parts("voting", _Any) ->
    "voting";
parts("support", []) ->
    undefined;
parts("support", Parts) ->
   [First | Rest] = Parts,
   support(First, Rest);
parts("jmp", _Any) ->
    "jmp";
parts("mattel", _Any) ->
    "mattel";
parts("homesense", _Any) ->
    "homesense";
parts("social", _Any) ->
    "social";
parts("no", []) ->
    undefined;
parts("no", Parts) ->
   [First | Rest] = Parts,
   no(First, Rest);
parts("ren", _Any) ->
    "ren";
parts("mv", []) ->
    undefined;
parts("mv", Parts) ->
   [First | Rest] = Parts,
   mv(First, Rest);
parts("stockholm", _Any) ->
    "stockholm";
parts("amazon", _Any) ->
    "amazon";
parts("jobs", _Any) ->
    "jobs";
parts("brother", _Any) ->
    "brother";
parts("productions", _Any) ->
    "productions";
parts("tf", []) ->
    undefined;
parts("tf", Parts) ->
   [First | Rest] = Parts,
   tf(First, Rest);
parts("restaurant", _Any) ->
    "restaurant";
parts("ph", []) ->
    undefined;
parts("ph", Parts) ->
   [First | Rest] = Parts,
   ph(First, Rest);
parts("download", _Any) ->
    "download";
parts("mlb", _Any) ->
    "mlb";
parts("amex", _Any) ->
    "amex";
parts("gmbh", _Any) ->
    "gmbh";
parts("bn", []) ->
    undefined;
parts("bn", Parts) ->
   [First | Rest] = Parts,
   bn(First, Rest);
parts("ee", []) ->
    undefined;
parts("ee", Parts) ->
   [First | Rest] = Parts,
   ee(First, Rest);
parts("spot", _Any) ->
    "spot";
parts("mit", _Any) ->
    "mit";
parts("bank", _Any) ->
    "bank";
parts("bet", _Any) ->
    "bet";
parts("shouji", _Any) ->
    "shouji";
parts("clothing", _Any) ->
    "clothing";
parts("cat", _Any) ->
    "cat";
parts("fj", []) ->
    undefined;
parts("fj", Parts) ->
   [First | Rest] = Parts,
   fj(First, Rest);
parts("hughes", _Any) ->
    "hughes";
parts("samsung", _Any) ->
    "samsung";
parts("network", []) ->
    undefined;
parts("network", Parts) ->
   [First | Rest] = Parts,
   network(First, Rest);
parts("hot", _Any) ->
    "hot";
parts("genting", _Any) ->
    "genting";
parts("om", []) ->
    undefined;
parts("om", Parts) ->
   [First | Rest] = Parts,
   om(First, Rest);
parts("gallo", _Any) ->
    "gallo";
parts("rexroth", _Any) ->
    "rexroth";
parts("shopping", _Any) ->
    "shopping";
parts("boo", _Any) ->
    "boo";
parts("ug", []) ->
    undefined;
parts("ug", Parts) ->
   [First | Rest] = Parts,
   ug(First, Rest);
parts("obi", _Any) ->
    "obi";
parts("pink", _Any) ->
    "pink";
parts("car", _Any) ->
    "car";
parts("woodside", _Any) ->
    "woodside";
parts("canon", _Any) ->
    "canon";
parts("abogado", _Any) ->
    "abogado";
parts("monster", _Any) ->
    "monster";
parts("tiaa", _Any) ->
    "tiaa";
parts("storage", _Any) ->
    "storage";
parts("tienda", _Any) ->
    "tienda";
parts("lv", []) ->
    undefined;
parts("lv", Parts) ->
   [First | Rest] = Parts,
   lv(First, Rest);
parts("how", _Any) ->
    "how";
parts("jetzt", _Any) ->
    "jetzt";
parts("insure", _Any) ->
    "insure";
parts("pid", _Any) ->
    "pid";
parts("zip", _Any) ->
    "zip";
parts("services", []) ->
    undefined;
parts("services", Parts) ->
   [First | Rest] = Parts,
   services(First, Rest);
parts("software", _Any) ->
    "software";
parts("museum", _Any) ->
    "museum";
parts("video", _Any) ->
    "video";
parts("cafe", _Any) ->
    "cafe";
parts("love", _Any) ->
    "love";
parts("review", []) ->
    undefined;
parts("review", Parts) ->
   [First | Rest] = Parts,
   review(First, Rest);
parts("hsbc", _Any) ->
    "hsbc";
parts("porn", []) ->
    undefined;
parts("porn", Parts) ->
   [First | Rest] = Parts,
   porn(First, Rest);
parts("viajes", _Any) ->
    "viajes";
parts("blue", _Any) ->
    "blue";
parts("apartments", _Any) ->
    "apartments";
parts("rocks", []) ->
    undefined;
parts("rocks", Parts) ->
   [First | Rest] = Parts,
   rocks(First, Rest);
parts("pa", []) ->
    undefined;
parts("pa", Parts) ->
   [First | Rest] = Parts,
   pa(First, Rest);
parts("pt", []) ->
    undefined;
parts("pt", Parts) ->
   [First | Rest] = Parts,
   pt(First, Rest);
parts("scb", _Any) ->
    "scb";
parts("vlaanderen", _Any) ->
    "vlaanderen";
parts("ao", []) ->
    undefined;
parts("ao", Parts) ->
   [First | Rest] = Parts,
   ao(First, Rest);
parts("dhl", _Any) ->
    "dhl";
parts("android", _Any) ->
    "android";
parts("luxury", _Any) ->
    "luxury";
parts("navy", _Any) ->
    "navy";
parts("family", _Any) ->
    "family";
parts("wow", _Any) ->
    "wow";
parts("cfa", _Any) ->
    "cfa";
parts("shiksha", _Any) ->
    "shiksha";
parts("consulting", _Any) ->
    "consulting";
parts("zm", []) ->
    undefined;
parts("zm", Parts) ->
   [First | Rest] = Parts,
   zm(First, Rest);
parts("prudential", _Any) ->
    "prudential";
parts("vip", _Any) ->
    "vip";
parts("olayangroup", _Any) ->
    "olayangroup";
parts("me", []) ->
    undefined;
parts("me", Parts) ->
   [First | Rest] = Parts,
   me(First, Rest);
parts("helsinki", _Any) ->
    "helsinki";
parts("fox", _Any) ->
    "fox";
parts("aw", []) ->
    undefined;
parts("aw", Parts) ->
   [First | Rest] = Parts,
   aw(First, Rest);
parts("pk", []) ->
    undefined;
parts("pk", Parts) ->
   [First | Rest] = Parts,
   pk(First, Rest);
parts("channel", _Any) ->
    "channel";
parts("joburg", _Any) ->
    "joburg";
parts("shaw", _Any) ->
    "shaw";
parts("bi", []) ->
    undefined;
parts("bi", Parts) ->
   [First | Rest] = Parts,
   bi(First, Rest);
parts("sakura", _Any) ->
    "sakura";
parts("berlin", _Any) ->
    "berlin";
parts("mint", _Any) ->
    "mint";
parts("stc", _Any) ->
    "stc";
parts("ke", []) ->
    undefined;
parts("ke", Parts) ->
   [First | Rest] = Parts,
   ke(First, Rest);
parts("mini", _Any) ->
    "mini";
parts("jeep", _Any) ->
    "jeep";
parts("ftr", _Any) ->
    "ftr";
parts("llc", _Any) ->
    "llc";
parts("ads", _Any) ->
    "ads";
parts("vig", _Any) ->
    "vig";
parts("life", _Any) ->
    "life";
parts("eurovision", _Any) ->
    "eurovision";
parts("college", _Any) ->
    "college";
parts("sanofi", _Any) ->
    "sanofi";
parts("reit", _Any) ->
    "reit";
parts("winners", _Any) ->
    "winners";
parts("cg", _Any) ->
    "cg";
parts("asia", []) ->
    undefined;
parts("asia", Parts) ->
   [First | Rest] = Parts,
   asia(First, Rest);
parts("yt", []) ->
    undefined;
parts("yt", Parts) ->
   [First | Rest] = Parts,
   yt(First, Rest);
parts("hyatt", _Any) ->
    "hyatt";
parts("alstom", _Any) ->
    "alstom";
parts("space", []) ->
    undefined;
parts("space", Parts) ->
   [First | Rest] = Parts,
   space(First, Rest);
parts("nexus", _Any) ->
    "nexus";
parts("ping", _Any) ->
    "ping";
parts("abbvie", _Any) ->
    "abbvie";
parts("weir", _Any) ->
    "weir";
parts("security", _Any) ->
    "security";
parts("leclerc", _Any) ->
    "leclerc";
parts("ong", _Any) ->
    "ong";
parts("viking", _Any) ->
    "viking";
parts("film", _Any) ->
    "film";
parts("hotmail", _Any) ->
    "hotmail";
parts("army", _Any) ->
    "army";
parts("accenture", _Any) ->
    "accenture";
parts("institute", _Any) ->
    "institute";
parts("healthcare", _Any) ->
    "healthcare";
parts("ge", []) ->
    undefined;
parts("ge", Parts) ->
   [First | Rest] = Parts,
   ge(First, Rest);
parts("cba", _Any) ->
    "cba";
parts("boston", _Any) ->
    "boston";
parts("locus", _Any) ->
    "locus";
parts("sale", _Any) ->
    "sale";
parts("song", _Any) ->
    "song";
parts("lamer", _Any) ->
    "lamer";
parts("immobilien", _Any) ->
    "immobilien";
parts("abudhabi", _Any) ->
    "abudhabi";
parts("adult", _Any) ->
    "adult";
parts("foo", _Any) ->
    "foo";
parts("anquan", _Any) ->
    "anquan";
parts("lk", []) ->
    undefined;
parts("lk", Parts) ->
   [First | Rest] = Parts,
   lk(First, Rest);
parts("nra", _Any) ->
    "nra";
parts("lincoln", _Any) ->
    "lincoln";
parts("party", []) ->
    undefined;
parts("party", Parts) ->
   [First | Rest] = Parts,
   party(First, Rest);
parts("bg", []) ->
    undefined;
parts("bg", Parts) ->
   [First | Rest] = Parts,
   bg(First, Rest);
parts("lancaster", _Any) ->
    "lancaster";
parts("tatar", _Any) ->
    "tatar";
parts("soy", _Any) ->
    "soy";
parts("nz", []) ->
    undefined;
parts("nz", Parts) ->
   [First | Rest] = Parts,
   nz(First, Rest);
parts("ye", []) ->
    undefined;
parts("ye", Parts) ->
   [First | Rest] = Parts,
   ye(First, Rest);
parts("playstation", _Any) ->
    "playstation";
parts("azure", _Any) ->
    "azure";
parts("lt", []) ->
    undefined;
parts("lt", Parts) ->
   [First | Rest] = Parts,
   lt(First, Rest);
parts("studio", _Any) ->
    "studio";
parts("africa", _Any) ->
    "africa";
parts("smart", _Any) ->
    "smart";
parts("panasonic", _Any) ->
    "panasonic";
parts("norton", _Any) ->
    "norton";
parts("ws", []) ->
    undefined;
parts("ws", Parts) ->
   [First | Rest] = Parts,
   ws(First, Rest);
parts("sl", []) ->
    undefined;
parts("sl", Parts) ->
   [First | Rest] = Parts,
   sl(First, Rest);
parts("la", []) ->
    undefined;
parts("la", Parts) ->
   [First | Rest] = Parts,
   la(First, Rest);
parts("audi", _Any) ->
    "audi";
parts("tax", _Any) ->
    "tax";
parts("samsclub", _Any) ->
    "samsclub";
parts("christmas", _Any) ->
    "christmas";
parts("trade", []) ->
    undefined;
parts("trade", Parts) ->
   [First | Rest] = Parts,
   trade(First, Rest);
parts("rich", _Any) ->
    "rich";
parts("gt", []) ->
    undefined;
parts("gt", Parts) ->
   [First | Rest] = Parts,
   gt(First, Rest);
parts("gd", []) ->
    undefined;
parts("gd", Parts) ->
   [First | Rest] = Parts,
   gd(First, Rest);
parts("buzz", _Any) ->
    "buzz";
parts("ga", _Any) ->
    "ga";
parts("forum", _Any) ->
    "forum";
parts("lilly", _Any) ->
    "lilly";
parts("swiss", _Any) ->
    "swiss";
parts("aq", _Any) ->
    "aq";
parts("tel", _Any) ->
    "tel";
parts("toys", _Any) ->
    "toys";
parts("bj", []) ->
    undefined;
parts("bj", Parts) ->
   [First | Rest] = Parts,
   bj(First, Rest);
parts("aaa", _Any) ->
    "aaa";
parts("vanguard", _Any) ->
    "vanguard";
parts("onl", _Any) ->
    "onl";
parts("nhk", _Any) ->
    "nhk";
parts("deal", _Any) ->
    "deal";
parts("pfizer", _Any) ->
    "pfizer";
parts("cu", []) ->
    undefined;
parts("cu", Parts) ->
   [First | Rest] = Parts,
   cu(First, Rest);
parts("analytics", _Any) ->
    "analytics";
parts("realtor", _Any) ->
    "realtor";
parts("horse", _Any) ->
    "horse";
parts("abbott", _Any) ->
    "abbott";
parts("democrat", _Any) ->
    "democrat";
parts("bradesco", _Any) ->
    "bradesco";
parts("gripe", _Any) ->
    "gripe";
parts("fresenius", _Any) ->
    "fresenius";
parts("tab", _Any) ->
    "tab";
parts("ax", []) ->
    undefined;
parts("ax", Parts) ->
   [First | Rest] = Parts,
   ax(First, Rest);
parts("rs", []) ->
    undefined;
parts("rs", Parts) ->
   [First | Rest] = Parts,
   rs(First, Rest);
parts("ngo", _Any) ->
    "ngo";
parts("windows", _Any) ->
    "windows";
parts("pe", []) ->
    undefined;
parts("pe", Parts) ->
   [First | Rest] = Parts,
   pe(First, Rest);
parts("care", _Any) ->
    "care";
parts("mk", []) ->
    undefined;
parts("mk", Parts) ->
   [First | Rest] = Parts,
   mk(First, Rest);
parts("sb", []) ->
    undefined;
parts("sb", Parts) ->
   [First | Rest] = Parts,
   sb(First, Rest);
parts("srl", _Any) ->
    "srl";
parts("green", _Any) ->
    "green";
parts("locker", _Any) ->
    "locker";
parts("recipes", _Any) ->
    "recipes";
parts("hotels", _Any) ->
    "hotels";
parts("clubmed", _Any) ->
    "clubmed";
parts("rogers", _Any) ->
    "rogers";
parts("yokohama", _Any) ->
    "yokohama";
parts("business", []) ->
    undefined;
parts("business", Parts) ->
   [First | Rest] = Parts,
   business(First, Rest);
parts("mt", []) ->
    undefined;
parts("mt", Parts) ->
   [First | Rest] = Parts,
   mt(First, Rest);
parts("imamat", _Any) ->
    "imamat";
parts("md", []) ->
    undefined;
parts("md", Parts) ->
   [First | Rest] = Parts,
   md(First, Rest);
parts("uol", _Any) ->
    "uol";
parts("cars", _Any) ->
    "cars";
parts("ci", []) ->
    undefined;
parts("ci", Parts) ->
   [First | Rest] = Parts,
   ci(First, Rest);
parts("ec", []) ->
    undefined;
parts("ec", Parts) ->
   [First | Rest] = Parts,
   ec(First, Rest);
parts("deals", _Any) ->
    "deals";
parts("search", _Any) ->
    "search";
parts("reliance", _Any) ->
    "reliance";
parts("ma", []) ->
    undefined;
parts("ma", Parts) ->
   [First | Rest] = Parts,
   ma(First, Rest);
parts(First, _) ->
	First.

%% regular rules
mobi("dscloud", _Any) ->
    "dscloud.mobi";

mobi("barsy", _Any) ->
    "barsy.mobi";


mobi(_, _) ->
    "mobi".

%% regular rules
hr("iz", _Any) ->
    "iz.hr";

hr("blogspot", _Any) ->
    "blogspot.hr";

hr("from", _Any) ->
    "from.hr";

hr("com", _Any) ->
    "com.hr";

hr("free", _Any) ->
    "free.hr";

hr("name", _Any) ->
    "name.hr";


hr(_, _) ->
    "hr".

%% regular rules
builders("cloudsite", _Any) ->
    "cloudsite.builders";


builders(_, _) ->
    "builders".

%% regular rules
eus("party", []) ->
    "party.eus";
eus("party", Parts) ->
    [First | Rest] = Parts,
    party_eus(First, Rest);


eus(_, _) ->
    "eus".

%% regular rules
party_eus("user", _Any) ->
    "user.party.eus";


party_eus(_, _) ->
    "party.eus".

%% regular rules
news("noticeable", _Any) ->
    "noticeable.news";


news(_, _) ->
    "news".

%% regular rules
ms("edu", _Any) ->
    "edu.ms";

ms("com", _Any) ->
    "com.ms";

ms("org", _Any) ->
    "org.ms";

ms("minisite", _Any) ->
    "minisite.ms";

ms("net", _Any) ->
    "net.ms";

ms("gov", _Any) ->
    "gov.ms";

ms("lab", _Any) ->
    "lab.ms";


ms(_, _) ->
    "ms".

%% regular rules
bm("gov", _Any) ->
    "gov.bm";

bm("org", _Any) ->
    "org.bm";

bm("net", _Any) ->
    "net.bm";

bm("edu", _Any) ->
    "edu.bm";

bm("com", _Any) ->
    "com.bm";


bm(_, _) ->
    "bm".

%% regular rules
vu("dev", _Any) ->
    "dev.vu";

vu("blog", _Any) ->
    "blog.vu";

vu("com", _Any) ->
    "com.vu";

vu("net", _Any) ->
    "net.vu";

vu("cn", _Any) ->
    "cn.vu";

vu("edu", _Any) ->
    "edu.vu";

vu("org", _Any) ->
    "org.vu";

vu("me", _Any) ->
    "me.vu";


vu(_, _) ->
    "vu".

%% regular rules
vi("co", _Any) ->
    "co.vi";

vi("net", _Any) ->
    "net.vi";

vi("com", _Any) ->
    "com.vi";

vi("org", _Any) ->
    "org.vi";


vi(_, _) ->
    "vi".

%% regular rules
sh("mil", _Any) ->
    "mil.sh";

sh("com", _Any) ->
    "com.sh";

sh("hashbang", _Any) ->
    "hashbang.sh";

sh("now", _Any) ->
    "now.sh";

sh("wedeploy", _Any) ->
    "wedeploy.sh";

sh("gov", _Any) ->
    "gov.sh";

sh("net", _Any) ->
    "net.sh";

sh("bip", _Any) ->
    "bip.sh";

sh("vxl", _Any) ->
    "vxl.sh";

sh("platform", []) ->
    "platform.sh";
sh("platform", Parts) ->
    [First | Rest] = Parts,
    platform_sh(First, Rest);

sh("org", _Any) ->
    "org.sh";


sh(_, _) ->
    "sh".

%% regular rules
platform_sh("us", _Any) ->
    "us.platform.sh";

platform_sh("eu", _Any) ->
    "eu.platform.sh";

platform_sh("ent", _Any) ->
    "ent.platform.sh";


platform_sh(_, _) ->
    "platform.sh".

%% regular rules
website("framer", _Any) ->
    "framer.website";


website(_, _) ->
    "website".

%% regular rules
ls("info", _Any) ->
    "info.ls";

ls("edu", _Any) ->
    "edu.ls";

ls("de", _Any) ->
    "de.ls";

ls("net", _Any) ->
    "net.ls";

ls("biz", _Any) ->
    "biz.ls";

ls("sc", _Any) ->
    "sc.ls";

ls("org", _Any) ->
    "org.ls";

ls("co", _Any) ->
    "co.ls";

ls("gov", _Any) ->
    "gov.ls";

ls("ac", _Any) ->
    "ac.ls";


ls(_, _) ->
    "ls".

%% regular rules
cy("biz", _Any) ->
    "biz.cy";

cy("org", _Any) ->
    "org.cy";

cy("ekloges", _Any) ->
    "ekloges.cy";

cy("net", _Any) ->
    "net.cy";

cy("ltd", _Any) ->
    "ltd.cy";

cy("tm", _Any) ->
    "tm.cy";

cy("gov", _Any) ->
    "gov.cy";

cy("ac", _Any) ->
    "ac.cy";

cy("com", []) ->
    "com.cy";
cy("com", Parts) ->
    [First | Rest] = Parts,
    com_cy(First, Rest);

cy("press", _Any) ->
    "press.cy";

cy("pro", _Any) ->
    "pro.cy";

cy("mil", _Any) ->
    "mil.cy";


cy(_, _) ->
    "cy".

%% regular rules
com_cy("scaleforce", []) ->
    "scaleforce.com.cy";
com_cy("scaleforce", Parts) ->
    [First | Rest] = Parts,
    scaleforce_com_cy(First, Rest);

com_cy("blogspot", _Any) ->
    "blogspot.com.cy";


com_cy(_, _) ->
    "com.cy".

%% regular rules
scaleforce_com_cy("j", _Any) ->
    "j.scaleforce.com.cy";


scaleforce_com_cy(_, _) ->
    "scaleforce.com.cy".

%% regular rules
goog("translate", _Any) ->
    "translate.goog";

goog("cloud", _Any) ->
    "cloud.goog";


goog(_, _) ->
    "goog".

%% regular rules
app("messerli", _Any) ->
    "messerli.app";

app("streamlit", _Any) ->
    "streamlit.app";

app("telebit", _Any) ->
    "telebit.app";

app("noop", _Any) ->
    "noop.app";

app("typedream", _Any) ->
    "typedream.app";

app("web", _Any) ->
    "web.app";

app("deta", _Any) ->
    "deta.app";

app("framer", _Any) ->
    "framer.app";

app("clerk", _Any) ->
    "clerk.app";

app("snowflake", []) ->
    "snowflake.app";
app("snowflake", Parts) ->
    [First | Rest] = Parts,
    snowflake_app(First, Rest);

app("hasura", _Any) ->
    "hasura.app";

app("wnext", _Any) ->
    "wnext.app";

app("bookonline", _Any) ->
    "bookonline.app";

app("flutterflow", _Any) ->
    "flutterflow.app";

app("storipress", _Any) ->
    "storipress.app";

app("ondigitalocean", _Any) ->
    "ondigitalocean.app";

app("loginline", _Any) ->
    "loginline.app";

app("edgecompute", _Any) ->
    "edgecompute.app";

app("ngrok", _Any) ->
    "ngrok.app";

app("netlify", _Any) ->
    "netlify.app";

app("easypanel", _Any) ->
    "easypanel.app";

app("clerkstage", _Any) ->
    "clerkstage.app";

app("encr", _Any) ->
    "encr.app";

app("onflashdrive", _Any) ->
    "onflashdrive.app";

app("cyclic", _Any) ->
    "cyclic.app";

app("vercel", _Any) ->
    "vercel.app";

app("fireweb", _Any) ->
    "fireweb.app";


app(_, _) ->
    "app".

%% regular rules
snowflake_app("privatelink", _Any) ->
    "privatelink.snowflake.app";


snowflake_app(_, _) ->
    "snowflake.app".

%% regular rules
ng("org", _Any) ->
    "org.ng";

ng("sch", _Any) ->
    "sch.ng";

ng("name", _Any) ->
    "name.ng";

ng("ngo", _Any) ->
    "ngo.ng";

ng("gen", _Any) ->
    "gen.ng";

ng("ltd", _Any) ->
    "ltd.ng";

ng("net", _Any) ->
    "net.ng";

ng("col", _Any) ->
    "col.ng";

ng("gov", _Any) ->
    "gov.ng";

ng("firm", _Any) ->
    "firm.ng";

ng("com", []) ->
    "com.ng";
ng("com", Parts) ->
    [First | Rest] = Parts,
    com_ng(First, Rest);

ng("edu", _Any) ->
    "edu.ng";

ng("mobi", _Any) ->
    "mobi.ng";

ng("i", _Any) ->
    "i.ng";

ng("mil", _Any) ->
    "mil.ng";


ng(_, _) ->
    "ng".

%% regular rules
com_ng("blogspot", _Any) ->
    "blogspot.com.ng";


com_ng(_, _) ->
    "com.ng".

%% regular rules
cloud("scw", []) ->
    "scw.cloud";
cloud("scw", Parts) ->
    [First | Rest] = Parts,
    scw_cloud(First, Rest);

cloud("jele", _Any) ->
    "jele.cloud";

cloud("cyclic", _Any) ->
    "cyclic.cloud";

cloud("primetel", []) ->
    "primetel.cloud";
cloud("primetel", Parts) ->
    [First | Rest] = Parts,
    primetel_cloud(First, Rest);

cloud("kuleuven", _Any) ->
    "kuleuven.cloud";

cloud("encoway", []) ->
    "encoway.cloud";
cloud("encoway", Parts) ->
    [First | Rest] = Parts,
    encoway_cloud(First, Rest);

cloud("elementor", _Any) ->
    "elementor.cloud";

cloud("vapor", _Any) ->
    "vapor.cloud";

cloud("zap", _Any) ->
    "zap.cloud";

cloud("jotelulu", _Any) ->
    "jotelulu.cloud";

cloud("diadem", _Any) ->
    "diadem.cloud";

cloud("reclaim", []) ->
    "reclaim.cloud";
cloud("reclaim", Parts) ->
    [First | Rest] = Parts,
    reclaim_cloud(First, Rest);

cloud("jelastic", []) ->
    "jelastic.cloud";
cloud("jelastic", Parts) ->
    [First | Rest] = Parts,
    jelastic_cloud(First, Rest);

cloud("trendhosting", []) ->
    "trendhosting.cloud";
cloud("trendhosting", Parts) ->
    [First | Rest] = Parts,
    trendhosting_cloud(First, Rest);

cloud("perspecta", _Any) ->
    "perspecta.cloud";

cloud("voorloper", _Any) ->
    "voorloper.cloud";

cloud("linkyard", _Any) ->
    "linkyard.cloud";

cloud("keliweb", []) ->
    "keliweb.cloud";
cloud("keliweb", Parts) ->
    [First | Rest] = Parts,
    keliweb_cloud(First, Rest);

cloud("ravendb", _Any) ->
    "ravendb.cloud";

cloud("oxa", []) ->
    "oxa.cloud";
cloud("oxa", Parts) ->
    [First | Rest] = Parts,
    oxa_cloud(First, Rest);

cloud("trafficplex", _Any) ->
    "trafficplex.cloud";

cloud("urown", _Any) ->
    "urown.cloud";


cloud(_, _) ->
    "cloud".

%% regular rules
scw_cloud("scalebook", _Any) ->
    "scalebook.scw.cloud";

scw_cloud("instances", []) ->
    "instances.scw.cloud";
scw_cloud("instances", Parts) ->
    [First | Rest] = Parts,
    instances_scw_cloud(First, Rest);

scw_cloud("smartlabeling", _Any) ->
    "smartlabeling.scw.cloud";


scw_cloud(_, _) ->
    "scw.cloud".

%% regular rules
instances_scw_cloud("priv", _Any) ->
    "priv.instances.scw.cloud";

instances_scw_cloud("pub", _Any) ->
    "pub.instances.scw.cloud";


instances_scw_cloud(_, _) ->
    "instances.scw.cloud".

%% regular rules
primetel_cloud("uk", _Any) ->
    "uk.primetel.cloud";


primetel_cloud(_, _) ->
    "primetel.cloud".

%% regular rules
encoway_cloud("eu", _Any) ->
    "eu.encoway.cloud";


encoway_cloud(_, _) ->
    "encoway.cloud".

%% regular rules
reclaim_cloud("ca", _Any) ->
    "ca.reclaim.cloud";

reclaim_cloud("uk", _Any) ->
    "uk.reclaim.cloud";

reclaim_cloud("us", _Any) ->
    "us.reclaim.cloud";


reclaim_cloud(_, _) ->
    "reclaim.cloud".

%% regular rules
jelastic_cloud("vip", _Any) ->
    "vip.jelastic.cloud";


jelastic_cloud(_, _) ->
    "jelastic.cloud".

%% regular rules
trendhosting_cloud("de", _Any) ->
    "de.trendhosting.cloud";

trendhosting_cloud("ch", _Any) ->
    "ch.trendhosting.cloud";


trendhosting_cloud(_, _) ->
    "trendhosting.cloud".

%% regular rules
keliweb_cloud("cs", _Any) ->
    "cs.keliweb.cloud";


keliweb_cloud(_, _) ->
    "keliweb.cloud".

%% regular rules
oxa_cloud("tn", _Any) ->
    "tn.oxa.cloud";

oxa_cloud("uk", _Any) ->
    "uk.oxa.cloud";


oxa_cloud(_, _) ->
    "oxa.cloud".

%% regular rules
sc("org", _Any) ->
    "org.sc";

sc("edu", _Any) ->
    "edu.sc";

sc("net", _Any) ->
    "net.sc";

sc("com", _Any) ->
    "com.sc";

sc("gov", _Any) ->
    "gov.sc";


sc(_, _) ->
    "sc".

%% regular rules
bz("gov", _Any) ->
    "gov.bz";

bz("org", _Any) ->
    "org.bz";

bz("gsj", _Any) ->
    "gsj.bz";

bz("net", _Any) ->
    "net.bz";

bz("za", _Any) ->
    "za.bz";

bz("edu", _Any) ->
    "edu.bz";

bz("com", _Any) ->
    "com.bz";


bz(_, _) ->
    "bz".

%% regular rules
by("mil", _Any) ->
    "mil.by";

by("gov", _Any) ->
    "gov.by";

by("mycloud", _Any) ->
    "mycloud.by";

by("of", _Any) ->
    "of.by";

by("com", []) ->
    "com.by";
by("com", Parts) ->
    [First | Rest] = Parts,
    com_by(First, Rest);

by("mediatech", _Any) ->
    "mediatech.by";


by(_, _) ->
    "by".

%% regular rules
com_by("blogspot", _Any) ->
    "blogspot.com.by";


com_by(_, _) ->
    "com.by".

%% regular rules
photos("framer", _Any) ->
    "framer.photos";


photos(_, _) ->
    "photos".

%% regular rules
vg("at", _Any) ->
    "at.vg";


vg(_, _) ->
    "vg".

%% regular rules
cz("blogspot", _Any) ->
    "blogspot.cz";

cz("metacentrum", []) ->
    "metacentrum.cz";
cz("metacentrum", Parts) ->
    [First | Rest] = Parts,
    metacentrum_cz(First, Rest);

cz("co", _Any) ->
    "co.cz";

cz("realm", _Any) ->
    "realm.cz";

cz("muni", []) ->
    "muni.cz";
cz("muni", Parts) ->
    [First | Rest] = Parts,
    muni_cz(First, Rest);


cz(_, _) ->
    "cz".

%% regular rules
metacentrum_cz("custom", _Any) ->
    "custom.metacentrum.cz";


metacentrum_cz(_, _) ->
    "metacentrum.cz".

%% regular rules
muni_cz("cloud", []) ->
    "cloud.muni.cz";
muni_cz("cloud", Parts) ->
    [First | Rest] = Parts,
    cloud_muni_cz(First, Rest);


muni_cz(_, _) ->
    "muni.cz".

%% regular rules
cloud_muni_cz("usr", _Any) ->
    "usr.cloud.muni.cz";

cloud_muni_cz("flt", _Any) ->
    "flt.cloud.muni.cz";


cloud_muni_cz(_, _) ->
    "cloud.muni.cz".

%% regular rules
td("blogspot", _Any) ->
    "blogspot.td";


td(_, _) ->
    "td".

%% regular rules
jp("ciao", _Any) ->
    "ciao.jp";

jp("sub", _Any) ->
    "sub.jp";

jp("chowder", _Any) ->
    "chowder.jp";

jp("readymade", _Any) ->
    "readymade.jp";

jp("blush", _Any) ->
    "blush.jp";

jp("nikita", _Any) ->
    "nikita.jp";

jp("gunma", []) ->
    "gunma.jp";
jp("gunma", Parts) ->
    [First | Rest] = Parts,
    gunma_jp(First, Rest);

jp("daynight", _Any) ->
    "daynight.jp";

jp("egoism", _Any) ->
    "egoism.jp";

jp("fem", _Any) ->
    "fem.jp";

jp("upper", _Any) ->
    "upper.jp";

jp("nagano", []) ->
    "nagano.jp";
jp("nagano", Parts) ->
    [First | Rest] = Parts,
    nagano_jp(First, Rest);

jp("capoo", _Any) ->
    "capoo.jp";

jp("cocotte", _Any) ->
    "cocotte.jp";

jp("fukushima", []) ->
    "fukushima.jp";
jp("fukushima", Parts) ->
    [First | Rest] = Parts,
    fukushima_jp(First, Rest);

jp("yamagata", []) ->
    "yamagata.jp";
jp("yamagata", Parts) ->
    [First | Rest] = Parts,
    yamagata_jp(First, Rest);

jp("lolipopmc", _Any) ->
    "lolipopmc.jp";

jp("jeez", _Any) ->
    "jeez.jp";

jp("kumamoto", []) ->
    "kumamoto.jp";
jp("kumamoto", Parts) ->
    [First | Rest] = Parts,
    kumamoto_jp(First, Rest);

jp("chu", _Any) ->
    "chu.jp";

jp("ac", _Any) ->
    "ac.jp";

jp("watson", _Any) ->
    "watson.jp";

jp("candypop", _Any) ->
    "candypop.jp";

jp("hippy", _Any) ->
    "hippy.jp";

jp("staba", _Any) ->
    "staba.jp";

jp("fukui", []) ->
    "fukui.jp";
jp("fukui", Parts) ->
    [First | Rest] = Parts,
    fukui_jp(First, Rest);

jp("wakayama", []) ->
    "wakayama.jp";
jp("wakayama", Parts) ->
    [First | Rest] = Parts,
    wakayama_jp(First, Rest);

jp("osaka", []) ->
    "osaka.jp";
jp("osaka", Parts) ->
    [First | Rest] = Parts,
    osaka_jp(First, Rest);

jp("flier", _Any) ->
    "flier.jp";

jp("skr", _Any) ->
    "skr.jp";

jp("flop", _Any) ->
    "flop.jp";

jp("usercontent", _Any) ->
    "usercontent.jp";

jp("saloon", _Any) ->
    "saloon.jp";

jp("rulez", _Any) ->
    "rulez.jp";

jp("nara", []) ->
    "nara.jp";
jp("nara", Parts) ->
    [First | Rest] = Parts,
    nara_jp(First, Rest);

jp("jellybean", _Any) ->
    "jellybean.jp";

jp("pigboat", _Any) ->
    "pigboat.jp";

jp("catfood", _Any) ->
    "catfood.jp";

jp("punyu", _Any) ->
    "punyu.jp";

jp("rdy", _Any) ->
    "rdy.jp";

jp("pussycat", _Any) ->
    "pussycat.jp";

jp("mie", []) ->
    "mie.jp";
jp("mie", Parts) ->
    [First | Rest] = Parts,
    mie_jp(First, Rest);

jp("oita", []) ->
    "oita.jp";
jp("oita", Parts) ->
    [First | Rest] = Parts,
    oita_jp(First, Rest);

jp("tonkotsu", _Any) ->
    "tonkotsu.jp";

jp("undo", _Any) ->
    "undo.jp";

jp("her", _Any) ->
    "her.jp";

jp("iwate", []) ->
    "iwate.jp";
jp("iwate", Parts) ->
    [First | Rest] = Parts,
    iwate_jp(First, Rest);

jp("niigata", []) ->
    "niigata.jp";
jp("niigata", Parts) ->
    [First | Rest] = Parts,
    niigata_jp(First, Rest);

jp("stripper", _Any) ->
    "stripper.jp";

jp("lomo", _Any) ->
    "lomo.jp";

jp("bitter", _Any) ->
    "bitter.jp";

jp("parasite", _Any) ->
    "parasite.jp";

jp("mond", _Any) ->
    "mond.jp";

jp("floppy", _Any) ->
    "floppy.jp";

jp("nagasaki", []) ->
    "nagasaki.jp";
jp("nagasaki", Parts) ->
    [First | Rest] = Parts,
    nagasaki_jp(First, Rest);

jp("co", _Any) ->
    "co.jp";

jp("nobushi", _Any) ->
    "nobushi.jp";

jp("handcrafted", _Any) ->
    "handcrafted.jp";

jp("kochi", []) ->
    "kochi.jp";
jp("kochi", Parts) ->
    [First | Rest] = Parts,
    kochi_jp(First, Rest);

jp("bona", _Any) ->
    "bona.jp";

jp("eek", _Any) ->
    "eek.jp";

jp("rgr", _Any) ->
    "rgr.jp";

jp("sunnyday", _Any) ->
    "sunnyday.jp";

jp("gloomy", _Any) ->
    "gloomy.jp";

jp("hiho", _Any) ->
    "hiho.jp";

jp("hokkaido", []) ->
    "hokkaido.jp";
jp("hokkaido", Parts) ->
    [First | Rest] = Parts,
    hokkaido_jp(First, Rest);

jp("or", _Any) ->
    "or.jp";

jp("tokyo", []) ->
    "tokyo.jp";
jp("tokyo", Parts) ->
    [First | Rest] = Parts,
    tokyo_jp(First, Rest);

jp("oops", _Any) ->
    "oops.jp";

jp("secret", _Any) ->
    "secret.jp";

jp("ne", []) ->
    "ne.jp";
jp("ne", Parts) ->
    [First | Rest] = Parts,
    ne_jp(First, Rest);

jp("webaccel", []) ->
    "webaccel.jp";
jp("webaccel", Parts) ->
    [First | Rest] = Parts,
    webaccel_jp(First, Rest);

jp("deca", _Any) ->
    "deca.jp";

jp("sblo", _Any) ->
    "sblo.jp";

jp("coolblog", _Any) ->
    "coolblog.jp";

jp("toyama", []) ->
    "toyama.jp";
jp("toyama", Parts) ->
    [First | Rest] = Parts,
    toyama_jp(First, Rest);

jp("vivian", _Any) ->
    "vivian.jp";

jp("ehime", []) ->
    "ehime.jp";
jp("ehime", Parts) ->
    [First | Rest] = Parts,
    ehime_jp(First, Rest);

jp("girlfriend", _Any) ->
    "girlfriend.jp";

jp("but", _Any) ->
    "but.jp";

jp("lovesick", _Any) ->
    "lovesick.jp";

jp("raindrop", _Any) ->
    "raindrop.jp";

jp("holy", _Any) ->
    "holy.jp";

jp("gifu", []) ->
    "gifu.jp";
jp("gifu", Parts) ->
    [First | Rest] = Parts,
    gifu_jp(First, Rest);

jp("saitama", []) ->
    "saitama.jp";
jp("saitama", Parts) ->
    [First | Rest] = Parts,
    saitama_jp(First, Rest);

jp("littlestar", _Any) ->
    "littlestar.jp";

jp("moo", _Any) ->
    "moo.jp";

jp("crap", _Any) ->
    "crap.jp";

jp("fashionstore", _Any) ->
    "fashionstore.jp";

jp("angry", _Any) ->
    "angry.jp";

jp("zombie", _Any) ->
    "zombie.jp";

jp("perma", _Any) ->
    "perma.jp";

jp("gr", _Any) ->
    "gr.jp";

jp("main", _Any) ->
    "main.jp";

jp("icurus", _Any) ->
    "icurus.jp";

jp("hungry", _Any) ->
    "hungry.jp";

jp("chillout", _Any) ->
    "chillout.jp";

jp("miyazaki", []) ->
    "miyazaki.jp";
jp("miyazaki", Parts) ->
    [First | Rest] = Parts,
    miyazaki_jp(First, Rest);

jp("yamaguchi", []) ->
    "yamaguchi.jp";
jp("yamaguchi", Parts) ->
    [First | Rest] = Parts,
    yamaguchi_jp(First, Rest);

jp("okinawa", []) ->
    "okinawa.jp";
jp("okinawa", Parts) ->
    [First | Rest] = Parts,
    okinawa_jp(First, Rest);

jp("go", _Any) ->
    "go.jp";

jp("lolitapunk", _Any) ->
    "lolitapunk.jp";

jp("mongolian", _Any) ->
    "mongolian.jp";

jp("ishikawa", []) ->
    "ishikawa.jp";
jp("ishikawa", Parts) ->
    [First | Rest] = Parts,
    ishikawa_jp(First, Rest);

jp("heavy", _Any) ->
    "heavy.jp";

jp("cranky", _Any) ->
    "cranky.jp";

jp("kuron", _Any) ->
    "kuron.jp";

jp("tochigi", []) ->
    "tochigi.jp";
jp("tochigi", Parts) ->
    [First | Rest] = Parts,
    tochigi_jp(First, Rest);

jp("ed", _Any) ->
    "ed.jp";

jp("under", _Any) ->
    "under.jp";

jp("frenchkiss", _Any) ->
    "frenchkiss.jp";

jp("blogspot", _Any) ->
    "blogspot.jp";

jp("miyagi", []) ->
    "miyagi.jp";
jp("miyagi", Parts) ->
    [First | Rest] = Parts,
    miyagi_jp(First, Rest);

jp("deci", _Any) ->
    "deci.jp";

jp("fukuoka", []) ->
    "fukuoka.jp";
jp("fukuoka", Parts) ->
    [First | Rest] = Parts,
    fukuoka_jp(First, Rest);

jp("peewee", _Any) ->
    "peewee.jp";

jp("halfmoon", _Any) ->
    "halfmoon.jp";

jp("saga", []) ->
    "saga.jp";
jp("saga", Parts) ->
    [First | Rest] = Parts,
    saga_jp(First, Rest);

jp("buyshop", _Any) ->
    "buyshop.jp";

jp("backdrop", _Any) ->
    "backdrop.jp";

jp("pya", _Any) ->
    "pya.jp";

jp("pupu", _Any) ->
    "pupu.jp";

jp("yamanashi", []) ->
    "yamanashi.jp";
jp("yamanashi", Parts) ->
    [First | Rest] = Parts,
    yamanashi_jp(First, Rest);

jp("kilo", _Any) ->
    "kilo.jp";

jp("chips", _Any) ->
    "chips.jp";

jp("parallel", _Any) ->
    "parallel.jp";

jp("schoolbus", _Any) ->
    "schoolbus.jp";

jp("tokushima", []) ->
    "tokushima.jp";
jp("tokushima", Parts) ->
    [First | Rest] = Parts,
    tokushima_jp(First, Rest);

jp("noor", _Any) ->
    "noor.jp";

jp("kawaiishop", _Any) ->
    "kawaiishop.jp";

jp("theshop", _Any) ->
    "theshop.jp";

jp("daa", _Any) ->
    "daa.jp";

jp("hyogo", []) ->
    "hyogo.jp";
jp("hyogo", Parts) ->
    [First | Rest] = Parts,
    hyogo_jp(First, Rest);

jp("sadist", _Any) ->
    "sadist.jp";

jp("chicappa", _Any) ->
    "chicappa.jp";

jp("shiga", []) ->
    "shiga.jp";
jp("shiga", Parts) ->
    [First | Rest] = Parts,
    shiga_jp(First, Rest);

jp("lovepop", _Any) ->
    "lovepop.jp";

jp("pinoko", _Any) ->
    "pinoko.jp";

jp("versus", _Any) ->
    "versus.jp";

jp("hacca", _Any) ->
    "hacca.jp";

jp("shimane", []) ->
    "shimane.jp";
jp("shimane", Parts) ->
    [First | Rest] = Parts,
    shimane_jp(First, Rest);

jp("kanagawa", []) ->
    "kanagawa.jp";
jp("kanagawa", Parts) ->
    [First | Rest] = Parts,
    kanagawa_jp(First, Rest);

jp("supersale", _Any) ->
    "supersale.jp";

jp("shizuoka", []) ->
    "shizuoka.jp";
jp("shizuoka", Parts) ->
    [First | Rest] = Parts,
    shizuoka_jp(First, Rest);

jp("pecori", _Any) ->
    "pecori.jp";

jp("tank", _Any) ->
    "tank.jp";

jp("babyblue", _Any) ->
    "babyblue.jp";

jp("websozai", _Any) ->
    "websozai.jp";

jp("weblike", _Any) ->
    "weblike.jp";

jp("mods", _Any) ->
    "mods.jp";

jp("girly", _Any) ->
    "girly.jp";

jp("kyoto", []) ->
    "kyoto.jp";
jp("kyoto", Parts) ->
    [First | Rest] = Parts,
    kyoto_jp(First, Rest);

jp("nyanta", _Any) ->
    "nyanta.jp";

jp("kagoshima", []) ->
    "kagoshima.jp";
jp("kagoshima", Parts) ->
    [First | Rest] = Parts,
    kagoshima_jp(First, Rest);

jp("itigo", _Any) ->
    "itigo.jp";

jp("tottori", []) ->
    "tottori.jp";
jp("tottori", Parts) ->
    [First | Rest] = Parts,
    tottori_jp(First, Rest);

jp("matrix", _Any) ->
    "matrix.jp";

jp("ad", _Any) ->
    "ad.jp";

jp("bambina", _Any) ->
    "bambina.jp";

jp("boyfriend", _Any) ->
    "boyfriend.jp";

jp("kagawa", []) ->
    "kagawa.jp";
jp("kagawa", Parts) ->
    [First | Rest] = Parts,
    kagawa_jp(First, Rest);

jp("aichi", []) ->
    "aichi.jp";
jp("aichi", Parts) ->
    [First | Rest] = Parts,
    aichi_jp(First, Rest);

jp("gonna", _Any) ->
    "gonna.jp";

jp("boo", _Any) ->
    "boo.jp";

jp("kill", _Any) ->
    "kill.jp";

jp("xii", _Any) ->
    "xii.jp";

jp("pepper", _Any) ->
    "pepper.jp";

jp("okayama", []) ->
    "okayama.jp";
jp("okayama", Parts) ->
    [First | Rest] = Parts,
    okayama_jp(First, Rest);

jp("lg", _Any) ->
    "lg.jp";

jp("cutegirl", _Any) ->
    "cutegirl.jp";

jp("digick", _Any) ->
    "digick.jp";

jp("akita", []) ->
    "akita.jp";
jp("akita", Parts) ->
    [First | Rest] = Parts,
    akita_jp(First, Rest);

jp("mimoza", _Any) ->
    "mimoza.jp";

jp("hiroshima", []) ->
    "hiroshima.jp";
jp("hiroshima", Parts) ->
    [First | Rest] = Parts,
    hiroshima_jp(First, Rest);

jp("fakefur", _Any) ->
    "fakefur.jp";

jp("verse", _Any) ->
    "verse.jp";

jp("chiba", []) ->
    "chiba.jp";
jp("chiba", Parts) ->
    [First | Rest] = Parts,
    chiba_jp(First, Rest);

jp("penne", _Any) ->
    "penne.jp";

jp("kikirara", _Any) ->
    "kikirara.jp";

jp("cheap", _Any) ->
    "cheap.jp";

jp("greater", _Any) ->
    "greater.jp";

jp("fool", _Any) ->
    "fool.jp";

jp("whitesnow", _Any) ->
    "whitesnow.jp";

jp("ibaraki", []) ->
    "ibaraki.jp";
jp("ibaraki", Parts) ->
    [First | Rest] = Parts,
    ibaraki_jp(First, Rest);

jp("namaste", _Any) ->
    "namaste.jp";

jp("thick", _Any) ->
    "thick.jp";

jp("boy", _Any) ->
    "boy.jp";

jp("babymilk", _Any) ->
    "babymilk.jp";

jp("netgamers", _Any) ->
    "netgamers.jp";

jp("aomori", []) ->
    "aomori.jp";
jp("aomori", Parts) ->
    [First | Rest] = Parts,
    aomori_jp(First, Rest);

jp("velvet", _Any) ->
    "velvet.jp";


jp(_, _) ->
    "jp".

%% regular rules
gunma_jp("shinto", _Any) ->
    "shinto.gunma.jp";

gunma_jp("yoshioka", _Any) ->
    "yoshioka.gunma.jp";

gunma_jp("numata", _Any) ->
    "numata.gunma.jp";

gunma_jp("maebashi", _Any) ->
    "maebashi.gunma.jp";

gunma_jp("ora", _Any) ->
    "ora.gunma.jp";

gunma_jp("kiryu", _Any) ->
    "kiryu.gunma.jp";

gunma_jp("takasaki", _Any) ->
    "takasaki.gunma.jp";

gunma_jp("isesaki", _Any) ->
    "isesaki.gunma.jp";

gunma_jp("tsukiyono", _Any) ->
    "tsukiyono.gunma.jp";

gunma_jp("tsumagoi", _Any) ->
    "tsumagoi.gunma.jp";

gunma_jp("tamamura", _Any) ->
    "tamamura.gunma.jp";

gunma_jp("shimonita", _Any) ->
    "shimonita.gunma.jp";

gunma_jp("kawaba", _Any) ->
    "kawaba.gunma.jp";

gunma_jp("ota", _Any) ->
    "ota.gunma.jp";

gunma_jp("kanra", _Any) ->
    "kanra.gunma.jp";

gunma_jp("oizumi", _Any) ->
    "oizumi.gunma.jp";

gunma_jp("higashiagatsuma", _Any) ->
    "higashiagatsuma.gunma.jp";

gunma_jp("naganohara", _Any) ->
    "naganohara.gunma.jp";

gunma_jp("tomioka", _Any) ->
    "tomioka.gunma.jp";

gunma_jp("kusatsu", _Any) ->
    "kusatsu.gunma.jp";

gunma_jp("kanna", _Any) ->
    "kanna.gunma.jp";

gunma_jp("tatebayashi", _Any) ->
    "tatebayashi.gunma.jp";

gunma_jp("ueno", _Any) ->
    "ueno.gunma.jp";

gunma_jp("fujioka", _Any) ->
    "fujioka.gunma.jp";

gunma_jp("showa", _Any) ->
    "showa.gunma.jp";

gunma_jp("meiwa", _Any) ->
    "meiwa.gunma.jp";

gunma_jp("katashina", _Any) ->
    "katashina.gunma.jp";

gunma_jp("annaka", _Any) ->
    "annaka.gunma.jp";

gunma_jp("itakura", _Any) ->
    "itakura.gunma.jp";

gunma_jp("nakanojo", _Any) ->
    "nakanojo.gunma.jp";

gunma_jp("takayama", _Any) ->
    "takayama.gunma.jp";

gunma_jp("midori", _Any) ->
    "midori.gunma.jp";

gunma_jp("minakami", _Any) ->
    "minakami.gunma.jp";

gunma_jp("nanmoku", _Any) ->
    "nanmoku.gunma.jp";

gunma_jp("shibukawa", _Any) ->
    "shibukawa.gunma.jp";

gunma_jp("chiyoda", _Any) ->
    "chiyoda.gunma.jp";


gunma_jp(_, _) ->
    "gunma.jp".

%% regular rules
nagano_jp("omi", _Any) ->
    "omi.nagano.jp";

nagano_jp("yamanouchi", _Any) ->
    "yamanouchi.nagano.jp";

nagano_jp("chikuhoku", _Any) ->
    "chikuhoku.nagano.jp";

nagano_jp("saku", _Any) ->
    "saku.nagano.jp";

nagano_jp("chikuma", _Any) ->
    "chikuma.nagano.jp";

nagano_jp("minamiminowa", _Any) ->
    "minamiminowa.nagano.jp";

nagano_jp("komoro", _Any) ->
    "komoro.nagano.jp";

nagano_jp("nagiso", _Any) ->
    "nagiso.nagano.jp";

nagano_jp("hara", _Any) ->
    "hara.nagano.jp";

nagano_jp("achi", _Any) ->
    "achi.nagano.jp";

nagano_jp("ikeda", _Any) ->
    "ikeda.nagano.jp";

nagano_jp("sakae", _Any) ->
    "sakae.nagano.jp";

nagano_jp("minamiaiki", _Any) ->
    "minamiaiki.nagano.jp";

nagano_jp("sakuho", _Any) ->
    "sakuho.nagano.jp";

nagano_jp("okaya", _Any) ->
    "okaya.nagano.jp";

nagano_jp("shimosuwa", _Any) ->
    "shimosuwa.nagano.jp";

nagano_jp("shinanomachi", _Any) ->
    "shinanomachi.nagano.jp";

nagano_jp("takamori", _Any) ->
    "takamori.nagano.jp";

nagano_jp("kawakami", _Any) ->
    "kawakami.nagano.jp";

nagano_jp("ookuwa", _Any) ->
    "ookuwa.nagano.jp";

nagano_jp("miyada", _Any) ->
    "miyada.nagano.jp";

nagano_jp("aoki", _Any) ->
    "aoki.nagano.jp";

nagano_jp("tomi", _Any) ->
    "tomi.nagano.jp";

nagano_jp("nagawa", _Any) ->
    "nagawa.nagano.jp";

nagano_jp("fujimi", _Any) ->
    "fujimi.nagano.jp";

nagano_jp("yasuoka", _Any) ->
    "yasuoka.nagano.jp";

nagano_jp("hiraya", _Any) ->
    "hiraya.nagano.jp";

nagano_jp("tateshina", _Any) ->
    "tateshina.nagano.jp";

nagano_jp("miyota", _Any) ->
    "miyota.nagano.jp";

nagano_jp("shiojiri", _Any) ->
    "shiojiri.nagano.jp";

nagano_jp("miasa", _Any) ->
    "miasa.nagano.jp";

nagano_jp("omachi", _Any) ->
    "omachi.nagano.jp";

nagano_jp("kiso", _Any) ->
    "kiso.nagano.jp";

nagano_jp("iijima", _Any) ->
    "iijima.nagano.jp";

nagano_jp("yasaka", _Any) ->
    "yasaka.nagano.jp";

nagano_jp("anan", _Any) ->
    "anan.nagano.jp";

nagano_jp("nozawaonsen", _Any) ->
    "nozawaonsen.nagano.jp";

nagano_jp("kitaaiki", _Any) ->
    "kitaaiki.nagano.jp";

nagano_jp("nakano", _Any) ->
    "nakano.nagano.jp";

nagano_jp("ina", _Any) ->
    "ina.nagano.jp";

nagano_jp("ogawa", _Any) ->
    "ogawa.nagano.jp";

nagano_jp("obuse", _Any) ->
    "obuse.nagano.jp";

nagano_jp("togura", _Any) ->
    "togura.nagano.jp";

nagano_jp("hakuba", _Any) ->
    "hakuba.nagano.jp";

nagano_jp("iizuna", _Any) ->
    "iizuna.nagano.jp";

nagano_jp("minowa", _Any) ->
    "minowa.nagano.jp";

nagano_jp("minamimaki", _Any) ->
    "minamimaki.nagano.jp";

nagano_jp("tatsuno", _Any) ->
    "tatsuno.nagano.jp";

nagano_jp("wada", _Any) ->
    "wada.nagano.jp";

nagano_jp("suwa", _Any) ->
    "suwa.nagano.jp";

nagano_jp("togakushi", _Any) ->
    "togakushi.nagano.jp";

nagano_jp("kisofukushima", _Any) ->
    "kisofukushima.nagano.jp";

nagano_jp("matsukawa", _Any) ->
    "matsukawa.nagano.jp";

nagano_jp("azumino", _Any) ->
    "azumino.nagano.jp";

nagano_jp("komagane", _Any) ->
    "komagane.nagano.jp";

nagano_jp("iida", _Any) ->
    "iida.nagano.jp";

nagano_jp("ooshika", _Any) ->
    "ooshika.nagano.jp";

nagano_jp("yamagata", _Any) ->
    "yamagata.nagano.jp";

nagano_jp("otari", _Any) ->
    "otari.nagano.jp";

nagano_jp("otaki", _Any) ->
    "otaki.nagano.jp";

nagano_jp("chino", _Any) ->
    "chino.nagano.jp";

nagano_jp("mochizuki", _Any) ->
    "mochizuki.nagano.jp";

nagano_jp("nagano", _Any) ->
    "nagano.nagano.jp";

nagano_jp("ikusaka", _Any) ->
    "ikusaka.nagano.jp";

nagano_jp("karuizawa", _Any) ->
    "karuizawa.nagano.jp";

nagano_jp("matsumoto", _Any) ->
    "matsumoto.nagano.jp";

nagano_jp("takayama", _Any) ->
    "takayama.nagano.jp";

nagano_jp("iiyama", _Any) ->
    "iiyama.nagano.jp";

nagano_jp("takagi", _Any) ->
    "takagi.nagano.jp";

nagano_jp("ueda", _Any) ->
    "ueda.nagano.jp";

nagano_jp("asahi", _Any) ->
    "asahi.nagano.jp";

nagano_jp("nakagawa", _Any) ->
    "nakagawa.nagano.jp";

nagano_jp("agematsu", _Any) ->
    "agematsu.nagano.jp";

nagano_jp("sakaki", _Any) ->
    "sakaki.nagano.jp";

nagano_jp("suzaka", _Any) ->
    "suzaka.nagano.jp";


nagano_jp(_, _) ->
    "nagano.jp".

%% regular rules
fukushima_jp("kawamata", _Any) ->
    "kawamata.fukushima.jp";

fukushima_jp("bandai", _Any) ->
    "bandai.fukushima.jp";

fukushima_jp("taishin", _Any) ->
    "taishin.fukushima.jp";

fukushima_jp("kagamiishi", _Any) ->
    "kagamiishi.fukushima.jp";

fukushima_jp("hanawa", _Any) ->
    "hanawa.fukushima.jp";

fukushima_jp("inawashiro", _Any) ->
    "inawashiro.fukushima.jp";

fukushima_jp("asakawa", _Any) ->
    "asakawa.fukushima.jp";

fukushima_jp("nango", _Any) ->
    "nango.fukushima.jp";

fukushima_jp("showa", _Any) ->
    "showa.fukushima.jp";

fukushima_jp("yabuki", _Any) ->
    "yabuki.fukushima.jp";

fukushima_jp("omotego", _Any) ->
    "omotego.fukushima.jp";

fukushima_jp("miharu", _Any) ->
    "miharu.fukushima.jp";

fukushima_jp("futaba", _Any) ->
    "futaba.fukushima.jp";

fukushima_jp("nishigo", _Any) ->
    "nishigo.fukushima.jp";

fukushima_jp("izumizaki", _Any) ->
    "izumizaki.fukushima.jp";

fukushima_jp("tenei", _Any) ->
    "tenei.fukushima.jp";

fukushima_jp("soma", _Any) ->
    "soma.fukushima.jp";

fukushima_jp("higashi", _Any) ->
    "higashi.fukushima.jp";

fukushima_jp("sukagawa", _Any) ->
    "sukagawa.fukushima.jp";

fukushima_jp("kunimi", _Any) ->
    "kunimi.fukushima.jp";

fukushima_jp("okuma", _Any) ->
    "okuma.fukushima.jp";

fukushima_jp("yugawa", _Any) ->
    "yugawa.fukushima.jp";

fukushima_jp("namie", _Any) ->
    "namie.fukushima.jp";

fukushima_jp("date", _Any) ->
    "date.fukushima.jp";

fukushima_jp("mishima", _Any) ->
    "mishima.fukushima.jp";

fukushima_jp("tanagura", _Any) ->
    "tanagura.fukushima.jp";

fukushima_jp("kaneyama", _Any) ->
    "kaneyama.fukushima.jp";

fukushima_jp("nishiaizu", _Any) ->
    "nishiaizu.fukushima.jp";

fukushima_jp("tamakawa", _Any) ->
    "tamakawa.fukushima.jp";

fukushima_jp("fukushima", _Any) ->
    "fukushima.fukushima.jp";

fukushima_jp("yamatsuri", _Any) ->
    "yamatsuri.fukushima.jp";

fukushima_jp("koori", _Any) ->
    "koori.fukushima.jp";

fukushima_jp("aizumisato", _Any) ->
    "aizumisato.fukushima.jp";

fukushima_jp("aizuwakamatsu", _Any) ->
    "aizuwakamatsu.fukushima.jp";

fukushima_jp("koriyama", _Any) ->
    "koriyama.fukushima.jp";

fukushima_jp("iitate", _Any) ->
    "iitate.fukushima.jp";

fukushima_jp("iwaki", _Any) ->
    "iwaki.fukushima.jp";

fukushima_jp("hirono", _Any) ->
    "hirono.fukushima.jp";

fukushima_jp("yamato", _Any) ->
    "yamato.fukushima.jp";

fukushima_jp("kitashiobara", _Any) ->
    "kitashiobara.fukushima.jp";

fukushima_jp("kitakata", _Any) ->
    "kitakata.fukushima.jp";

fukushima_jp("ono", _Any) ->
    "ono.fukushima.jp";

fukushima_jp("furudono", _Any) ->
    "furudono.fukushima.jp";

fukushima_jp("yanaizu", _Any) ->
    "yanaizu.fukushima.jp";

fukushima_jp("aizubange", _Any) ->
    "aizubange.fukushima.jp";

fukushima_jp("otama", _Any) ->
    "otama.fukushima.jp";

fukushima_jp("samegawa", _Any) ->
    "samegawa.fukushima.jp";

fukushima_jp("ishikawa", _Any) ->
    "ishikawa.fukushima.jp";

fukushima_jp("shimogo", _Any) ->
    "shimogo.fukushima.jp";

fukushima_jp("shirakawa", _Any) ->
    "shirakawa.fukushima.jp";

fukushima_jp("hirata", _Any) ->
    "hirata.fukushima.jp";


fukushima_jp(_, _) ->
    "fukushima.jp".

%% regular rules
yamagata_jp("nagai", _Any) ->
    "nagai.yamagata.jp";

yamagata_jp("kaminoyama", _Any) ->
    "kaminoyama.yamagata.jp";

yamagata_jp("murayama", _Any) ->
    "murayama.yamagata.jp";

yamagata_jp("yamanobe", _Any) ->
    "yamanobe.yamagata.jp";

yamagata_jp("iide", _Any) ->
    "iide.yamagata.jp";

yamagata_jp("shonai", _Any) ->
    "shonai.yamagata.jp";

yamagata_jp("shinjo", _Any) ->
    "shinjo.yamagata.jp";

yamagata_jp("sakata", _Any) ->
    "sakata.yamagata.jp";

yamagata_jp("tozawa", _Any) ->
    "tozawa.yamagata.jp";

yamagata_jp("kaneyama", _Any) ->
    "kaneyama.yamagata.jp";

yamagata_jp("tendo", _Any) ->
    "tendo.yamagata.jp";

yamagata_jp("mamurogawa", _Any) ->
    "mamurogawa.yamagata.jp";

yamagata_jp("oguni", _Any) ->
    "oguni.yamagata.jp";

yamagata_jp("obanazawa", _Any) ->
    "obanazawa.yamagata.jp";

yamagata_jp("yamagata", _Any) ->
    "yamagata.yamagata.jp";

yamagata_jp("funagata", _Any) ->
    "funagata.yamagata.jp";

yamagata_jp("tsuruoka", _Any) ->
    "tsuruoka.yamagata.jp";

yamagata_jp("oe", _Any) ->
    "oe.yamagata.jp";

yamagata_jp("yuza", _Any) ->
    "yuza.yamagata.jp";

yamagata_jp("mikawa", _Any) ->
    "mikawa.yamagata.jp";

yamagata_jp("kahoku", _Any) ->
    "kahoku.yamagata.jp";

yamagata_jp("sakegawa", _Any) ->
    "sakegawa.yamagata.jp";

yamagata_jp("asahi", _Any) ->
    "asahi.yamagata.jp";

yamagata_jp("ohkura", _Any) ->
    "ohkura.yamagata.jp";

yamagata_jp("yonezawa", _Any) ->
    "yonezawa.yamagata.jp";

yamagata_jp("kawanishi", _Any) ->
    "kawanishi.yamagata.jp";

yamagata_jp("nishikawa", _Any) ->
    "nishikawa.yamagata.jp";

yamagata_jp("shirataka", _Any) ->
    "shirataka.yamagata.jp";

yamagata_jp("nakayama", _Any) ->
    "nakayama.yamagata.jp";

yamagata_jp("takahata", _Any) ->
    "takahata.yamagata.jp";

yamagata_jp("sagae", _Any) ->
    "sagae.yamagata.jp";

yamagata_jp("higashine", _Any) ->
    "higashine.yamagata.jp";

yamagata_jp("oishida", _Any) ->
    "oishida.yamagata.jp";

yamagata_jp("nanyo", _Any) ->
    "nanyo.yamagata.jp";


yamagata_jp(_, _) ->
    "yamagata.jp".

%% regular rules
kumamoto_jp("oguni", _Any) ->
    "oguni.kumamoto.jp";

kumamoto_jp("gyokuto", _Any) ->
    "gyokuto.kumamoto.jp";

kumamoto_jp("yamaga", _Any) ->
    "yamaga.kumamoto.jp";

kumamoto_jp("yatsushiro", _Any) ->
    "yatsushiro.kumamoto.jp";

kumamoto_jp("mifune", _Any) ->
    "mifune.kumamoto.jp";

kumamoto_jp("amakusa", _Any) ->
    "amakusa.kumamoto.jp";

kumamoto_jp("arao", _Any) ->
    "arao.kumamoto.jp";

kumamoto_jp("sumoto", _Any) ->
    "sumoto.kumamoto.jp";

kumamoto_jp("uto", _Any) ->
    "uto.kumamoto.jp";

kumamoto_jp("aso", _Any) ->
    "aso.kumamoto.jp";

kumamoto_jp("kamiamakusa", _Any) ->
    "kamiamakusa.kumamoto.jp";

kumamoto_jp("nishihara", _Any) ->
    "nishihara.kumamoto.jp";

kumamoto_jp("minamioguni", _Any) ->
    "minamioguni.kumamoto.jp";

kumamoto_jp("kikuchi", _Any) ->
    "kikuchi.kumamoto.jp";

kumamoto_jp("uki", _Any) ->
    "uki.kumamoto.jp";

kumamoto_jp("yamato", _Any) ->
    "yamato.kumamoto.jp";

kumamoto_jp("nagasu", _Any) ->
    "nagasu.kumamoto.jp";

kumamoto_jp("kumamoto", _Any) ->
    "kumamoto.kumamoto.jp";

kumamoto_jp("choyo", _Any) ->
    "choyo.kumamoto.jp";

kumamoto_jp("minamata", _Any) ->
    "minamata.kumamoto.jp";

kumamoto_jp("takamori", _Any) ->
    "takamori.kumamoto.jp";

kumamoto_jp("ozu", _Any) ->
    "ozu.kumamoto.jp";

kumamoto_jp("mashiki", _Any) ->
    "mashiki.kumamoto.jp";


kumamoto_jp(_, _) ->
    "kumamoto.jp".

%% regular rules
fukui_jp("eiheiji", _Any) ->
    "eiheiji.fukui.jp";

fukui_jp("sabae", _Any) ->
    "sabae.fukui.jp";

fukui_jp("ikeda", _Any) ->
    "ikeda.fukui.jp";

fukui_jp("fukui", _Any) ->
    "fukui.fukui.jp";

fukui_jp("ohi", _Any) ->
    "ohi.fukui.jp";

fukui_jp("katsuyama", _Any) ->
    "katsuyama.fukui.jp";

fukui_jp("minamiechizen", _Any) ->
    "minamiechizen.fukui.jp";

fukui_jp("sakai", _Any) ->
    "sakai.fukui.jp";

fukui_jp("tsuruga", _Any) ->
    "tsuruga.fukui.jp";

fukui_jp("wakasa", _Any) ->
    "wakasa.fukui.jp";

fukui_jp("ono", _Any) ->
    "ono.fukui.jp";

fukui_jp("obama", _Any) ->
    "obama.fukui.jp";

fukui_jp("echizen", _Any) ->
    "echizen.fukui.jp";

fukui_jp("takahama", _Any) ->
    "takahama.fukui.jp";

fukui_jp("mihama", _Any) ->
    "mihama.fukui.jp";


fukui_jp(_, _) ->
    "fukui.jp".

%% regular rules
wakayama_jp("kinokawa", _Any) ->
    "kinokawa.wakayama.jp";

wakayama_jp("kamitonda", _Any) ->
    "kamitonda.wakayama.jp";

wakayama_jp("koza", _Any) ->
    "koza.wakayama.jp";

wakayama_jp("katsuragi", _Any) ->
    "katsuragi.wakayama.jp";

wakayama_jp("hidaka", _Any) ->
    "hidaka.wakayama.jp";

wakayama_jp("hirogawa", _Any) ->
    "hirogawa.wakayama.jp";

wakayama_jp("hashimoto", _Any) ->
    "hashimoto.wakayama.jp";

wakayama_jp("nachikatsuura", _Any) ->
    "nachikatsuura.wakayama.jp";

wakayama_jp("shirahama", _Any) ->
    "shirahama.wakayama.jp";

wakayama_jp("kimino", _Any) ->
    "kimino.wakayama.jp";

wakayama_jp("kushimoto", _Any) ->
    "kushimoto.wakayama.jp";

wakayama_jp("koya", _Any) ->
    "koya.wakayama.jp";

wakayama_jp("tanabe", _Any) ->
    "tanabe.wakayama.jp";

wakayama_jp("yuasa", _Any) ->
    "yuasa.wakayama.jp";

wakayama_jp("kitayama", _Any) ->
    "kitayama.wakayama.jp";

wakayama_jp("misato", _Any) ->
    "misato.wakayama.jp";

wakayama_jp("arida", _Any) ->
    "arida.wakayama.jp";

wakayama_jp("kainan", _Any) ->
    "kainan.wakayama.jp";

wakayama_jp("aridagawa", _Any) ->
    "aridagawa.wakayama.jp";

wakayama_jp("wakayama", _Any) ->
    "wakayama.wakayama.jp";

wakayama_jp("iwade", _Any) ->
    "iwade.wakayama.jp";

wakayama_jp("kozagawa", _Any) ->
    "kozagawa.wakayama.jp";

wakayama_jp("taiji", _Any) ->
    "taiji.wakayama.jp";

wakayama_jp("shingu", _Any) ->
    "shingu.wakayama.jp";

wakayama_jp("kudoyama", _Any) ->
    "kudoyama.wakayama.jp";

wakayama_jp("inami", _Any) ->
    "inami.wakayama.jp";

wakayama_jp("gobo", _Any) ->
    "gobo.wakayama.jp";

wakayama_jp("yura", _Any) ->
    "yura.wakayama.jp";

wakayama_jp("mihama", _Any) ->
    "mihama.wakayama.jp";


wakayama_jp(_, _) ->
    "wakayama.jp".

%% regular rules
osaka_jp("osakasayama", _Any) ->
    "osakasayama.osaka.jp";

osaka_jp("kadoma", _Any) ->
    "kadoma.osaka.jp";

osaka_jp("takaishi", _Any) ->
    "takaishi.osaka.jp";

osaka_jp("habikino", _Any) ->
    "habikino.osaka.jp";

osaka_jp("izumi", _Any) ->
    "izumi.osaka.jp";

osaka_jp("abeno", _Any) ->
    "abeno.osaka.jp";

osaka_jp("kumatori", _Any) ->
    "kumatori.osaka.jp";

osaka_jp("izumiotsu", _Any) ->
    "izumiotsu.osaka.jp";

osaka_jp("ikeda", _Any) ->
    "ikeda.osaka.jp";

osaka_jp("yao", _Any) ->
    "yao.osaka.jp";

osaka_jp("chihayaakasaka", _Any) ->
    "chihayaakasaka.osaka.jp";

osaka_jp("sayama", _Any) ->
    "sayama.osaka.jp";

osaka_jp("minato", _Any) ->
    "minato.osaka.jp";

osaka_jp("nose", _Any) ->
    "nose.osaka.jp";

osaka_jp("nishi", _Any) ->
    "nishi.osaka.jp";

osaka_jp("hannan", _Any) ->
    "hannan.osaka.jp";

osaka_jp("kashiwara", _Any) ->
    "kashiwara.osaka.jp";

osaka_jp("fujiidera", _Any) ->
    "fujiidera.osaka.jp";

osaka_jp("ibaraki", _Any) ->
    "ibaraki.osaka.jp";

osaka_jp("matsubara", _Any) ->
    "matsubara.osaka.jp";

osaka_jp("higashisumiyoshi", _Any) ->
    "higashisumiyoshi.osaka.jp";

osaka_jp("daito", _Any) ->
    "daito.osaka.jp";

osaka_jp("higashiosaka", _Any) ->
    "higashiosaka.osaka.jp";

osaka_jp("kita", _Any) ->
    "kita.osaka.jp";

osaka_jp("settsu", _Any) ->
    "settsu.osaka.jp";

osaka_jp("takatsuki", _Any) ->
    "takatsuki.osaka.jp";

osaka_jp("sakai", _Any) ->
    "sakai.osaka.jp";

osaka_jp("tondabayashi", _Any) ->
    "tondabayashi.osaka.jp";

osaka_jp("higashiyodogawa", _Any) ->
    "higashiyodogawa.osaka.jp";

osaka_jp("kaizuka", _Any) ->
    "kaizuka.osaka.jp";

osaka_jp("tadaoka", _Any) ->
    "tadaoka.osaka.jp";

osaka_jp("taishi", _Any) ->
    "taishi.osaka.jp";

osaka_jp("kawachinagano", _Any) ->
    "kawachinagano.osaka.jp";

osaka_jp("minoh", _Any) ->
    "minoh.osaka.jp";

osaka_jp("tajiri", _Any) ->
    "tajiri.osaka.jp";

osaka_jp("misaki", _Any) ->
    "misaki.osaka.jp";

osaka_jp("neyagawa", _Any) ->
    "neyagawa.osaka.jp";

osaka_jp("shijonawate", _Any) ->
    "shijonawate.osaka.jp";

osaka_jp("katano", _Any) ->
    "katano.osaka.jp";

osaka_jp("toyono", _Any) ->
    "toyono.osaka.jp";

osaka_jp("suita", _Any) ->
    "suita.osaka.jp";

osaka_jp("kishiwada", _Any) ->
    "kishiwada.osaka.jp";

osaka_jp("izumisano", _Any) ->
    "izumisano.osaka.jp";

osaka_jp("moriguchi", _Any) ->
    "moriguchi.osaka.jp";

osaka_jp("shimamoto", _Any) ->
    "shimamoto.osaka.jp";

osaka_jp("toyonaka", _Any) ->
    "toyonaka.osaka.jp";

osaka_jp("sennan", _Any) ->
    "sennan.osaka.jp";

osaka_jp("hirakata", _Any) ->
    "hirakata.osaka.jp";

osaka_jp("kanan", _Any) ->
    "kanan.osaka.jp";

osaka_jp("chuo", _Any) ->
    "chuo.osaka.jp";


osaka_jp(_, _) ->
    "osaka.jp".

%% regular rules
nara_jp("ando", _Any) ->
    "ando.nara.jp";

nara_jp("tenri", _Any) ->
    "tenri.nara.jp";

nara_jp("kawai", _Any) ->
    "kawai.nara.jp";

nara_jp("sakurai", _Any) ->
    "sakurai.nara.jp";

nara_jp("koryo", _Any) ->
    "koryo.nara.jp";

nara_jp("soni", _Any) ->
    "soni.nara.jp";

nara_jp("heguri", _Any) ->
    "heguri.nara.jp";

nara_jp("oji", _Any) ->
    "oji.nara.jp";

nara_jp("yamazoe", _Any) ->
    "yamazoe.nara.jp";

nara_jp("yamatotakada", _Any) ->
    "yamatotakada.nara.jp";

nara_jp("oyodo", _Any) ->
    "oyodo.nara.jp";

nara_jp("ikoma", _Any) ->
    "ikoma.nara.jp";

nara_jp("yamatokoriyama", _Any) ->
    "yamatokoriyama.nara.jp";

nara_jp("uda", _Any) ->
    "uda.nara.jp";

nara_jp("ikaruga", _Any) ->
    "ikaruga.nara.jp";

nara_jp("nara", _Any) ->
    "nara.nara.jp";

nara_jp("kawanishi", _Any) ->
    "kawanishi.nara.jp";

nara_jp("gose", _Any) ->
    "gose.nara.jp";

nara_jp("kanmaki", _Any) ->
    "kanmaki.nara.jp";

nara_jp("katsuragi", _Any) ->
    "katsuragi.nara.jp";

nara_jp("yoshino", _Any) ->
    "yoshino.nara.jp";

nara_jp("takatori", _Any) ->
    "takatori.nara.jp";

nara_jp("kashiba", _Any) ->
    "kashiba.nara.jp";

nara_jp("nosegawa", _Any) ->
    "nosegawa.nara.jp";

nara_jp("kamikitayama", _Any) ->
    "kamikitayama.nara.jp";

nara_jp("mitsue", _Any) ->
    "mitsue.nara.jp";

nara_jp("miyake", _Any) ->
    "miyake.nara.jp";

nara_jp("shimoichi", _Any) ->
    "shimoichi.nara.jp";

nara_jp("shimokitayama", _Any) ->
    "shimokitayama.nara.jp";

nara_jp("tenkawa", _Any) ->
    "tenkawa.nara.jp";

nara_jp("kawakami", _Any) ->
    "kawakami.nara.jp";

nara_jp("tawaramoto", _Any) ->
    "tawaramoto.nara.jp";

nara_jp("kurotaki", _Any) ->
    "kurotaki.nara.jp";

nara_jp("higashiyoshino", _Any) ->
    "higashiyoshino.nara.jp";

nara_jp("ouda", _Any) ->
    "ouda.nara.jp";

nara_jp("sango", _Any) ->
    "sango.nara.jp";

nara_jp("shinjo", _Any) ->
    "shinjo.nara.jp";

nara_jp("kashihara", _Any) ->
    "kashihara.nara.jp";


nara_jp(_, _) ->
    "nara.jp".

%% regular rules
mie_jp("minamiise", _Any) ->
    "minamiise.mie.jp";

mie_jp("kameyama", _Any) ->
    "kameyama.mie.jp";

mie_jp("ureshino", _Any) ->
    "ureshino.mie.jp";

mie_jp("miyama", _Any) ->
    "miyama.mie.jp";

mie_jp("inabe", _Any) ->
    "inabe.mie.jp";

mie_jp("watarai", _Any) ->
    "watarai.mie.jp";

mie_jp("kumano", _Any) ->
    "kumano.mie.jp";

mie_jp("taiki", _Any) ->
    "taiki.mie.jp";

mie_jp("tado", _Any) ->
    "tado.mie.jp";

mie_jp("suzuka", _Any) ->
    "suzuka.mie.jp";

mie_jp("taki", _Any) ->
    "taki.mie.jp";

mie_jp("mihama", _Any) ->
    "mihama.mie.jp";

mie_jp("meiwa", _Any) ->
    "meiwa.mie.jp";

mie_jp("misugi", _Any) ->
    "misugi.mie.jp";

mie_jp("tsu", _Any) ->
    "tsu.mie.jp";

mie_jp("asahi", _Any) ->
    "asahi.mie.jp";

mie_jp("kawagoe", _Any) ->
    "kawagoe.mie.jp";

mie_jp("yokkaichi", _Any) ->
    "yokkaichi.mie.jp";

mie_jp("kiwa", _Any) ->
    "kiwa.mie.jp";

mie_jp("nabari", _Any) ->
    "nabari.mie.jp";

mie_jp("komono", _Any) ->
    "komono.mie.jp";

mie_jp("shima", _Any) ->
    "shima.mie.jp";

mie_jp("toba", _Any) ->
    "toba.mie.jp";

mie_jp("kiho", _Any) ->
    "kiho.mie.jp";

mie_jp("ise", _Any) ->
    "ise.mie.jp";

mie_jp("tamaki", _Any) ->
    "tamaki.mie.jp";

mie_jp("matsusaka", _Any) ->
    "matsusaka.mie.jp";

mie_jp("kisosaki", _Any) ->
    "kisosaki.mie.jp";

mie_jp("kuwana", _Any) ->
    "kuwana.mie.jp";

mie_jp("udono", _Any) ->
    "udono.mie.jp";


mie_jp(_, _) ->
    "mie.jp".

%% regular rules
oita_jp("kokonoe", _Any) ->
    "kokonoe.oita.jp";

oita_jp("kuju", _Any) ->
    "kuju.oita.jp";

oita_jp("oita", _Any) ->
    "oita.oita.jp";

oita_jp("taketa", _Any) ->
    "taketa.oita.jp";

oita_jp("tsukumi", _Any) ->
    "tsukumi.oita.jp";

oita_jp("kamitsue", _Any) ->
    "kamitsue.oita.jp";

oita_jp("bungoono", _Any) ->
    "bungoono.oita.jp";

oita_jp("hasama", _Any) ->
    "hasama.oita.jp";

oita_jp("yufu", _Any) ->
    "yufu.oita.jp";

oita_jp("hiji", _Any) ->
    "hiji.oita.jp";

oita_jp("beppu", _Any) ->
    "beppu.oita.jp";

oita_jp("hita", _Any) ->
    "hita.oita.jp";

oita_jp("usa", _Any) ->
    "usa.oita.jp";

oita_jp("kunisaki", _Any) ->
    "kunisaki.oita.jp";

oita_jp("himeshima", _Any) ->
    "himeshima.oita.jp";

oita_jp("saiki", _Any) ->
    "saiki.oita.jp";

oita_jp("bungotakada", _Any) ->
    "bungotakada.oita.jp";

oita_jp("usuki", _Any) ->
    "usuki.oita.jp";

oita_jp("kusu", _Any) ->
    "kusu.oita.jp";


oita_jp(_, _) ->
    "oita.jp".

%% regular rules
iwate_jp("otsuchi", _Any) ->
    "otsuchi.iwate.jp";

iwate_jp("oshu", _Any) ->
    "oshu.iwate.jp";

iwate_jp("kanegasaki", _Any) ->
    "kanegasaki.iwate.jp";

iwate_jp("kawai", _Any) ->
    "kawai.iwate.jp";

iwate_jp("shiwa", _Any) ->
    "shiwa.iwate.jp";

iwate_jp("ichinohe", _Any) ->
    "ichinohe.iwate.jp";

iwate_jp("karumai", _Any) ->
    "karumai.iwate.jp";

iwate_jp("shizukuishi", _Any) ->
    "shizukuishi.iwate.jp";

iwate_jp("rikuzentakata", _Any) ->
    "rikuzentakata.iwate.jp";

iwate_jp("kuzumaki", _Any) ->
    "kuzumaki.iwate.jp";

iwate_jp("iwaizumi", _Any) ->
    "iwaizumi.iwate.jp";

iwate_jp("yahaba", _Any) ->
    "yahaba.iwate.jp";

iwate_jp("sumita", _Any) ->
    "sumita.iwate.jp";

iwate_jp("kuji", _Any) ->
    "kuji.iwate.jp";

iwate_jp("tono", _Any) ->
    "tono.iwate.jp";

iwate_jp("yamada", _Any) ->
    "yamada.iwate.jp";

iwate_jp("noda", _Any) ->
    "noda.iwate.jp";

iwate_jp("ninohe", _Any) ->
    "ninohe.iwate.jp";

iwate_jp("miyako", _Any) ->
    "miyako.iwate.jp";

iwate_jp("kitakami", _Any) ->
    "kitakami.iwate.jp";

iwate_jp("fudai", _Any) ->
    "fudai.iwate.jp";

iwate_jp("hanamaki", _Any) ->
    "hanamaki.iwate.jp";

iwate_jp("hirono", _Any) ->
    "hirono.iwate.jp";

iwate_jp("fujisawa", _Any) ->
    "fujisawa.iwate.jp";

iwate_jp("hiraizumi", _Any) ->
    "hiraizumi.iwate.jp";

iwate_jp("morioka", _Any) ->
    "morioka.iwate.jp";

iwate_jp("tanohata", _Any) ->
    "tanohata.iwate.jp";

iwate_jp("ichinoseki", _Any) ->
    "ichinoseki.iwate.jp";

iwate_jp("iwate", _Any) ->
    "iwate.iwate.jp";

iwate_jp("kunohe", _Any) ->
    "kunohe.iwate.jp";

iwate_jp("ofunato", _Any) ->
    "ofunato.iwate.jp";

iwate_jp("kamaishi", _Any) ->
    "kamaishi.iwate.jp";

iwate_jp("joboji", _Any) ->
    "joboji.iwate.jp";

iwate_jp("mizusawa", _Any) ->
    "mizusawa.iwate.jp";


iwate_jp(_, _) ->
    "iwate.jp".

%% regular rules
niigata_jp("muika", _Any) ->
    "muika.niigata.jp";

niigata_jp("nagaoka", _Any) ->
    "nagaoka.niigata.jp";

niigata_jp("myoko", _Any) ->
    "myoko.niigata.jp";

niigata_jp("uonuma", _Any) ->
    "uonuma.niigata.jp";

niigata_jp("tagami", _Any) ->
    "tagami.niigata.jp";

niigata_jp("ojiya", _Any) ->
    "ojiya.niigata.jp";

niigata_jp("tochio", _Any) ->
    "tochio.niigata.jp";

niigata_jp("agano", _Any) ->
    "agano.niigata.jp";

niigata_jp("niigata", _Any) ->
    "niigata.niigata.jp";

niigata_jp("mitsuke", _Any) ->
    "mitsuke.niigata.jp";

niigata_jp("omi", _Any) ->
    "omi.niigata.jp";

niigata_jp("kariwa", _Any) ->
    "kariwa.niigata.jp";

niigata_jp("sanjo", _Any) ->
    "sanjo.niigata.jp";

niigata_jp("izumozaki", _Any) ->
    "izumozaki.niigata.jp";

niigata_jp("shibata", _Any) ->
    "shibata.niigata.jp";

niigata_jp("aga", _Any) ->
    "aga.niigata.jp";

niigata_jp("yahiko", _Any) ->
    "yahiko.niigata.jp";

niigata_jp("tainai", _Any) ->
    "tainai.niigata.jp";

niigata_jp("kashiwazaki", _Any) ->
    "kashiwazaki.niigata.jp";

niigata_jp("itoigawa", _Any) ->
    "itoigawa.niigata.jp";

niigata_jp("seiro", _Any) ->
    "seiro.niigata.jp";

niigata_jp("seirou", _Any) ->
    "seirou.niigata.jp";

niigata_jp("tsunan", _Any) ->
    "tsunan.niigata.jp";

niigata_jp("kamo", _Any) ->
    "kamo.niigata.jp";

niigata_jp("yuzawa", _Any) ->
    "yuzawa.niigata.jp";

niigata_jp("sekikawa", _Any) ->
    "sekikawa.niigata.jp";

niigata_jp("yoita", _Any) ->
    "yoita.niigata.jp";

niigata_jp("sado", _Any) ->
    "sado.niigata.jp";

niigata_jp("murakami", _Any) ->
    "murakami.niigata.jp";

niigata_jp("minamiuonuma", _Any) ->
    "minamiuonuma.niigata.jp";

niigata_jp("joetsu", _Any) ->
    "joetsu.niigata.jp";

niigata_jp("tokamachi", _Any) ->
    "tokamachi.niigata.jp";

niigata_jp("gosen", _Any) ->
    "gosen.niigata.jp";

niigata_jp("tsubame", _Any) ->
    "tsubame.niigata.jp";


niigata_jp(_, _) ->
    "niigata.jp".

%% regular rules
nagasaki_jp("iki", _Any) ->
    "iki.nagasaki.jp";

nagasaki_jp("seihi", _Any) ->
    "seihi.nagasaki.jp";

nagasaki_jp("kuchinotsu", _Any) ->
    "kuchinotsu.nagasaki.jp";

nagasaki_jp("unzen", _Any) ->
    "unzen.nagasaki.jp";

nagasaki_jp("sasebo", _Any) ->
    "sasebo.nagasaki.jp";

nagasaki_jp("matsuura", _Any) ->
    "matsuura.nagasaki.jp";

nagasaki_jp("shimabara", _Any) ->
    "shimabara.nagasaki.jp";

nagasaki_jp("goto", _Any) ->
    "goto.nagasaki.jp";

nagasaki_jp("futsu", _Any) ->
    "futsu.nagasaki.jp";

nagasaki_jp("obama", _Any) ->
    "obama.nagasaki.jp";

nagasaki_jp("isahaya", _Any) ->
    "isahaya.nagasaki.jp";

nagasaki_jp("hasami", _Any) ->
    "hasami.nagasaki.jp";

nagasaki_jp("nagasaki", _Any) ->
    "nagasaki.nagasaki.jp";

nagasaki_jp("togitsu", _Any) ->
    "togitsu.nagasaki.jp";

nagasaki_jp("omura", _Any) ->
    "omura.nagasaki.jp";

nagasaki_jp("saikai", _Any) ->
    "saikai.nagasaki.jp";

nagasaki_jp("tsushima", _Any) ->
    "tsushima.nagasaki.jp";

nagasaki_jp("hirado", _Any) ->
    "hirado.nagasaki.jp";

nagasaki_jp("shinkamigoto", _Any) ->
    "shinkamigoto.nagasaki.jp";

nagasaki_jp("oseto", _Any) ->
    "oseto.nagasaki.jp";

nagasaki_jp("chijiwa", _Any) ->
    "chijiwa.nagasaki.jp";

nagasaki_jp("kawatana", _Any) ->
    "kawatana.nagasaki.jp";


nagasaki_jp(_, _) ->
    "nagasaki.jp".

%% regular rules
kochi_jp("ino", _Any) ->
    "ino.kochi.jp";

kochi_jp("ochi", _Any) ->
    "ochi.kochi.jp";

kochi_jp("muroto", _Any) ->
    "muroto.kochi.jp";

kochi_jp("yusuhara", _Any) ->
    "yusuhara.kochi.jp";

kochi_jp("higashitsuno", _Any) ->
    "higashitsuno.kochi.jp";

kochi_jp("nahari", _Any) ->
    "nahari.kochi.jp";

kochi_jp("nankoku", _Any) ->
    "nankoku.kochi.jp";

kochi_jp("motoyama", _Any) ->
    "motoyama.kochi.jp";

kochi_jp("niyodogawa", _Any) ->
    "niyodogawa.kochi.jp";

kochi_jp("sukumo", _Any) ->
    "sukumo.kochi.jp";

kochi_jp("kami", _Any) ->
    "kami.kochi.jp";

kochi_jp("umaji", _Any) ->
    "umaji.kochi.jp";

kochi_jp("tosa", _Any) ->
    "tosa.kochi.jp";

kochi_jp("otsuki", _Any) ->
    "otsuki.kochi.jp";

kochi_jp("kagami", _Any) ->
    "kagami.kochi.jp";

kochi_jp("otoyo", _Any) ->
    "otoyo.kochi.jp";

kochi_jp("nishitosa", _Any) ->
    "nishitosa.kochi.jp";

kochi_jp("aki", _Any) ->
    "aki.kochi.jp";

kochi_jp("susaki", _Any) ->
    "susaki.kochi.jp";

kochi_jp("sakawa", _Any) ->
    "sakawa.kochi.jp";

kochi_jp("kitagawa", _Any) ->
    "kitagawa.kochi.jp";

kochi_jp("mihara", _Any) ->
    "mihara.kochi.jp";

kochi_jp("tsuno", _Any) ->
    "tsuno.kochi.jp";

kochi_jp("kochi", _Any) ->
    "kochi.kochi.jp";

kochi_jp("toyo", _Any) ->
    "toyo.kochi.jp";

kochi_jp("geisei", _Any) ->
    "geisei.kochi.jp";

kochi_jp("okawa", _Any) ->
    "okawa.kochi.jp";

kochi_jp("tosashimizu", _Any) ->
    "tosashimizu.kochi.jp";

kochi_jp("yasuda", _Any) ->
    "yasuda.kochi.jp";

kochi_jp("nakamura", _Any) ->
    "nakamura.kochi.jp";

kochi_jp("hidaka", _Any) ->
    "hidaka.kochi.jp";


kochi_jp(_, _) ->
    "kochi.jp".

%% regular rules
hokkaido_jp("kuromatsunai", _Any) ->
    "kuromatsunai.hokkaido.jp";

hokkaido_jp("otoineppu", _Any) ->
    "otoineppu.hokkaido.jp";

hokkaido_jp("erimo", _Any) ->
    "erimo.hokkaido.jp";

hokkaido_jp("akkeshi", _Any) ->
    "akkeshi.hokkaido.jp";

hokkaido_jp("shakotan", _Any) ->
    "shakotan.hokkaido.jp";

hokkaido_jp("takikawa", _Any) ->
    "takikawa.hokkaido.jp";

hokkaido_jp("tohma", _Any) ->
    "tohma.hokkaido.jp";

hokkaido_jp("tomakomai", _Any) ->
    "tomakomai.hokkaido.jp";

hokkaido_jp("shiranuka", _Any) ->
    "shiranuka.hokkaido.jp";

hokkaido_jp("iwanai", _Any) ->
    "iwanai.hokkaido.jp";

hokkaido_jp("kamikawa", _Any) ->
    "kamikawa.hokkaido.jp";

hokkaido_jp("honbetsu", _Any) ->
    "honbetsu.hokkaido.jp";

hokkaido_jp("toya", _Any) ->
    "toya.hokkaido.jp";

hokkaido_jp("shimamaki", _Any) ->
    "shimamaki.hokkaido.jp";

hokkaido_jp("iwamizawa", _Any) ->
    "iwamizawa.hokkaido.jp";

hokkaido_jp("bihoro", _Any) ->
    "bihoro.hokkaido.jp";

hokkaido_jp("obihiro", _Any) ->
    "obihiro.hokkaido.jp";

hokkaido_jp("bibai", _Any) ->
    "bibai.hokkaido.jp";

hokkaido_jp("rankoshi", _Any) ->
    "rankoshi.hokkaido.jp";

hokkaido_jp("tsukigata", _Any) ->
    "tsukigata.hokkaido.jp";

hokkaido_jp("asahikawa", _Any) ->
    "asahikawa.hokkaido.jp";

hokkaido_jp("noboribetsu", _Any) ->
    "noboribetsu.hokkaido.jp";

hokkaido_jp("fukushima", _Any) ->
    "fukushima.hokkaido.jp";

hokkaido_jp("biratori", _Any) ->
    "biratori.hokkaido.jp";

hokkaido_jp("horonobe", _Any) ->
    "horonobe.hokkaido.jp";

hokkaido_jp("oumu", _Any) ->
    "oumu.hokkaido.jp";

hokkaido_jp("sarufutsu", _Any) ->
    "sarufutsu.hokkaido.jp";

hokkaido_jp("toyotomi", _Any) ->
    "toyotomi.hokkaido.jp";

hokkaido_jp("uryu", _Any) ->
    "uryu.hokkaido.jp";

hokkaido_jp("kunneppu", _Any) ->
    "kunneppu.hokkaido.jp";

hokkaido_jp("nakagawa", _Any) ->
    "nakagawa.hokkaido.jp";

hokkaido_jp("atsuma", _Any) ->
    "atsuma.hokkaido.jp";

hokkaido_jp("kembuchi", _Any) ->
    "kembuchi.hokkaido.jp";

hokkaido_jp("hokuryu", _Any) ->
    "hokuryu.hokkaido.jp";

hokkaido_jp("kimobetsu", _Any) ->
    "kimobetsu.hokkaido.jp";

hokkaido_jp("koshimizu", _Any) ->
    "koshimizu.hokkaido.jp";

hokkaido_jp("utashinai", _Any) ->
    "utashinai.hokkaido.jp";

hokkaido_jp("oketo", _Any) ->
    "oketo.hokkaido.jp";

hokkaido_jp("embetsu", _Any) ->
    "embetsu.hokkaido.jp";

hokkaido_jp("nishiokoppe", _Any) ->
    "nishiokoppe.hokkaido.jp";

hokkaido_jp("rebun", _Any) ->
    "rebun.hokkaido.jp";

hokkaido_jp("eniwa", _Any) ->
    "eniwa.hokkaido.jp";

hokkaido_jp("nakasatsunai", _Any) ->
    "nakasatsunai.hokkaido.jp";

hokkaido_jp("saroma", _Any) ->
    "saroma.hokkaido.jp";

hokkaido_jp("imakane", _Any) ->
    "imakane.hokkaido.jp";

hokkaido_jp("mombetsu", _Any) ->
    "mombetsu.hokkaido.jp";

hokkaido_jp("sunagawa", _Any) ->
    "sunagawa.hokkaido.jp";

hokkaido_jp("nakatombetsu", _Any) ->
    "nakatombetsu.hokkaido.jp";

hokkaido_jp("nanporo", _Any) ->
    "nanporo.hokkaido.jp";

hokkaido_jp("rishirifuji", _Any) ->
    "rishirifuji.hokkaido.jp";

hokkaido_jp("teshikaga", _Any) ->
    "teshikaga.hokkaido.jp";

hokkaido_jp("ashoro", _Any) ->
    "ashoro.hokkaido.jp";

hokkaido_jp("mukawa", _Any) ->
    "mukawa.hokkaido.jp";

hokkaido_jp("kutchan", _Any) ->
    "kutchan.hokkaido.jp";

hokkaido_jp("kushiro", _Any) ->
    "kushiro.hokkaido.jp";

hokkaido_jp("shikabe", _Any) ->
    "shikabe.hokkaido.jp";

hokkaido_jp("kikonai", _Any) ->
    "kikonai.hokkaido.jp";

hokkaido_jp("hamatonbetsu", _Any) ->
    "hamatonbetsu.hokkaido.jp";

hokkaido_jp("shintoku", _Any) ->
    "shintoku.hokkaido.jp";

hokkaido_jp("assabu", _Any) ->
    "assabu.hokkaido.jp";

hokkaido_jp("otaru", _Any) ->
    "otaru.hokkaido.jp";

hokkaido_jp("wakkanai", _Any) ->
    "wakkanai.hokkaido.jp";

hokkaido_jp("yoichi", _Any) ->
    "yoichi.hokkaido.jp";

hokkaido_jp("shibecha", _Any) ->
    "shibecha.hokkaido.jp";

hokkaido_jp("fukagawa", _Any) ->
    "fukagawa.hokkaido.jp";

hokkaido_jp("obira", _Any) ->
    "obira.hokkaido.jp";

hokkaido_jp("chippubetsu", _Any) ->
    "chippubetsu.hokkaido.jp";

hokkaido_jp("kamifurano", _Any) ->
    "kamifurano.hokkaido.jp";

hokkaido_jp("shikaoi", _Any) ->
    "shikaoi.hokkaido.jp";

hokkaido_jp("shiraoi", _Any) ->
    "shiraoi.hokkaido.jp";

hokkaido_jp("moseushi", _Any) ->
    "moseushi.hokkaido.jp";

hokkaido_jp("takasu", _Any) ->
    "takasu.hokkaido.jp";

hokkaido_jp("kuriyama", _Any) ->
    "kuriyama.hokkaido.jp";

hokkaido_jp("hidaka", _Any) ->
    "hidaka.hokkaido.jp";

hokkaido_jp("ozora", _Any) ->
    "ozora.hokkaido.jp";

hokkaido_jp("otofuke", _Any) ->
    "otofuke.hokkaido.jp";

hokkaido_jp("naie", _Any) ->
    "naie.hokkaido.jp";

hokkaido_jp("esan", _Any) ->
    "esan.hokkaido.jp";

hokkaido_jp("higashikagura", _Any) ->
    "higashikagura.hokkaido.jp";

hokkaido_jp("minamifurano", _Any) ->
    "minamifurano.hokkaido.jp";

hokkaido_jp("okoppe", _Any) ->
    "okoppe.hokkaido.jp";

hokkaido_jp("taiki", _Any) ->
    "taiki.hokkaido.jp";

hokkaido_jp("shari", _Any) ->
    "shari.hokkaido.jp";

hokkaido_jp("chitose", _Any) ->
    "chitose.hokkaido.jp";

hokkaido_jp("mashike", _Any) ->
    "mashike.hokkaido.jp";

hokkaido_jp("otobe", _Any) ->
    "otobe.hokkaido.jp";

hokkaido_jp("nayoro", _Any) ->
    "nayoro.hokkaido.jp";

hokkaido_jp("numata", _Any) ->
    "numata.hokkaido.jp";

hokkaido_jp("sobetsu", _Any) ->
    "sobetsu.hokkaido.jp";

hokkaido_jp("kyowa", _Any) ->
    "kyowa.hokkaido.jp";

hokkaido_jp("pippu", _Any) ->
    "pippu.hokkaido.jp";

hokkaido_jp("tobetsu", _Any) ->
    "tobetsu.hokkaido.jp";

hokkaido_jp("shimokawa", _Any) ->
    "shimokawa.hokkaido.jp";

hokkaido_jp("abashiri", _Any) ->
    "abashiri.hokkaido.jp";

hokkaido_jp("date", _Any) ->
    "date.hokkaido.jp";

hokkaido_jp("biei", _Any) ->
    "biei.hokkaido.jp";

hokkaido_jp("hiroo", _Any) ->
    "hiroo.hokkaido.jp";

hokkaido_jp("kiyosato", _Any) ->
    "kiyosato.hokkaido.jp";

hokkaido_jp("niki", _Any) ->
    "niki.hokkaido.jp";

hokkaido_jp("urakawa", _Any) ->
    "urakawa.hokkaido.jp";

hokkaido_jp("wassamu", _Any) ->
    "wassamu.hokkaido.jp";

hokkaido_jp("tomari", _Any) ->
    "tomari.hokkaido.jp";

hokkaido_jp("hakodate", _Any) ->
    "hakodate.hokkaido.jp";

hokkaido_jp("muroran", _Any) ->
    "muroran.hokkaido.jp";

hokkaido_jp("niikappu", _Any) ->
    "niikappu.hokkaido.jp";

hokkaido_jp("ashibetsu", _Any) ->
    "ashibetsu.hokkaido.jp";

hokkaido_jp("urausu", _Any) ->
    "urausu.hokkaido.jp";

hokkaido_jp("higashikawa", _Any) ->
    "higashikawa.hokkaido.jp";

hokkaido_jp("kamishihoro", _Any) ->
    "kamishihoro.hokkaido.jp";

hokkaido_jp("bifuka", _Any) ->
    "bifuka.hokkaido.jp";

hokkaido_jp("toyoura", _Any) ->
    "toyoura.hokkaido.jp";

hokkaido_jp("shiriuchi", _Any) ->
    "shiriuchi.hokkaido.jp";

hokkaido_jp("kitahiroshima", _Any) ->
    "kitahiroshima.hokkaido.jp";

hokkaido_jp("horokanai", _Any) ->
    "horokanai.hokkaido.jp";

hokkaido_jp("yakumo", _Any) ->
    "yakumo.hokkaido.jp";

hokkaido_jp("tsubetsu", _Any) ->
    "tsubetsu.hokkaido.jp";

hokkaido_jp("esashi", _Any) ->
    "esashi.hokkaido.jp";

hokkaido_jp("shibetsu", _Any) ->
    "shibetsu.hokkaido.jp";

hokkaido_jp("matsumae", _Any) ->
    "matsumae.hokkaido.jp";

hokkaido_jp("haboro", _Any) ->
    "haboro.hokkaido.jp";

hokkaido_jp("hokuto", _Any) ->
    "hokuto.hokkaido.jp";

hokkaido_jp("ikeda", _Any) ->
    "ikeda.hokkaido.jp";

hokkaido_jp("ishikari", _Any) ->
    "ishikari.hokkaido.jp";

hokkaido_jp("kayabe", _Any) ->
    "kayabe.hokkaido.jp";

hokkaido_jp("shinshinotsu", _Any) ->
    "shinshinotsu.hokkaido.jp";

hokkaido_jp("mikasa", _Any) ->
    "mikasa.hokkaido.jp";

hokkaido_jp("kamisunagawa", _Any) ->
    "kamisunagawa.hokkaido.jp";

hokkaido_jp("furano", _Any) ->
    "furano.hokkaido.jp";

hokkaido_jp("shimizu", _Any) ->
    "shimizu.hokkaido.jp";

hokkaido_jp("furubira", _Any) ->
    "furubira.hokkaido.jp";

hokkaido_jp("nanae", _Any) ->
    "nanae.hokkaido.jp";

hokkaido_jp("abira", _Any) ->
    "abira.hokkaido.jp";

hokkaido_jp("kamoenai", _Any) ->
    "kamoenai.hokkaido.jp";

hokkaido_jp("kitami", _Any) ->
    "kitami.hokkaido.jp";

hokkaido_jp("ebetsu", _Any) ->
    "ebetsu.hokkaido.jp";

hokkaido_jp("rishiri", _Any) ->
    "rishiri.hokkaido.jp";

hokkaido_jp("toyako", _Any) ->
    "toyako.hokkaido.jp";

hokkaido_jp("nemuro", _Any) ->
    "nemuro.hokkaido.jp";

hokkaido_jp("aibetsu", _Any) ->
    "aibetsu.hokkaido.jp";

hokkaido_jp("akabira", _Any) ->
    "akabira.hokkaido.jp";

hokkaido_jp("rikubetsu", _Any) ->
    "rikubetsu.hokkaido.jp";

hokkaido_jp("takinoue", _Any) ->
    "takinoue.hokkaido.jp";


hokkaido_jp(_, _) ->
    "hokkaido.jp".

%% regular rules
tokyo_jp("komae", _Any) ->
    "komae.tokyo.jp";

tokyo_jp("koganei", _Any) ->
    "koganei.tokyo.jp";

tokyo_jp("ogasawara", _Any) ->
    "ogasawara.tokyo.jp";

tokyo_jp("kokubunji", _Any) ->
    "kokubunji.tokyo.jp";

tokyo_jp("setagaya", _Any) ->
    "setagaya.tokyo.jp";

tokyo_jp("minato", _Any) ->
    "minato.tokyo.jp";

tokyo_jp("hinohara", _Any) ->
    "hinohara.tokyo.jp";

tokyo_jp("sumida", _Any) ->
    "sumida.tokyo.jp";

tokyo_jp("hino", _Any) ->
    "hino.tokyo.jp";

tokyo_jp("fussa", _Any) ->
    "fussa.tokyo.jp";

tokyo_jp("hachioji", _Any) ->
    "hachioji.tokyo.jp";

tokyo_jp("tama", _Any) ->
    "tama.tokyo.jp";

tokyo_jp("chiyoda", _Any) ->
    "chiyoda.tokyo.jp";

tokyo_jp("machida", _Any) ->
    "machida.tokyo.jp";

tokyo_jp("chofu", _Any) ->
    "chofu.tokyo.jp";

tokyo_jp("ome", _Any) ->
    "ome.tokyo.jp";

tokyo_jp("bunkyo", _Any) ->
    "bunkyo.tokyo.jp";

tokyo_jp("kunitachi", _Any) ->
    "kunitachi.tokyo.jp";

tokyo_jp("shibuya", _Any) ->
    "shibuya.tokyo.jp";

tokyo_jp("aogashima", _Any) ->
    "aogashima.tokyo.jp";

tokyo_jp("hachijo", _Any) ->
    "hachijo.tokyo.jp";

tokyo_jp("higashimurayama", _Any) ->
    "higashimurayama.tokyo.jp";

tokyo_jp("higashikurume", _Any) ->
    "higashikurume.tokyo.jp";

tokyo_jp("musashino", _Any) ->
    "musashino.tokyo.jp";

tokyo_jp("nerima", _Any) ->
    "nerima.tokyo.jp";

tokyo_jp("taito", _Any) ->
    "taito.tokyo.jp";

tokyo_jp("hinode", _Any) ->
    "hinode.tokyo.jp";

tokyo_jp("adachi", _Any) ->
    "adachi.tokyo.jp";

tokyo_jp("akishima", _Any) ->
    "akishima.tokyo.jp";

tokyo_jp("mitaka", _Any) ->
    "mitaka.tokyo.jp";

tokyo_jp("chuo", _Any) ->
    "chuo.tokyo.jp";

tokyo_jp("kouzushima", _Any) ->
    "kouzushima.tokyo.jp";

tokyo_jp("itabashi", _Any) ->
    "itabashi.tokyo.jp";

tokyo_jp("shinjuku", _Any) ->
    "shinjuku.tokyo.jp";

tokyo_jp("okutama", _Any) ->
    "okutama.tokyo.jp";

tokyo_jp("hamura", _Any) ->
    "hamura.tokyo.jp";

tokyo_jp("kodaira", _Any) ->
    "kodaira.tokyo.jp";

tokyo_jp("oshima", _Any) ->
    "oshima.tokyo.jp";

tokyo_jp("inagi", _Any) ->
    "inagi.tokyo.jp";

tokyo_jp("suginami", _Any) ->
    "suginami.tokyo.jp";

tokyo_jp("katsushika", _Any) ->
    "katsushika.tokyo.jp";

tokyo_jp("musashimurayama", _Any) ->
    "musashimurayama.tokyo.jp";

tokyo_jp("meguro", _Any) ->
    "meguro.tokyo.jp";

tokyo_jp("akiruno", _Any) ->
    "akiruno.tokyo.jp";

tokyo_jp("toshima", _Any) ->
    "toshima.tokyo.jp";

tokyo_jp("higashiyamato", _Any) ->
    "higashiyamato.tokyo.jp";

tokyo_jp("mizuho", _Any) ->
    "mizuho.tokyo.jp";

tokyo_jp("edogawa", _Any) ->
    "edogawa.tokyo.jp";

tokyo_jp("koto", _Any) ->
    "koto.tokyo.jp";

tokyo_jp("arakawa", _Any) ->
    "arakawa.tokyo.jp";

tokyo_jp("ota", _Any) ->
    "ota.tokyo.jp";

tokyo_jp("kiyose", _Any) ->
    "kiyose.tokyo.jp";

tokyo_jp("kita", _Any) ->
    "kita.tokyo.jp";

tokyo_jp("tachikawa", _Any) ->
    "tachikawa.tokyo.jp";

tokyo_jp("nakano", _Any) ->
    "nakano.tokyo.jp";

tokyo_jp("shinagawa", _Any) ->
    "shinagawa.tokyo.jp";

tokyo_jp("fuchu", _Any) ->
    "fuchu.tokyo.jp";


tokyo_jp(_, _) ->
    "tokyo.jp".

%% regular rules
ne_jp("aseinet", []) ->
    "aseinet.ne.jp";
ne_jp("aseinet", Parts) ->
    [First | Rest] = Parts,
    aseinet_ne_jp(First, Rest);

ne_jp("topaz", _Any) ->
    "topaz.ne.jp";

ne_jp("sakura", _Any) ->
    "sakura.ne.jp";

ne_jp("mints", _Any) ->
    "mints.ne.jp";

ne_jp("ivory", _Any) ->
    "ivory.ne.jp";

ne_jp("gehirn", _Any) ->
    "gehirn.ne.jp";

ne_jp("sumomo", _Any) ->
    "sumomo.ne.jp";

ne_jp("mokuren", _Any) ->
    "mokuren.ne.jp";

ne_jp("opal", _Any) ->
    "opal.ne.jp";


ne_jp(_, _) ->
    "ne.jp".

%% regular rules
aseinet_ne_jp("user", _Any) ->
    "user.aseinet.ne.jp";


aseinet_ne_jp(_, _) ->
    "aseinet.ne.jp".

%% regular rules
webaccel_jp("rs", _Any) ->
    "rs.webaccel.jp";

webaccel_jp("user", _Any) ->
    "user.webaccel.jp";


webaccel_jp(_, _) ->
    "webaccel.jp".

%% regular rules
toyama_jp("kamiichi", _Any) ->
    "kamiichi.toyama.jp";

toyama_jp("fukumitsu", _Any) ->
    "fukumitsu.toyama.jp";

toyama_jp("namerikawa", _Any) ->
    "namerikawa.toyama.jp";

toyama_jp("oyabe", _Any) ->
    "oyabe.toyama.jp";

toyama_jp("taira", _Any) ->
    "taira.toyama.jp";

toyama_jp("nyuzen", _Any) ->
    "nyuzen.toyama.jp";

toyama_jp("kurobe", _Any) ->
    "kurobe.toyama.jp";

toyama_jp("tateyama", _Any) ->
    "tateyama.toyama.jp";

toyama_jp("johana", _Any) ->
    "johana.toyama.jp";

toyama_jp("inami", _Any) ->
    "inami.toyama.jp";

toyama_jp("fuchu", _Any) ->
    "fuchu.toyama.jp";

toyama_jp("imizu", _Any) ->
    "imizu.toyama.jp";

toyama_jp("asahi", _Any) ->
    "asahi.toyama.jp";

toyama_jp("yamada", _Any) ->
    "yamada.toyama.jp";

toyama_jp("nakaniikawa", _Any) ->
    "nakaniikawa.toyama.jp";

toyama_jp("nanto", _Any) ->
    "nanto.toyama.jp";

toyama_jp("himi", _Any) ->
    "himi.toyama.jp";

toyama_jp("uozu", _Any) ->
    "uozu.toyama.jp";

toyama_jp("tonami", _Any) ->
    "tonami.toyama.jp";

toyama_jp("funahashi", _Any) ->
    "funahashi.toyama.jp";

toyama_jp("unazuki", _Any) ->
    "unazuki.toyama.jp";

toyama_jp("toga", _Any) ->
    "toga.toyama.jp";

toyama_jp("toyama", _Any) ->
    "toyama.toyama.jp";

toyama_jp("takaoka", _Any) ->
    "takaoka.toyama.jp";


toyama_jp(_, _) ->
    "toyama.jp".

%% regular rules
ehime_jp("toon", _Any) ->
    "toon.ehime.jp";

ehime_jp("masaki", _Any) ->
    "masaki.ehime.jp";

ehime_jp("uwajima", _Any) ->
    "uwajima.ehime.jp";

ehime_jp("yawatahama", _Any) ->
    "yawatahama.ehime.jp";

ehime_jp("ozu", _Any) ->
    "ozu.ehime.jp";

ehime_jp("uchiko", _Any) ->
    "uchiko.ehime.jp";

ehime_jp("namikata", _Any) ->
    "namikata.ehime.jp";

ehime_jp("kumakogen", _Any) ->
    "kumakogen.ehime.jp";

ehime_jp("ikata", _Any) ->
    "ikata.ehime.jp";

ehime_jp("seiyo", _Any) ->
    "seiyo.ehime.jp";

ehime_jp("matsuno", _Any) ->
    "matsuno.ehime.jp";

ehime_jp("ainan", _Any) ->
    "ainan.ehime.jp";

ehime_jp("tobe", _Any) ->
    "tobe.ehime.jp";

ehime_jp("saijo", _Any) ->
    "saijo.ehime.jp";

ehime_jp("honai", _Any) ->
    "honai.ehime.jp";

ehime_jp("kamijima", _Any) ->
    "kamijima.ehime.jp";

ehime_jp("shikokuchuo", _Any) ->
    "shikokuchuo.ehime.jp";

ehime_jp("niihama", _Any) ->
    "niihama.ehime.jp";

ehime_jp("kihoku", _Any) ->
    "kihoku.ehime.jp";

ehime_jp("imabari", _Any) ->
    "imabari.ehime.jp";

ehime_jp("matsuyama", _Any) ->
    "matsuyama.ehime.jp";

ehime_jp("iyo", _Any) ->
    "iyo.ehime.jp";


ehime_jp(_, _) ->
    "ehime.jp".

%% regular rules
gifu_jp("gujo", _Any) ->
    "gujo.gifu.jp";

gifu_jp("kawaue", _Any) ->
    "kawaue.gifu.jp";

gifu_jp("yamagata", _Any) ->
    "yamagata.gifu.jp";

gifu_jp("kani", _Any) ->
    "kani.gifu.jp";

gifu_jp("kasahara", _Any) ->
    "kasahara.gifu.jp";

gifu_jp("kitagata", _Any) ->
    "kitagata.gifu.jp";

gifu_jp("tomika", _Any) ->
    "tomika.gifu.jp";

gifu_jp("yoro", _Any) ->
    "yoro.gifu.jp";

gifu_jp("tarui", _Any) ->
    "tarui.gifu.jp";

gifu_jp("takayama", _Any) ->
    "takayama.gifu.jp";

gifu_jp("minokamo", _Any) ->
    "minokamo.gifu.jp";

gifu_jp("sekigahara", _Any) ->
    "sekigahara.gifu.jp";

gifu_jp("mizunami", _Any) ->
    "mizunami.gifu.jp";

gifu_jp("yaotsu", _Any) ->
    "yaotsu.gifu.jp";

gifu_jp("ogaki", _Any) ->
    "ogaki.gifu.jp";

gifu_jp("gifu", _Any) ->
    "gifu.gifu.jp";

gifu_jp("seki", _Any) ->
    "seki.gifu.jp";

gifu_jp("tajimi", _Any) ->
    "tajimi.gifu.jp";

gifu_jp("hida", _Any) ->
    "hida.gifu.jp";

gifu_jp("hashima", _Any) ->
    "hashima.gifu.jp";

gifu_jp("sakahogi", _Any) ->
    "sakahogi.gifu.jp";

gifu_jp("ginan", _Any) ->
    "ginan.gifu.jp";

gifu_jp("mino", _Any) ->
    "mino.gifu.jp";

gifu_jp("wanouchi", _Any) ->
    "wanouchi.gifu.jp";

gifu_jp("kakamigahara", _Any) ->
    "kakamigahara.gifu.jp";

gifu_jp("nakatsugawa", _Any) ->
    "nakatsugawa.gifu.jp";

gifu_jp("ena", _Any) ->
    "ena.gifu.jp";

gifu_jp("godo", _Any) ->
    "godo.gifu.jp";

gifu_jp("toki", _Any) ->
    "toki.gifu.jp";

gifu_jp("ikeda", _Any) ->
    "ikeda.gifu.jp";

gifu_jp("hichiso", _Any) ->
    "hichiso.gifu.jp";

gifu_jp("higashishirakawa", _Any) ->
    "higashishirakawa.gifu.jp";

gifu_jp("shirakawa", _Any) ->
    "shirakawa.gifu.jp";

gifu_jp("ibigawa", _Any) ->
    "ibigawa.gifu.jp";

gifu_jp("mitake", _Any) ->
    "mitake.gifu.jp";

gifu_jp("kasamatsu", _Any) ->
    "kasamatsu.gifu.jp";

gifu_jp("motosu", _Any) ->
    "motosu.gifu.jp";

gifu_jp("anpachi", _Any) ->
    "anpachi.gifu.jp";


gifu_jp(_, _) ->
    "gifu.jp".

%% regular rules
saitama_jp("yorii", _Any) ->
    "yorii.saitama.jp";

saitama_jp("urawa", _Any) ->
    "urawa.saitama.jp";

saitama_jp("yoshimi", _Any) ->
    "yoshimi.saitama.jp";

saitama_jp("hanno", _Any) ->
    "hanno.saitama.jp";

saitama_jp("saitama", _Any) ->
    "saitama.saitama.jp";

saitama_jp("soka", _Any) ->
    "soka.saitama.jp";

saitama_jp("yoshikawa", _Any) ->
    "yoshikawa.saitama.jp";

saitama_jp("hidaka", _Any) ->
    "hidaka.saitama.jp";

saitama_jp("ogose", _Any) ->
    "ogose.saitama.jp";

saitama_jp("misato", _Any) ->
    "misato.saitama.jp";

saitama_jp("iruma", _Any) ->
    "iruma.saitama.jp";

saitama_jp("tsurugashima", _Any) ->
    "tsurugashima.saitama.jp";

saitama_jp("hatoyama", _Any) ->
    "hatoyama.saitama.jp";

saitama_jp("toda", _Any) ->
    "toda.saitama.jp";

saitama_jp("yashio", _Any) ->
    "yashio.saitama.jp";

saitama_jp("fujimi", _Any) ->
    "fujimi.saitama.jp";

saitama_jp("ryokami", _Any) ->
    "ryokami.saitama.jp";

saitama_jp("honjo", _Any) ->
    "honjo.saitama.jp";

saitama_jp("kitamoto", _Any) ->
    "kitamoto.saitama.jp";

saitama_jp("kumagaya", _Any) ->
    "kumagaya.saitama.jp";

saitama_jp("matsubushi", _Any) ->
    "matsubushi.saitama.jp";

saitama_jp("higashimatsuyama", _Any) ->
    "higashimatsuyama.saitama.jp";

saitama_jp("yoshida", _Any) ->
    "yoshida.saitama.jp";

saitama_jp("sayama", _Any) ->
    "sayama.saitama.jp";

saitama_jp("kazo", _Any) ->
    "kazo.saitama.jp";

saitama_jp("yono", _Any) ->
    "yono.saitama.jp";

saitama_jp("satte", _Any) ->
    "satte.saitama.jp";

saitama_jp("iwatsuki", _Any) ->
    "iwatsuki.saitama.jp";

saitama_jp("asaka", _Any) ->
    "asaka.saitama.jp";

saitama_jp("hanyu", _Any) ->
    "hanyu.saitama.jp";

saitama_jp("chichibu", _Any) ->
    "chichibu.saitama.jp";

saitama_jp("kawaguchi", _Any) ->
    "kawaguchi.saitama.jp";

saitama_jp("warabi", _Any) ->
    "warabi.saitama.jp";

saitama_jp("kasukabe", _Any) ->
    "kasukabe.saitama.jp";

saitama_jp("ogano", _Any) ->
    "ogano.saitama.jp";

saitama_jp("kamisato", _Any) ->
    "kamisato.saitama.jp";

saitama_jp("fukaya", _Any) ->
    "fukaya.saitama.jp";

saitama_jp("hatogaya", _Any) ->
    "hatogaya.saitama.jp";

saitama_jp("omiya", _Any) ->
    "omiya.saitama.jp";

saitama_jp("minano", _Any) ->
    "minano.saitama.jp";

saitama_jp("kawagoe", _Any) ->
    "kawagoe.saitama.jp";

saitama_jp("fujimino", _Any) ->
    "fujimino.saitama.jp";

saitama_jp("shiraoka", _Any) ->
    "shiraoka.saitama.jp";

saitama_jp("okegawa", _Any) ->
    "okegawa.saitama.jp";

saitama_jp("kuki", _Any) ->
    "kuki.saitama.jp";

saitama_jp("namegawa", _Any) ->
    "namegawa.saitama.jp";

saitama_jp("hasuda", _Any) ->
    "hasuda.saitama.jp";

saitama_jp("tokorozawa", _Any) ->
    "tokorozawa.saitama.jp";

saitama_jp("koshigaya", _Any) ->
    "koshigaya.saitama.jp";

saitama_jp("sakado", _Any) ->
    "sakado.saitama.jp";

saitama_jp("kamiizumi", _Any) ->
    "kamiizumi.saitama.jp";

saitama_jp("miyoshi", _Any) ->
    "miyoshi.saitama.jp";

saitama_jp("otaki", _Any) ->
    "otaki.saitama.jp";

saitama_jp("miyashiro", _Any) ->
    "miyashiro.saitama.jp";

saitama_jp("moroyama", _Any) ->
    "moroyama.saitama.jp";

saitama_jp("higashichichibu", _Any) ->
    "higashichichibu.saitama.jp";

saitama_jp("tokigawa", _Any) ->
    "tokigawa.saitama.jp";

saitama_jp("shiki", _Any) ->
    "shiki.saitama.jp";

saitama_jp("kamikawa", _Any) ->
    "kamikawa.saitama.jp";

saitama_jp("kounosu", _Any) ->
    "kounosu.saitama.jp";

saitama_jp("niiza", _Any) ->
    "niiza.saitama.jp";

saitama_jp("ranzan", _Any) ->
    "ranzan.saitama.jp";

saitama_jp("sugito", _Any) ->
    "sugito.saitama.jp";

saitama_jp("arakawa", _Any) ->
    "arakawa.saitama.jp";

saitama_jp("yokoze", _Any) ->
    "yokoze.saitama.jp";

saitama_jp("ina", _Any) ->
    "ina.saitama.jp";

saitama_jp("ogawa", _Any) ->
    "ogawa.saitama.jp";

saitama_jp("nagatoro", _Any) ->
    "nagatoro.saitama.jp";

saitama_jp("kawajima", _Any) ->
    "kawajima.saitama.jp";


saitama_jp(_, _) ->
    "saitama.jp".

%% regular rules
miyazaki_jp("ebino", _Any) ->
    "ebino.miyazaki.jp";

miyazaki_jp("shintomi", _Any) ->
    "shintomi.miyazaki.jp";

miyazaki_jp("kadogawa", _Any) ->
    "kadogawa.miyazaki.jp";

miyazaki_jp("miyakonojo", _Any) ->
    "miyakonojo.miyazaki.jp";

miyazaki_jp("nishimera", _Any) ->
    "nishimera.miyazaki.jp";

miyazaki_jp("kobayashi", _Any) ->
    "kobayashi.miyazaki.jp";

miyazaki_jp("aya", _Any) ->
    "aya.miyazaki.jp";

miyazaki_jp("miyazaki", _Any) ->
    "miyazaki.miyazaki.jp";

miyazaki_jp("takaharu", _Any) ->
    "takaharu.miyazaki.jp";

miyazaki_jp("kitakata", _Any) ->
    "kitakata.miyazaki.jp";

miyazaki_jp("hyuga", _Any) ->
    "hyuga.miyazaki.jp";

miyazaki_jp("morotsuka", _Any) ->
    "morotsuka.miyazaki.jp";

miyazaki_jp("nobeoka", _Any) ->
    "nobeoka.miyazaki.jp";

miyazaki_jp("kawaminami", _Any) ->
    "kawaminami.miyazaki.jp";

miyazaki_jp("gokase", _Any) ->
    "gokase.miyazaki.jp";

miyazaki_jp("mimata", _Any) ->
    "mimata.miyazaki.jp";

miyazaki_jp("saito", _Any) ->
    "saito.miyazaki.jp";

miyazaki_jp("kitaura", _Any) ->
    "kitaura.miyazaki.jp";

miyazaki_jp("shiiba", _Any) ->
    "shiiba.miyazaki.jp";

miyazaki_jp("nichinan", _Any) ->
    "nichinan.miyazaki.jp";

miyazaki_jp("takazaki", _Any) ->
    "takazaki.miyazaki.jp";

miyazaki_jp("kushima", _Any) ->
    "kushima.miyazaki.jp";

miyazaki_jp("kitagawa", _Any) ->
    "kitagawa.miyazaki.jp";

miyazaki_jp("tsuno", _Any) ->
    "tsuno.miyazaki.jp";

miyazaki_jp("takanabe", _Any) ->
    "takanabe.miyazaki.jp";

miyazaki_jp("kijo", _Any) ->
    "kijo.miyazaki.jp";

miyazaki_jp("kunitomi", _Any) ->
    "kunitomi.miyazaki.jp";


miyazaki_jp(_, _) ->
    "miyazaki.jp".

%% regular rules
yamaguchi_jp("ube", _Any) ->
    "ube.yamaguchi.jp";

yamaguchi_jp("hagi", _Any) ->
    "hagi.yamaguchi.jp";

yamaguchi_jp("abu", _Any) ->
    "abu.yamaguchi.jp";

yamaguchi_jp("oshima", _Any) ->
    "oshima.yamaguchi.jp";

yamaguchi_jp("kudamatsu", _Any) ->
    "kudamatsu.yamaguchi.jp";

yamaguchi_jp("hofu", _Any) ->
    "hofu.yamaguchi.jp";

yamaguchi_jp("shunan", _Any) ->
    "shunan.yamaguchi.jp";

yamaguchi_jp("tabuse", _Any) ->
    "tabuse.yamaguchi.jp";

yamaguchi_jp("mitou", _Any) ->
    "mitou.yamaguchi.jp";

yamaguchi_jp("hikari", _Any) ->
    "hikari.yamaguchi.jp";

yamaguchi_jp("iwakuni", _Any) ->
    "iwakuni.yamaguchi.jp";

yamaguchi_jp("yuu", _Any) ->
    "yuu.yamaguchi.jp";

yamaguchi_jp("tokuyama", _Any) ->
    "tokuyama.yamaguchi.jp";

yamaguchi_jp("toyota", _Any) ->
    "toyota.yamaguchi.jp";

yamaguchi_jp("nagato", _Any) ->
    "nagato.yamaguchi.jp";

yamaguchi_jp("shimonoseki", _Any) ->
    "shimonoseki.yamaguchi.jp";


yamaguchi_jp(_, _) ->
    "yamaguchi.jp".

%% regular rules
okinawa_jp("onna", _Any) ->
    "onna.okinawa.jp";

okinawa_jp("kitanakagusuku", _Any) ->
    "kitanakagusuku.okinawa.jp";

okinawa_jp("taketomi", _Any) ->
    "taketomi.okinawa.jp";

okinawa_jp("ginoza", _Any) ->
    "ginoza.okinawa.jp";

okinawa_jp("hirara", _Any) ->
    "hirara.okinawa.jp";

okinawa_jp("haebaru", _Any) ->
    "haebaru.okinawa.jp";

okinawa_jp("nanjo", _Any) ->
    "nanjo.okinawa.jp";

okinawa_jp("kumejima", _Any) ->
    "kumejima.okinawa.jp";

okinawa_jp("yaese", _Any) ->
    "yaese.okinawa.jp";

okinawa_jp("izena", _Any) ->
    "izena.okinawa.jp";

okinawa_jp("ishigaki", _Any) ->
    "ishigaki.okinawa.jp";

okinawa_jp("tomigusuku", _Any) ->
    "tomigusuku.okinawa.jp";

okinawa_jp("aguni", _Any) ->
    "aguni.okinawa.jp";

okinawa_jp("ginowan", _Any) ->
    "ginowan.okinawa.jp";

okinawa_jp("ogimi", _Any) ->
    "ogimi.okinawa.jp";

okinawa_jp("urasoe", _Any) ->
    "urasoe.okinawa.jp";

okinawa_jp("kadena", _Any) ->
    "kadena.okinawa.jp";

okinawa_jp("gushikami", _Any) ->
    "gushikami.okinawa.jp";

okinawa_jp("nakagusuku", _Any) ->
    "nakagusuku.okinawa.jp";

okinawa_jp("kunigami", _Any) ->
    "kunigami.okinawa.jp";

okinawa_jp("nishihara", _Any) ->
    "nishihara.okinawa.jp";

okinawa_jp("tokashiki", _Any) ->
    "tokashiki.okinawa.jp";

okinawa_jp("kin", _Any) ->
    "kin.okinawa.jp";

okinawa_jp("yomitan", _Any) ->
    "yomitan.okinawa.jp";

okinawa_jp("minamidaito", _Any) ->
    "minamidaito.okinawa.jp";

okinawa_jp("yonaguni", _Any) ->
    "yonaguni.okinawa.jp";

okinawa_jp("nago", _Any) ->
    "nago.okinawa.jp";

okinawa_jp("ishikawa", _Any) ->
    "ishikawa.okinawa.jp";

okinawa_jp("zamami", _Any) ->
    "zamami.okinawa.jp";

okinawa_jp("uruma", _Any) ->
    "uruma.okinawa.jp";

okinawa_jp("iheya", _Any) ->
    "iheya.okinawa.jp";

okinawa_jp("yonabaru", _Any) ->
    "yonabaru.okinawa.jp";

okinawa_jp("okinawa", _Any) ->
    "okinawa.okinawa.jp";

okinawa_jp("shimoji", _Any) ->
    "shimoji.okinawa.jp";

okinawa_jp("kitadaito", _Any) ->
    "kitadaito.okinawa.jp";

okinawa_jp("tonaki", _Any) ->
    "tonaki.okinawa.jp";

okinawa_jp("naha", _Any) ->
    "naha.okinawa.jp";

okinawa_jp("motobu", _Any) ->
    "motobu.okinawa.jp";

okinawa_jp("itoman", _Any) ->
    "itoman.okinawa.jp";

okinawa_jp("nakijin", _Any) ->
    "nakijin.okinawa.jp";

okinawa_jp("tarama", _Any) ->
    "tarama.okinawa.jp";

okinawa_jp("higashi", _Any) ->
    "higashi.okinawa.jp";


okinawa_jp(_, _) ->
    "okinawa.jp".

%% regular rules
ishikawa_jp("nonoichi", _Any) ->
    "nonoichi.ishikawa.jp";

ishikawa_jp("nakanoto", _Any) ->
    "nakanoto.ishikawa.jp";

ishikawa_jp("anamizu", _Any) ->
    "anamizu.ishikawa.jp";

ishikawa_jp("hakui", _Any) ->
    "hakui.ishikawa.jp";

ishikawa_jp("tsubata", _Any) ->
    "tsubata.ishikawa.jp";

ishikawa_jp("tsurugi", _Any) ->
    "tsurugi.ishikawa.jp";

ishikawa_jp("suzu", _Any) ->
    "suzu.ishikawa.jp";

ishikawa_jp("wajima", _Any) ->
    "wajima.ishikawa.jp";

ishikawa_jp("shika", _Any) ->
    "shika.ishikawa.jp";

ishikawa_jp("kanazawa", _Any) ->
    "kanazawa.ishikawa.jp";

ishikawa_jp("hakusan", _Any) ->
    "hakusan.ishikawa.jp";

ishikawa_jp("kaga", _Any) ->
    "kaga.ishikawa.jp";

ishikawa_jp("uchinada", _Any) ->
    "uchinada.ishikawa.jp";

ishikawa_jp("noto", _Any) ->
    "noto.ishikawa.jp";

ishikawa_jp("nomi", _Any) ->
    "nomi.ishikawa.jp";

ishikawa_jp("komatsu", _Any) ->
    "komatsu.ishikawa.jp";

ishikawa_jp("nanao", _Any) ->
    "nanao.ishikawa.jp";

ishikawa_jp("kawakita", _Any) ->
    "kawakita.ishikawa.jp";

ishikawa_jp("kahoku", _Any) ->
    "kahoku.ishikawa.jp";


ishikawa_jp(_, _) ->
    "ishikawa.jp".

%% regular rules
tochigi_jp("sano", _Any) ->
    "sano.tochigi.jp";

tochigi_jp("mashiko", _Any) ->
    "mashiko.tochigi.jp";

tochigi_jp("tsuga", _Any) ->
    "tsuga.tochigi.jp";

tochigi_jp("motegi", _Any) ->
    "motegi.tochigi.jp";

tochigi_jp("iwafune", _Any) ->
    "iwafune.tochigi.jp";

tochigi_jp("ohira", _Any) ->
    "ohira.tochigi.jp";

tochigi_jp("moka", _Any) ->
    "moka.tochigi.jp";

tochigi_jp("haga", _Any) ->
    "haga.tochigi.jp";

tochigi_jp("shioya", _Any) ->
    "shioya.tochigi.jp";

tochigi_jp("bato", _Any) ->
    "bato.tochigi.jp";

tochigi_jp("sakura", _Any) ->
    "sakura.tochigi.jp";

tochigi_jp("shimotsuke", _Any) ->
    "shimotsuke.tochigi.jp";

tochigi_jp("utsunomiya", _Any) ->
    "utsunomiya.tochigi.jp";

tochigi_jp("oyama", _Any) ->
    "oyama.tochigi.jp";

tochigi_jp("kaminokawa", _Any) ->
    "kaminokawa.tochigi.jp";

tochigi_jp("kuroiso", _Any) ->
    "kuroiso.tochigi.jp";

tochigi_jp("nikko", _Any) ->
    "nikko.tochigi.jp";

tochigi_jp("karasuyama", _Any) ->
    "karasuyama.tochigi.jp";

tochigi_jp("takanezawa", _Any) ->
    "takanezawa.tochigi.jp";

tochigi_jp("ujiie", _Any) ->
    "ujiie.tochigi.jp";

tochigi_jp("mibu", _Any) ->
    "mibu.tochigi.jp";

tochigi_jp("kanuma", _Any) ->
    "kanuma.tochigi.jp";

tochigi_jp("ashikaga", _Any) ->
    "ashikaga.tochigi.jp";

tochigi_jp("tochigi", _Any) ->
    "tochigi.tochigi.jp";

tochigi_jp("ichikai", _Any) ->
    "ichikai.tochigi.jp";

tochigi_jp("yaita", _Any) ->
    "yaita.tochigi.jp";

tochigi_jp("ohtawara", _Any) ->
    "ohtawara.tochigi.jp";

tochigi_jp("nasushiobara", _Any) ->
    "nasushiobara.tochigi.jp";

tochigi_jp("nasu", _Any) ->
    "nasu.tochigi.jp";

tochigi_jp("nogi", _Any) ->
    "nogi.tochigi.jp";

tochigi_jp("nishikata", _Any) ->
    "nishikata.tochigi.jp";


tochigi_jp(_, _) ->
    "tochigi.jp".

%% regular rules
miyagi_jp("watari", _Any) ->
    "watari.miyagi.jp";

miyagi_jp("matsushima", _Any) ->
    "matsushima.miyagi.jp";

miyagi_jp("iwanuma", _Any) ->
    "iwanuma.miyagi.jp";

miyagi_jp("misato", _Any) ->
    "misato.miyagi.jp";

miyagi_jp("shiroishi", _Any) ->
    "shiroishi.miyagi.jp";

miyagi_jp("tagajo", _Any) ->
    "tagajo.miyagi.jp";

miyagi_jp("natori", _Any) ->
    "natori.miyagi.jp";

miyagi_jp("shichikashuku", _Any) ->
    "shichikashuku.miyagi.jp";

miyagi_jp("taiwa", _Any) ->
    "taiwa.miyagi.jp";

miyagi_jp("kakuda", _Any) ->
    "kakuda.miyagi.jp";

miyagi_jp("rifu", _Any) ->
    "rifu.miyagi.jp";

miyagi_jp("zao", _Any) ->
    "zao.miyagi.jp";

miyagi_jp("tomiya", _Any) ->
    "tomiya.miyagi.jp";

miyagi_jp("ogawara", _Any) ->
    "ogawara.miyagi.jp";

miyagi_jp("tome", _Any) ->
    "tome.miyagi.jp";

miyagi_jp("shibata", _Any) ->
    "shibata.miyagi.jp";

miyagi_jp("osaki", _Any) ->
    "osaki.miyagi.jp";

miyagi_jp("ishinomaki", _Any) ->
    "ishinomaki.miyagi.jp";

miyagi_jp("ohira", _Any) ->
    "ohira.miyagi.jp";

miyagi_jp("murata", _Any) ->
    "murata.miyagi.jp";

miyagi_jp("semine", _Any) ->
    "semine.miyagi.jp";

miyagi_jp("kawasaki", _Any) ->
    "kawasaki.miyagi.jp";

miyagi_jp("furukawa", _Any) ->
    "furukawa.miyagi.jp";

miyagi_jp("minamisanriku", _Any) ->
    "minamisanriku.miyagi.jp";

miyagi_jp("marumori", _Any) ->
    "marumori.miyagi.jp";

miyagi_jp("kami", _Any) ->
    "kami.miyagi.jp";

miyagi_jp("shiogama", _Any) ->
    "shiogama.miyagi.jp";

miyagi_jp("shikama", _Any) ->
    "shikama.miyagi.jp";

miyagi_jp("wakuya", _Any) ->
    "wakuya.miyagi.jp";

miyagi_jp("yamamoto", _Any) ->
    "yamamoto.miyagi.jp";

miyagi_jp("onagawa", _Any) ->
    "onagawa.miyagi.jp";

miyagi_jp("higashimatsushima", _Any) ->
    "higashimatsushima.miyagi.jp";


miyagi_jp(_, _) ->
    "miyagi.jp".

%% regular rules
fukuoka_jp("shinyoshitomi", _Any) ->
    "shinyoshitomi.fukuoka.jp";

fukuoka_jp("nakama", _Any) ->
    "nakama.fukuoka.jp";

fukuoka_jp("usui", _Any) ->
    "usui.fukuoka.jp";

fukuoka_jp("chikujo", _Any) ->
    "chikujo.fukuoka.jp";

fukuoka_jp("yame", _Any) ->
    "yame.fukuoka.jp";

fukuoka_jp("mizumaki", _Any) ->
    "mizumaki.fukuoka.jp";

fukuoka_jp("dazaifu", _Any) ->
    "dazaifu.fukuoka.jp";

fukuoka_jp("tachiarai", _Any) ->
    "tachiarai.fukuoka.jp";

fukuoka_jp("iizuka", _Any) ->
    "iizuka.fukuoka.jp";

fukuoka_jp("chuo", _Any) ->
    "chuo.fukuoka.jp";

fukuoka_jp("onojo", _Any) ->
    "onojo.fukuoka.jp";

fukuoka_jp("nakagawa", _Any) ->
    "nakagawa.fukuoka.jp";

fukuoka_jp("oki", _Any) ->
    "oki.fukuoka.jp";

fukuoka_jp("kasuga", _Any) ->
    "kasuga.fukuoka.jp";

fukuoka_jp("kawara", _Any) ->
    "kawara.fukuoka.jp";

fukuoka_jp("saigawa", _Any) ->
    "saigawa.fukuoka.jp";

fukuoka_jp("oto", _Any) ->
    "oto.fukuoka.jp";

fukuoka_jp("miyawaka", _Any) ->
    "miyawaka.fukuoka.jp";

fukuoka_jp("okagaki", _Any) ->
    "okagaki.fukuoka.jp";

fukuoka_jp("kasuya", _Any) ->
    "kasuya.fukuoka.jp";

fukuoka_jp("shonai", _Any) ->
    "shonai.fukuoka.jp";

fukuoka_jp("kurogi", _Any) ->
    "kurogi.fukuoka.jp";

fukuoka_jp("chikuho", _Any) ->
    "chikuho.fukuoka.jp";

fukuoka_jp("ashiya", _Any) ->
    "ashiya.fukuoka.jp";

fukuoka_jp("fukuchi", _Any) ->
    "fukuchi.fukuoka.jp";

fukuoka_jp("toyotsu", _Any) ->
    "toyotsu.fukuoka.jp";

fukuoka_jp("kurate", _Any) ->
    "kurate.fukuoka.jp";

fukuoka_jp("hirokawa", _Any) ->
    "hirokawa.fukuoka.jp";

fukuoka_jp("minami", _Any) ->
    "minami.fukuoka.jp";

fukuoka_jp("shingu", _Any) ->
    "shingu.fukuoka.jp";

fukuoka_jp("inatsuki", _Any) ->
    "inatsuki.fukuoka.jp";

fukuoka_jp("tsuiki", _Any) ->
    "tsuiki.fukuoka.jp";

fukuoka_jp("chikushino", _Any) ->
    "chikushino.fukuoka.jp";

fukuoka_jp("hisayama", _Any) ->
    "hisayama.fukuoka.jp";

fukuoka_jp("keisen", _Any) ->
    "keisen.fukuoka.jp";

fukuoka_jp("takata", _Any) ->
    "takata.fukuoka.jp";

fukuoka_jp("nishi", _Any) ->
    "nishi.fukuoka.jp";

fukuoka_jp("sasaguri", _Any) ->
    "sasaguri.fukuoka.jp";

fukuoka_jp("toho", _Any) ->
    "toho.fukuoka.jp";

fukuoka_jp("tagawa", _Any) ->
    "tagawa.fukuoka.jp";

fukuoka_jp("yamada", _Any) ->
    "yamada.fukuoka.jp";

fukuoka_jp("umi", _Any) ->
    "umi.fukuoka.jp";

fukuoka_jp("chikugo", _Any) ->
    "chikugo.fukuoka.jp";

fukuoka_jp("yukuhashi", _Any) ->
    "yukuhashi.fukuoka.jp";

fukuoka_jp("kurume", _Any) ->
    "kurume.fukuoka.jp";

fukuoka_jp("soeda", _Any) ->
    "soeda.fukuoka.jp";

fukuoka_jp("okawa", _Any) ->
    "okawa.fukuoka.jp";

fukuoka_jp("ogori", _Any) ->
    "ogori.fukuoka.jp";

fukuoka_jp("sue", _Any) ->
    "sue.fukuoka.jp";

fukuoka_jp("omuta", _Any) ->
    "omuta.fukuoka.jp";

fukuoka_jp("hakata", _Any) ->
    "hakata.fukuoka.jp";

fukuoka_jp("miyako", _Any) ->
    "miyako.fukuoka.jp";

fukuoka_jp("buzen", _Any) ->
    "buzen.fukuoka.jp";

fukuoka_jp("chikuzen", _Any) ->
    "chikuzen.fukuoka.jp";

fukuoka_jp("munakata", _Any) ->
    "munakata.fukuoka.jp";

fukuoka_jp("onga", _Any) ->
    "onga.fukuoka.jp";

fukuoka_jp("kaho", _Any) ->
    "kaho.fukuoka.jp";

fukuoka_jp("nogata", _Any) ->
    "nogata.fukuoka.jp";

fukuoka_jp("ukiha", _Any) ->
    "ukiha.fukuoka.jp";

fukuoka_jp("higashi", _Any) ->
    "higashi.fukuoka.jp";

fukuoka_jp("miyama", _Any) ->
    "miyama.fukuoka.jp";

fukuoka_jp("yanagawa", _Any) ->
    "yanagawa.fukuoka.jp";

fukuoka_jp("koga", _Any) ->
    "koga.fukuoka.jp";


fukuoka_jp(_, _) ->
    "fukuoka.jp".

%% regular rules
saga_jp("hamatama", _Any) ->
    "hamatama.saga.jp";

saga_jp("genkai", _Any) ->
    "genkai.saga.jp";

saga_jp("kouhoku", _Any) ->
    "kouhoku.saga.jp";

saga_jp("saga", _Any) ->
    "saga.saga.jp";

saga_jp("nishiarita", _Any) ->
    "nishiarita.saga.jp";

saga_jp("ogi", _Any) ->
    "ogi.saga.jp";

saga_jp("yoshinogari", _Any) ->
    "yoshinogari.saga.jp";

saga_jp("kamimine", _Any) ->
    "kamimine.saga.jp";

saga_jp("omachi", _Any) ->
    "omachi.saga.jp";

saga_jp("fukudomi", _Any) ->
    "fukudomi.saga.jp";

saga_jp("kitahata", _Any) ->
    "kitahata.saga.jp";

saga_jp("karatsu", _Any) ->
    "karatsu.saga.jp";

saga_jp("kanzaki", _Any) ->
    "kanzaki.saga.jp";

saga_jp("imari", _Any) ->
    "imari.saga.jp";

saga_jp("taku", _Any) ->
    "taku.saga.jp";

saga_jp("kashima", _Any) ->
    "kashima.saga.jp";

saga_jp("arita", _Any) ->
    "arita.saga.jp";

saga_jp("tosu", _Any) ->
    "tosu.saga.jp";

saga_jp("hizen", _Any) ->
    "hizen.saga.jp";

saga_jp("ariake", _Any) ->
    "ariake.saga.jp";

saga_jp("kyuragi", _Any) ->
    "kyuragi.saga.jp";

saga_jp("shiroishi", _Any) ->
    "shiroishi.saga.jp";

saga_jp("tara", _Any) ->
    "tara.saga.jp";

saga_jp("ouchi", _Any) ->
    "ouchi.saga.jp";

saga_jp("kiyama", _Any) ->
    "kiyama.saga.jp";

saga_jp("kitagata", _Any) ->
    "kitagata.saga.jp";


saga_jp(_, _) ->
    "saga.jp".

%% regular rules
yamanashi_jp("yamanakako", _Any) ->
    "yamanakako.yamanashi.jp";

yamanashi_jp("oshino", _Any) ->
    "oshino.yamanashi.jp";

yamanashi_jp("nishikatsura", _Any) ->
    "nishikatsura.yamanashi.jp";

yamanashi_jp("ichikawamisato", _Any) ->
    "ichikawamisato.yamanashi.jp";

yamanashi_jp("doshi", _Any) ->
    "doshi.yamanashi.jp";

yamanashi_jp("tabayama", _Any) ->
    "tabayama.yamanashi.jp";

yamanashi_jp("fujikawa", _Any) ->
    "fujikawa.yamanashi.jp";

yamanashi_jp("kai", _Any) ->
    "kai.yamanashi.jp";

yamanashi_jp("otsuki", _Any) ->
    "otsuki.yamanashi.jp";

yamanashi_jp("narusawa", _Any) ->
    "narusawa.yamanashi.jp";

yamanashi_jp("hokuto", _Any) ->
    "hokuto.yamanashi.jp";

yamanashi_jp("kosuge", _Any) ->
    "kosuge.yamanashi.jp";

yamanashi_jp("nirasaki", _Any) ->
    "nirasaki.yamanashi.jp";

yamanashi_jp("tsuru", _Any) ->
    "tsuru.yamanashi.jp";

yamanashi_jp("nanbu", _Any) ->
    "nanbu.yamanashi.jp";

yamanashi_jp("fujikawaguchiko", _Any) ->
    "fujikawaguchiko.yamanashi.jp";

yamanashi_jp("yamanashi", _Any) ->
    "yamanashi.yamanashi.jp";

yamanashi_jp("fujiyoshida", _Any) ->
    "fujiyoshida.yamanashi.jp";

yamanashi_jp("kofu", _Any) ->
    "kofu.yamanashi.jp";

yamanashi_jp("chuo", _Any) ->
    "chuo.yamanashi.jp";

yamanashi_jp("showa", _Any) ->
    "showa.yamanashi.jp";

yamanashi_jp("fuefuki", _Any) ->
    "fuefuki.yamanashi.jp";

yamanashi_jp("koshu", _Any) ->
    "koshu.yamanashi.jp";

yamanashi_jp("hayakawa", _Any) ->
    "hayakawa.yamanashi.jp";

yamanashi_jp("minobu", _Any) ->
    "minobu.yamanashi.jp";

yamanashi_jp("uenohara", _Any) ->
    "uenohara.yamanashi.jp";

yamanashi_jp("nakamichi", _Any) ->
    "nakamichi.yamanashi.jp";


yamanashi_jp(_, _) ->
    "yamanashi.jp".

%% regular rules
tokushima_jp("minami", _Any) ->
    "minami.tokushima.jp";

tokushima_jp("shishikui", _Any) ->
    "shishikui.tokushima.jp";

tokushima_jp("ichiba", _Any) ->
    "ichiba.tokushima.jp";

tokushima_jp("nakagawa", _Any) ->
    "nakagawa.tokushima.jp";

tokushima_jp("kainan", _Any) ->
    "kainan.tokushima.jp";

tokushima_jp("mima", _Any) ->
    "mima.tokushima.jp";

tokushima_jp("sanagochi", _Any) ->
    "sanagochi.tokushima.jp";

tokushima_jp("itano", _Any) ->
    "itano.tokushima.jp";

tokushima_jp("matsushige", _Any) ->
    "matsushige.tokushima.jp";

tokushima_jp("aizumi", _Any) ->
    "aizumi.tokushima.jp";

tokushima_jp("anan", _Any) ->
    "anan.tokushima.jp";

tokushima_jp("komatsushima", _Any) ->
    "komatsushima.tokushima.jp";

tokushima_jp("wajiki", _Any) ->
    "wajiki.tokushima.jp";

tokushima_jp("tokushima", _Any) ->
    "tokushima.tokushima.jp";

tokushima_jp("naruto", _Any) ->
    "naruto.tokushima.jp";

tokushima_jp("mugi", _Any) ->
    "mugi.tokushima.jp";

tokushima_jp("miyoshi", _Any) ->
    "miyoshi.tokushima.jp";


tokushima_jp(_, _) ->
    "tokushima.jp".

%% regular rules
hyogo_jp("kamigori", _Any) ->
    "kamigori.hyogo.jp";

hyogo_jp("shiso", _Any) ->
    "shiso.hyogo.jp";

hyogo_jp("amagasaki", _Any) ->
    "amagasaki.hyogo.jp";

hyogo_jp("asago", _Any) ->
    "asago.hyogo.jp";

hyogo_jp("sayo", _Any) ->
    "sayo.hyogo.jp";

hyogo_jp("taka", _Any) ->
    "taka.hyogo.jp";

hyogo_jp("sannan", _Any) ->
    "sannan.hyogo.jp";

hyogo_jp("yashiro", _Any) ->
    "yashiro.hyogo.jp";

hyogo_jp("sumoto", _Any) ->
    "sumoto.hyogo.jp";

hyogo_jp("shinonsen", _Any) ->
    "shinonsen.hyogo.jp";

hyogo_jp("fukusaki", _Any) ->
    "fukusaki.hyogo.jp";

hyogo_jp("himeji", _Any) ->
    "himeji.hyogo.jp";

hyogo_jp("aioi", _Any) ->
    "aioi.hyogo.jp";

hyogo_jp("kakogawa", _Any) ->
    "kakogawa.hyogo.jp";

hyogo_jp("miki", _Any) ->
    "miki.hyogo.jp";

hyogo_jp("takasago", _Any) ->
    "takasago.hyogo.jp";

hyogo_jp("nishiwaki", _Any) ->
    "nishiwaki.hyogo.jp";

hyogo_jp("minamiawaji", _Any) ->
    "minamiawaji.hyogo.jp";

hyogo_jp("tatsuno", _Any) ->
    "tatsuno.hyogo.jp";

hyogo_jp("takino", _Any) ->
    "takino.hyogo.jp";

hyogo_jp("nishinomiya", _Any) ->
    "nishinomiya.hyogo.jp";

hyogo_jp("ashiya", _Any) ->
    "ashiya.hyogo.jp";

hyogo_jp("akashi", _Any) ->
    "akashi.hyogo.jp";

hyogo_jp("kamikawa", _Any) ->
    "kamikawa.hyogo.jp";

hyogo_jp("inagawa", _Any) ->
    "inagawa.hyogo.jp";

hyogo_jp("kasai", _Any) ->
    "kasai.hyogo.jp";

hyogo_jp("goshiki", _Any) ->
    "goshiki.hyogo.jp";

hyogo_jp("shingu", _Any) ->
    "shingu.hyogo.jp";

hyogo_jp("toyooka", _Any) ->
    "toyooka.hyogo.jp";

hyogo_jp("takarazuka", _Any) ->
    "takarazuka.hyogo.jp";

hyogo_jp("awaji", _Any) ->
    "awaji.hyogo.jp";

hyogo_jp("taishi", _Any) ->
    "taishi.hyogo.jp";

hyogo_jp("ichikawa", _Any) ->
    "ichikawa.hyogo.jp";

hyogo_jp("aogaki", _Any) ->
    "aogaki.hyogo.jp";

hyogo_jp("ono", _Any) ->
    "ono.hyogo.jp";

hyogo_jp("sanda", _Any) ->
    "sanda.hyogo.jp";

hyogo_jp("sasayama", _Any) ->
    "sasayama.hyogo.jp";

hyogo_jp("itami", _Any) ->
    "itami.hyogo.jp";

hyogo_jp("kawanishi", _Any) ->
    "kawanishi.hyogo.jp";

hyogo_jp("ako", _Any) ->
    "ako.hyogo.jp";

hyogo_jp("yabu", _Any) ->
    "yabu.hyogo.jp";

hyogo_jp("kasuga", _Any) ->
    "kasuga.hyogo.jp";

hyogo_jp("harima", _Any) ->
    "harima.hyogo.jp";

hyogo_jp("yokawa", _Any) ->
    "yokawa.hyogo.jp";

hyogo_jp("tamba", _Any) ->
    "tamba.hyogo.jp";

hyogo_jp("yoka", _Any) ->
    "yoka.hyogo.jp";


hyogo_jp(_, _) ->
    "hyogo.jp".

%% regular rules
shiga_jp("takashima", _Any) ->
    "takashima.shiga.jp";

shiga_jp("gamo", _Any) ->
    "gamo.shiga.jp";

shiga_jp("ritto", _Any) ->
    "ritto.shiga.jp";

shiga_jp("takatsuki", _Any) ->
    "takatsuki.shiga.jp";

shiga_jp("moriyama", _Any) ->
    "moriyama.shiga.jp";

shiga_jp("kusatsu", _Any) ->
    "kusatsu.shiga.jp";

shiga_jp("yasu", _Any) ->
    "yasu.shiga.jp";

shiga_jp("omihachiman", _Any) ->
    "omihachiman.shiga.jp";

shiga_jp("otsu", _Any) ->
    "otsu.shiga.jp";

shiga_jp("aisho", _Any) ->
    "aisho.shiga.jp";

shiga_jp("notogawa", _Any) ->
    "notogawa.shiga.jp";

shiga_jp("koto", _Any) ->
    "koto.shiga.jp";

shiga_jp("higashiomi", _Any) ->
    "higashiomi.shiga.jp";

shiga_jp("torahime", _Any) ->
    "torahime.shiga.jp";

shiga_jp("nishiazai", _Any) ->
    "nishiazai.shiga.jp";

shiga_jp("toyosato", _Any) ->
    "toyosato.shiga.jp";

shiga_jp("hikone", _Any) ->
    "hikone.shiga.jp";

shiga_jp("maibara", _Any) ->
    "maibara.shiga.jp";

shiga_jp("nagahama", _Any) ->
    "nagahama.shiga.jp";

shiga_jp("ryuoh", _Any) ->
    "ryuoh.shiga.jp";

shiga_jp("kosei", _Any) ->
    "kosei.shiga.jp";

shiga_jp("konan", _Any) ->
    "konan.shiga.jp";

shiga_jp("koka", _Any) ->
    "koka.shiga.jp";


shiga_jp(_, _) ->
    "shiga.jp".

%% regular rules
shimane_jp("yatsuka", _Any) ->
    "yatsuka.shimane.jp";

shimane_jp("nishinoshima", _Any) ->
    "nishinoshima.shimane.jp";

shimane_jp("unnan", _Any) ->
    "unnan.shimane.jp";

shimane_jp("tsuwano", _Any) ->
    "tsuwano.shimane.jp";

shimane_jp("ama", _Any) ->
    "ama.shimane.jp";

shimane_jp("shimane", _Any) ->
    "shimane.shimane.jp";

shimane_jp("hikawa", _Any) ->
    "hikawa.shimane.jp";

shimane_jp("yakumo", _Any) ->
    "yakumo.shimane.jp";

shimane_jp("masuda", _Any) ->
    "masuda.shimane.jp";

shimane_jp("izumo", _Any) ->
    "izumo.shimane.jp";

shimane_jp("akagi", _Any) ->
    "akagi.shimane.jp";

shimane_jp("tamayu", _Any) ->
    "tamayu.shimane.jp";

shimane_jp("higashiizumo", _Any) ->
    "higashiizumo.shimane.jp";

shimane_jp("okuizumo", _Any) ->
    "okuizumo.shimane.jp";

shimane_jp("misato", _Any) ->
    "misato.shimane.jp";

shimane_jp("kakinoki", _Any) ->
    "kakinoki.shimane.jp";

shimane_jp("hikimi", _Any) ->
    "hikimi.shimane.jp";

shimane_jp("yasugi", _Any) ->
    "yasugi.shimane.jp";

shimane_jp("matsue", _Any) ->
    "matsue.shimane.jp";

shimane_jp("gotsu", _Any) ->
    "gotsu.shimane.jp";

shimane_jp("ohda", _Any) ->
    "ohda.shimane.jp";

shimane_jp("okinoshima", _Any) ->
    "okinoshima.shimane.jp";

shimane_jp("hamada", _Any) ->
    "hamada.shimane.jp";


shimane_jp(_, _) ->
    "shimane.jp".

%% regular rules
kanagawa_jp("chigasaki", _Any) ->
    "chigasaki.kanagawa.jp";

kanagawa_jp("samukawa", _Any) ->
    "samukawa.kanagawa.jp";

kanagawa_jp("nakai", _Any) ->
    "nakai.kanagawa.jp";

kanagawa_jp("zama", _Any) ->
    "zama.kanagawa.jp";

kanagawa_jp("yugawara", _Any) ->
    "yugawara.kanagawa.jp";

kanagawa_jp("atsugi", _Any) ->
    "atsugi.kanagawa.jp";

kanagawa_jp("ayase", _Any) ->
    "ayase.kanagawa.jp";

kanagawa_jp("kiyokawa", _Any) ->
    "kiyokawa.kanagawa.jp";

kanagawa_jp("oiso", _Any) ->
    "oiso.kanagawa.jp";

kanagawa_jp("isehara", _Any) ->
    "isehara.kanagawa.jp";

kanagawa_jp("tsukui", _Any) ->
    "tsukui.kanagawa.jp";

kanagawa_jp("yamakita", _Any) ->
    "yamakita.kanagawa.jp";

kanagawa_jp("ebina", _Any) ->
    "ebina.kanagawa.jp";

kanagawa_jp("aikawa", _Any) ->
    "aikawa.kanagawa.jp";

kanagawa_jp("kamakura", _Any) ->
    "kamakura.kanagawa.jp";

kanagawa_jp("yamato", _Any) ->
    "yamato.kanagawa.jp";

kanagawa_jp("fujisawa", _Any) ->
    "fujisawa.kanagawa.jp";

kanagawa_jp("kaisei", _Any) ->
    "kaisei.kanagawa.jp";

kanagawa_jp("sagamihara", _Any) ->
    "sagamihara.kanagawa.jp";

kanagawa_jp("matsuda", _Any) ->
    "matsuda.kanagawa.jp";

kanagawa_jp("ninomiya", _Any) ->
    "ninomiya.kanagawa.jp";

kanagawa_jp("hiratsuka", _Any) ->
    "hiratsuka.kanagawa.jp";

kanagawa_jp("yokosuka", _Any) ->
    "yokosuka.kanagawa.jp";

kanagawa_jp("zushi", _Any) ->
    "zushi.kanagawa.jp";

kanagawa_jp("hakone", _Any) ->
    "hakone.kanagawa.jp";

kanagawa_jp("oi", _Any) ->
    "oi.kanagawa.jp";

kanagawa_jp("hadano", _Any) ->
    "hadano.kanagawa.jp";

kanagawa_jp("minamiashigara", _Any) ->
    "minamiashigara.kanagawa.jp";

kanagawa_jp("odawara", _Any) ->
    "odawara.kanagawa.jp";

kanagawa_jp("miura", _Any) ->
    "miura.kanagawa.jp";


kanagawa_jp(_, _) ->
    "kanagawa.jp".

%% regular rules
shizuoka_jp("yaizu", _Any) ->
    "yaizu.shizuoka.jp";

shizuoka_jp("shimoda", _Any) ->
    "shimoda.shizuoka.jp";

shizuoka_jp("ito", _Any) ->
    "ito.shizuoka.jp";

shizuoka_jp("fujieda", _Any) ->
    "fujieda.shizuoka.jp";

shizuoka_jp("omaezaki", _Any) ->
    "omaezaki.shizuoka.jp";

shizuoka_jp("shizuoka", _Any) ->
    "shizuoka.shizuoka.jp";

shizuoka_jp("morimachi", _Any) ->
    "morimachi.shizuoka.jp";

shizuoka_jp("gotemba", _Any) ->
    "gotemba.shizuoka.jp";

shizuoka_jp("kawanehon", _Any) ->
    "kawanehon.shizuoka.jp";

shizuoka_jp("nishiizu", _Any) ->
    "nishiizu.shizuoka.jp";

shizuoka_jp("atami", _Any) ->
    "atami.shizuoka.jp";

shizuoka_jp("kosai", _Any) ->
    "kosai.shizuoka.jp";

shizuoka_jp("yoshida", _Any) ->
    "yoshida.shizuoka.jp";

shizuoka_jp("izu", _Any) ->
    "izu.shizuoka.jp";

shizuoka_jp("kikugawa", _Any) ->
    "kikugawa.shizuoka.jp";

shizuoka_jp("shimada", _Any) ->
    "shimada.shizuoka.jp";

shizuoka_jp("iwata", _Any) ->
    "iwata.shizuoka.jp";

shizuoka_jp("fujikawa", _Any) ->
    "fujikawa.shizuoka.jp";

shizuoka_jp("susono", _Any) ->
    "susono.shizuoka.jp";

shizuoka_jp("kawazu", _Any) ->
    "kawazu.shizuoka.jp";

shizuoka_jp("arai", _Any) ->
    "arai.shizuoka.jp";

shizuoka_jp("haibara", _Any) ->
    "haibara.shizuoka.jp";

shizuoka_jp("fuji", _Any) ->
    "fuji.shizuoka.jp";

shizuoka_jp("izunokuni", _Any) ->
    "izunokuni.shizuoka.jp";

shizuoka_jp("fujinomiya", _Any) ->
    "fujinomiya.shizuoka.jp";

shizuoka_jp("mishima", _Any) ->
    "mishima.shizuoka.jp";

shizuoka_jp("matsuzaki", _Any) ->
    "matsuzaki.shizuoka.jp";

shizuoka_jp("fukuroi", _Any) ->
    "fukuroi.shizuoka.jp";

shizuoka_jp("kannami", _Any) ->
    "kannami.shizuoka.jp";

shizuoka_jp("shimizu", _Any) ->
    "shimizu.shizuoka.jp";

shizuoka_jp("higashiizu", _Any) ->
    "higashiizu.shizuoka.jp";

shizuoka_jp("numazu", _Any) ->
    "numazu.shizuoka.jp";

shizuoka_jp("kakegawa", _Any) ->
    "kakegawa.shizuoka.jp";

shizuoka_jp("hamamatsu", _Any) ->
    "hamamatsu.shizuoka.jp";

shizuoka_jp("makinohara", _Any) ->
    "makinohara.shizuoka.jp";

shizuoka_jp("minamiizu", _Any) ->
    "minamiizu.shizuoka.jp";


shizuoka_jp(_, _) ->
    "shizuoka.jp".

%% regular rules
kyoto_jp("ujitawara", _Any) ->
    "ujitawara.kyoto.jp";

kyoto_jp("minamiyamashiro", _Any) ->
    "minamiyamashiro.kyoto.jp";

kyoto_jp("kumiyama", _Any) ->
    "kumiyama.kyoto.jp";

kyoto_jp("nagaokakyo", _Any) ->
    "nagaokakyo.kyoto.jp";

kyoto_jp("nakagyo", _Any) ->
    "nakagyo.kyoto.jp";

kyoto_jp("kamo", _Any) ->
    "kamo.kyoto.jp";

kyoto_jp("kizu", _Any) ->
    "kizu.kyoto.jp";

kyoto_jp("seika", _Any) ->
    "seika.kyoto.jp";

kyoto_jp("muko", _Any) ->
    "muko.kyoto.jp";

kyoto_jp("miyazu", _Any) ->
    "miyazu.kyoto.jp";

kyoto_jp("tanabe", _Any) ->
    "tanabe.kyoto.jp";

kyoto_jp("nantan", _Any) ->
    "nantan.kyoto.jp";

kyoto_jp("kyotanabe", _Any) ->
    "kyotanabe.kyoto.jp";

kyoto_jp("yawata", _Any) ->
    "yawata.kyoto.jp";

kyoto_jp("minami", _Any) ->
    "minami.kyoto.jp";

kyoto_jp("uji", _Any) ->
    "uji.kyoto.jp";

kyoto_jp("kameoka", _Any) ->
    "kameoka.kyoto.jp";

kyoto_jp("kyotango", _Any) ->
    "kyotango.kyoto.jp";

kyoto_jp("fukuchiyama", _Any) ->
    "fukuchiyama.kyoto.jp";

kyoto_jp("ine", _Any) ->
    "ine.kyoto.jp";

kyoto_jp("ayabe", _Any) ->
    "ayabe.kyoto.jp";

kyoto_jp("kyotamba", _Any) ->
    "kyotamba.kyoto.jp";

kyoto_jp("wazuka", _Any) ->
    "wazuka.kyoto.jp";

kyoto_jp("sakyo", _Any) ->
    "sakyo.kyoto.jp";

kyoto_jp("kita", _Any) ->
    "kita.kyoto.jp";

kyoto_jp("oyamazaki", _Any) ->
    "oyamazaki.kyoto.jp";

kyoto_jp("ide", _Any) ->
    "ide.kyoto.jp";

kyoto_jp("yamashina", _Any) ->
    "yamashina.kyoto.jp";

kyoto_jp("maizuru", _Any) ->
    "maizuru.kyoto.jp";

kyoto_jp("higashiyama", _Any) ->
    "higashiyama.kyoto.jp";

kyoto_jp("joyo", _Any) ->
    "joyo.kyoto.jp";


kyoto_jp(_, _) ->
    "kyoto.jp".

%% regular rules
kagoshima_jp("kinko", _Any) ->
    "kinko.kagoshima.jp";

kagoshima_jp("nakatane", _Any) ->
    "nakatane.kagoshima.jp";

kagoshima_jp("hioki", _Any) ->
    "hioki.kagoshima.jp";

kagoshima_jp("makurazaki", _Any) ->
    "makurazaki.kagoshima.jp";

kagoshima_jp("nishinoomote", _Any) ->
    "nishinoomote.kagoshima.jp";

kagoshima_jp("kouyama", _Any) ->
    "kouyama.kagoshima.jp";

kagoshima_jp("matsumoto", _Any) ->
    "matsumoto.kagoshima.jp";

kagoshima_jp("amami", _Any) ->
    "amami.kagoshima.jp";

kagoshima_jp("soo", _Any) ->
    "soo.kagoshima.jp";

kagoshima_jp("isen", _Any) ->
    "isen.kagoshima.jp";

kagoshima_jp("satsumasendai", _Any) ->
    "satsumasendai.kagoshima.jp";

kagoshima_jp("isa", _Any) ->
    "isa.kagoshima.jp";

kagoshima_jp("minamitane", _Any) ->
    "minamitane.kagoshima.jp";

kagoshima_jp("yusui", _Any) ->
    "yusui.kagoshima.jp";

kagoshima_jp("tarumizu", _Any) ->
    "tarumizu.kagoshima.jp";

kagoshima_jp("kanoya", _Any) ->
    "kanoya.kagoshima.jp";

kagoshima_jp("akune", _Any) ->
    "akune.kagoshima.jp";

kagoshima_jp("kawanabe", _Any) ->
    "kawanabe.kagoshima.jp";

kagoshima_jp("izumi", _Any) ->
    "izumi.kagoshima.jp";

kagoshima_jp("kagoshima", _Any) ->
    "kagoshima.kagoshima.jp";


kagoshima_jp(_, _) ->
    "kagoshima.jp".

%% regular rules
tottori_jp("wakasa", _Any) ->
    "wakasa.tottori.jp";

tottori_jp("nichinan", _Any) ->
    "nichinan.tottori.jp";

tottori_jp("kotoura", _Any) ->
    "kotoura.tottori.jp";

tottori_jp("hino", _Any) ->
    "hino.tottori.jp";

tottori_jp("misasa", _Any) ->
    "misasa.tottori.jp";

tottori_jp("chizu", _Any) ->
    "chizu.tottori.jp";

tottori_jp("koge", _Any) ->
    "koge.tottori.jp";

tottori_jp("yonago", _Any) ->
    "yonago.tottori.jp";

tottori_jp("kawahara", _Any) ->
    "kawahara.tottori.jp";

tottori_jp("yazu", _Any) ->
    "yazu.tottori.jp";

tottori_jp("tottori", _Any) ->
    "tottori.tottori.jp";

tottori_jp("sakaiminato", _Any) ->
    "sakaiminato.tottori.jp";

tottori_jp("nanbu", _Any) ->
    "nanbu.tottori.jp";


tottori_jp(_, _) ->
    "tottori.jp".

%% regular rules
kagawa_jp("ayagawa", _Any) ->
    "ayagawa.kagawa.jp";

kagawa_jp("tadotsu", _Any) ->
    "tadotsu.kagawa.jp";

kagawa_jp("marugame", _Any) ->
    "marugame.kagawa.jp";

kagawa_jp("uchinomi", _Any) ->
    "uchinomi.kagawa.jp";

kagawa_jp("tonosho", _Any) ->
    "tonosho.kagawa.jp";

kagawa_jp("mitoyo", _Any) ->
    "mitoyo.kagawa.jp";

kagawa_jp("naoshima", _Any) ->
    "naoshima.kagawa.jp";

kagawa_jp("takamatsu", _Any) ->
    "takamatsu.kagawa.jp";

kagawa_jp("utazu", _Any) ->
    "utazu.kagawa.jp";

kagawa_jp("zentsuji", _Any) ->
    "zentsuji.kagawa.jp";

kagawa_jp("higashikagawa", _Any) ->
    "higashikagawa.kagawa.jp";

kagawa_jp("kanonji", _Any) ->
    "kanonji.kagawa.jp";

kagawa_jp("kotohira", _Any) ->
    "kotohira.kagawa.jp";

kagawa_jp("manno", _Any) ->
    "manno.kagawa.jp";

kagawa_jp("sanuki", _Any) ->
    "sanuki.kagawa.jp";


kagawa_jp(_, _) ->
    "kagawa.jp".

%% regular rules
aichi_jp("mihama", _Any) ->
    "mihama.aichi.jp";

aichi_jp("kanie", _Any) ->
    "kanie.aichi.jp";

aichi_jp("iwakura", _Any) ->
    "iwakura.aichi.jp";

aichi_jp("oharu", _Any) ->
    "oharu.aichi.jp";

aichi_jp("isshiki", _Any) ->
    "isshiki.aichi.jp";

aichi_jp("kasugai", _Any) ->
    "kasugai.aichi.jp";

aichi_jp("takahama", _Any) ->
    "takahama.aichi.jp";

aichi_jp("ama", _Any) ->
    "ama.aichi.jp";

aichi_jp("chita", _Any) ->
    "chita.aichi.jp";

aichi_jp("shitara", _Any) ->
    "shitara.aichi.jp";

aichi_jp("shinshiro", _Any) ->
    "shinshiro.aichi.jp";

aichi_jp("toyoake", _Any) ->
    "toyoake.aichi.jp";

aichi_jp("seto", _Any) ->
    "seto.aichi.jp";

aichi_jp("toyota", _Any) ->
    "toyota.aichi.jp";

aichi_jp("tahara", _Any) ->
    "tahara.aichi.jp";

aichi_jp("toyohashi", _Any) ->
    "toyohashi.aichi.jp";

aichi_jp("nishio", _Any) ->
    "nishio.aichi.jp";

aichi_jp("fuso", _Any) ->
    "fuso.aichi.jp";

aichi_jp("tobishima", _Any) ->
    "tobishima.aichi.jp";

aichi_jp("gamagori", _Any) ->
    "gamagori.aichi.jp";

aichi_jp("okazaki", _Any) ->
    "okazaki.aichi.jp";

aichi_jp("tokoname", _Any) ->
    "tokoname.aichi.jp";

aichi_jp("nisshin", _Any) ->
    "nisshin.aichi.jp";

aichi_jp("asuke", _Any) ->
    "asuke.aichi.jp";

aichi_jp("shikatsu", _Any) ->
    "shikatsu.aichi.jp";

aichi_jp("higashiura", _Any) ->
    "higashiura.aichi.jp";

aichi_jp("inazawa", _Any) ->
    "inazawa.aichi.jp";

aichi_jp("aisai", _Any) ->
    "aisai.aichi.jp";

aichi_jp("kota", _Any) ->
    "kota.aichi.jp";

aichi_jp("inuyama", _Any) ->
    "inuyama.aichi.jp";

aichi_jp("anjo", _Any) ->
    "anjo.aichi.jp";

aichi_jp("kariya", _Any) ->
    "kariya.aichi.jp";

aichi_jp("togo", _Any) ->
    "togo.aichi.jp";

aichi_jp("kiyosu", _Any) ->
    "kiyosu.aichi.jp";

aichi_jp("owariasahi", _Any) ->
    "owariasahi.aichi.jp";

aichi_jp("oguchi", _Any) ->
    "oguchi.aichi.jp";

aichi_jp("hazu", _Any) ->
    "hazu.aichi.jp";

aichi_jp("komaki", _Any) ->
    "komaki.aichi.jp";

aichi_jp("handa", _Any) ->
    "handa.aichi.jp";

aichi_jp("chiryu", _Any) ->
    "chiryu.aichi.jp";

aichi_jp("miyoshi", _Any) ->
    "miyoshi.aichi.jp";

aichi_jp("tsushima", _Any) ->
    "tsushima.aichi.jp";

aichi_jp("toei", _Any) ->
    "toei.aichi.jp";

aichi_jp("toyone", _Any) ->
    "toyone.aichi.jp";

aichi_jp("kira", _Any) ->
    "kira.aichi.jp";

aichi_jp("ichinomiya", _Any) ->
    "ichinomiya.aichi.jp";

aichi_jp("yatomi", _Any) ->
    "yatomi.aichi.jp";

aichi_jp("tokai", _Any) ->
    "tokai.aichi.jp";

aichi_jp("toyokawa", _Any) ->
    "toyokawa.aichi.jp";

aichi_jp("hekinan", _Any) ->
    "hekinan.aichi.jp";

aichi_jp("konan", _Any) ->
    "konan.aichi.jp";

aichi_jp("obu", _Any) ->
    "obu.aichi.jp";


aichi_jp(_, _) ->
    "aichi.jp".

%% regular rules
okayama_jp("nagi", _Any) ->
    "nagi.okayama.jp";

okayama_jp("soja", _Any) ->
    "soja.okayama.jp";

okayama_jp("bizen", _Any) ->
    "bizen.okayama.jp";

okayama_jp("akaiwa", _Any) ->
    "akaiwa.okayama.jp";

okayama_jp("kagamino", _Any) ->
    "kagamino.okayama.jp";

okayama_jp("hayashima", _Any) ->
    "hayashima.okayama.jp";

okayama_jp("tamano", _Any) ->
    "tamano.okayama.jp";

okayama_jp("takahashi", _Any) ->
    "takahashi.okayama.jp";

okayama_jp("satosho", _Any) ->
    "satosho.okayama.jp";

okayama_jp("ibara", _Any) ->
    "ibara.okayama.jp";

okayama_jp("misaki", _Any) ->
    "misaki.okayama.jp";

okayama_jp("yakage", _Any) ->
    "yakage.okayama.jp";

okayama_jp("nishiawakura", _Any) ->
    "nishiawakura.okayama.jp";

okayama_jp("kumenan", _Any) ->
    "kumenan.okayama.jp";

okayama_jp("asakuchi", _Any) ->
    "asakuchi.okayama.jp";

okayama_jp("setouchi", _Any) ->
    "setouchi.okayama.jp";

okayama_jp("shinjo", _Any) ->
    "shinjo.okayama.jp";

okayama_jp("tsuyama", _Any) ->
    "tsuyama.okayama.jp";

okayama_jp("kurashiki", _Any) ->
    "kurashiki.okayama.jp";

okayama_jp("shoo", _Any) ->
    "shoo.okayama.jp";

okayama_jp("wake", _Any) ->
    "wake.okayama.jp";

okayama_jp("okayama", _Any) ->
    "okayama.okayama.jp";

okayama_jp("maniwa", _Any) ->
    "maniwa.okayama.jp";

okayama_jp("niimi", _Any) ->
    "niimi.okayama.jp";

okayama_jp("kibichuo", _Any) ->
    "kibichuo.okayama.jp";

okayama_jp("kasaoka", _Any) ->
    "kasaoka.okayama.jp";


okayama_jp(_, _) ->
    "okayama.jp".

%% regular rules
akita_jp("kitaakita", _Any) ->
    "kitaakita.akita.jp";

akita_jp("semboku", _Any) ->
    "semboku.akita.jp";

akita_jp("kamioka", _Any) ->
    "kamioka.akita.jp";

akita_jp("hachirogata", _Any) ->
    "hachirogata.akita.jp";

akita_jp("yurihonjo", _Any) ->
    "yurihonjo.akita.jp";

akita_jp("nikaho", _Any) ->
    "nikaho.akita.jp";

akita_jp("ikawa", _Any) ->
    "ikawa.akita.jp";

akita_jp("odate", _Any) ->
    "odate.akita.jp";

akita_jp("gojome", _Any) ->
    "gojome.akita.jp";

akita_jp("happou", _Any) ->
    "happou.akita.jp";

akita_jp("mitane", _Any) ->
    "mitane.akita.jp";

akita_jp("misato", _Any) ->
    "misato.akita.jp";

akita_jp("ogata", _Any) ->
    "ogata.akita.jp";

akita_jp("kosaka", _Any) ->
    "kosaka.akita.jp";

akita_jp("kazuno", _Any) ->
    "kazuno.akita.jp";

akita_jp("honjo", _Any) ->
    "honjo.akita.jp";

akita_jp("katagami", _Any) ->
    "katagami.akita.jp";

akita_jp("akita", _Any) ->
    "akita.akita.jp";

akita_jp("kamikoani", _Any) ->
    "kamikoani.akita.jp";

akita_jp("daisen", _Any) ->
    "daisen.akita.jp";

akita_jp("higashinaruse", _Any) ->
    "higashinaruse.akita.jp";

akita_jp("kyowa", _Any) ->
    "kyowa.akita.jp";

akita_jp("honjyo", _Any) ->
    "honjyo.akita.jp";

akita_jp("oga", _Any) ->
    "oga.akita.jp";

akita_jp("fujisato", _Any) ->
    "fujisato.akita.jp";

akita_jp("yokote", _Any) ->
    "yokote.akita.jp";

akita_jp("noshiro", _Any) ->
    "noshiro.akita.jp";

akita_jp("moriyoshi", _Any) ->
    "moriyoshi.akita.jp";


akita_jp(_, _) ->
    "akita.jp".

%% regular rules
hiroshima_jp("saka", _Any) ->
    "saka.hiroshima.jp";

hiroshima_jp("asaminami", _Any) ->
    "asaminami.hiroshima.jp";

hiroshima_jp("kui", _Any) ->
    "kui.hiroshima.jp";

hiroshima_jp("onomichi", _Any) ->
    "onomichi.hiroshima.jp";

hiroshima_jp("otake", _Any) ->
    "otake.hiroshima.jp";

hiroshima_jp("seranishi", _Any) ->
    "seranishi.hiroshima.jp";

hiroshima_jp("shobara", _Any) ->
    "shobara.hiroshima.jp";

hiroshima_jp("hatsukaichi", _Any) ->
    "hatsukaichi.hiroshima.jp";

hiroshima_jp("jinsekikogen", _Any) ->
    "jinsekikogen.hiroshima.jp";

hiroshima_jp("shinichi", _Any) ->
    "shinichi.hiroshima.jp";

hiroshima_jp("higashihiroshima", _Any) ->
    "higashihiroshima.hiroshima.jp";

hiroshima_jp("sera", _Any) ->
    "sera.hiroshima.jp";

hiroshima_jp("kure", _Any) ->
    "kure.hiroshima.jp";

hiroshima_jp("daiwa", _Any) ->
    "daiwa.hiroshima.jp";

hiroshima_jp("naka", _Any) ->
    "naka.hiroshima.jp";

hiroshima_jp("kaita", _Any) ->
    "kaita.hiroshima.jp";

hiroshima_jp("kumano", _Any) ->
    "kumano.hiroshima.jp";

hiroshima_jp("fuchu", _Any) ->
    "fuchu.hiroshima.jp";

hiroshima_jp("takehara", _Any) ->
    "takehara.hiroshima.jp";

hiroshima_jp("mihara", _Any) ->
    "mihara.hiroshima.jp";

hiroshima_jp("fukuyama", _Any) ->
    "fukuyama.hiroshima.jp";

hiroshima_jp("osakikamijima", _Any) ->
    "osakikamijima.hiroshima.jp";

hiroshima_jp("etajima", _Any) ->
    "etajima.hiroshima.jp";

hiroshima_jp("hongo", _Any) ->
    "hongo.hiroshima.jp";

hiroshima_jp("miyoshi", _Any) ->
    "miyoshi.hiroshima.jp";


hiroshima_jp(_, _) ->
    "hiroshima.jp".

%% regular rules
chiba_jp("togane", _Any) ->
    "togane.chiba.jp";

chiba_jp("asahi", _Any) ->
    "asahi.chiba.jp";

chiba_jp("chuo", _Any) ->
    "chuo.chiba.jp";

chiba_jp("shiroi", _Any) ->
    "shiroi.chiba.jp";

chiba_jp("shisui", _Any) ->
    "shisui.chiba.jp";

chiba_jp("chosei", _Any) ->
    "chosei.chiba.jp";

chiba_jp("yokoshibahikari", _Any) ->
    "yokoshibahikari.chiba.jp";

chiba_jp("ichinomiya", _Any) ->
    "ichinomiya.chiba.jp";

chiba_jp("urayasu", _Any) ->
    "urayasu.chiba.jp";

chiba_jp("otaki", _Any) ->
    "otaki.chiba.jp";

chiba_jp("chonan", _Any) ->
    "chonan.chiba.jp";

chiba_jp("futtsu", _Any) ->
    "futtsu.chiba.jp";

chiba_jp("nagara", _Any) ->
    "nagara.chiba.jp";

chiba_jp("onjuku", _Any) ->
    "onjuku.chiba.jp";

chiba_jp("kujukuri", _Any) ->
    "kujukuri.chiba.jp";

chiba_jp("tako", _Any) ->
    "tako.chiba.jp";

chiba_jp("minamiboso", _Any) ->
    "minamiboso.chiba.jp";

chiba_jp("kamagaya", _Any) ->
    "kamagaya.chiba.jp";

chiba_jp("matsudo", _Any) ->
    "matsudo.chiba.jp";

chiba_jp("yachiyo", _Any) ->
    "yachiyo.chiba.jp";

chiba_jp("kashiwa", _Any) ->
    "kashiwa.chiba.jp";

chiba_jp("sakura", _Any) ->
    "sakura.chiba.jp";

chiba_jp("choshi", _Any) ->
    "choshi.chiba.jp";

chiba_jp("isumi", _Any) ->
    "isumi.chiba.jp";

chiba_jp("tateyama", _Any) ->
    "tateyama.chiba.jp";

chiba_jp("shirako", _Any) ->
    "shirako.chiba.jp";

chiba_jp("ichikawa", _Any) ->
    "ichikawa.chiba.jp";

chiba_jp("hanamigawa", _Any) ->
    "hanamigawa.chiba.jp";

chiba_jp("nagareyama", _Any) ->
    "nagareyama.chiba.jp";

chiba_jp("katsuura", _Any) ->
    "katsuura.chiba.jp";

chiba_jp("sodegaura", _Any) ->
    "sodegaura.chiba.jp";

chiba_jp("noda", _Any) ->
    "noda.chiba.jp";

chiba_jp("yokaichiba", _Any) ->
    "yokaichiba.chiba.jp";

chiba_jp("kozaki", _Any) ->
    "kozaki.chiba.jp";

chiba_jp("mobara", _Any) ->
    "mobara.chiba.jp";

chiba_jp("abiko", _Any) ->
    "abiko.chiba.jp";

chiba_jp("tomisato", _Any) ->
    "tomisato.chiba.jp";

chiba_jp("narashino", _Any) ->
    "narashino.chiba.jp";

chiba_jp("oamishirasato", _Any) ->
    "oamishirasato.chiba.jp";

chiba_jp("yachimata", _Any) ->
    "yachimata.chiba.jp";

chiba_jp("midori", _Any) ->
    "midori.chiba.jp";

chiba_jp("sosa", _Any) ->
    "sosa.chiba.jp";

chiba_jp("kisarazu", _Any) ->
    "kisarazu.chiba.jp";

chiba_jp("sakae", _Any) ->
    "sakae.chiba.jp";

chiba_jp("kamogawa", _Any) ->
    "kamogawa.chiba.jp";

chiba_jp("omigawa", _Any) ->
    "omigawa.chiba.jp";

chiba_jp("narita", _Any) ->
    "narita.chiba.jp";

chiba_jp("funabashi", _Any) ->
    "funabashi.chiba.jp";

chiba_jp("inzai", _Any) ->
    "inzai.chiba.jp";

chiba_jp("yotsukaido", _Any) ->
    "yotsukaido.chiba.jp";

chiba_jp("tohnosho", _Any) ->
    "tohnosho.chiba.jp";

chiba_jp("ichihara", _Any) ->
    "ichihara.chiba.jp";

chiba_jp("kyonan", _Any) ->
    "kyonan.chiba.jp";

chiba_jp("kimitsu", _Any) ->
    "kimitsu.chiba.jp";

chiba_jp("shimofusa", _Any) ->
    "shimofusa.chiba.jp";

chiba_jp("mihama", _Any) ->
    "mihama.chiba.jp";

chiba_jp("katori", _Any) ->
    "katori.chiba.jp";

chiba_jp("mutsuzawa", _Any) ->
    "mutsuzawa.chiba.jp";


chiba_jp(_, _) ->
    "chiba.jp".

%% regular rules
ibaraki_jp("asahi", _Any) ->
    "asahi.ibaraki.jp";

ibaraki_jp("iwama", _Any) ->
    "iwama.ibaraki.jp";

ibaraki_jp("toride", _Any) ->
    "toride.ibaraki.jp";

ibaraki_jp("tokai", _Any) ->
    "tokai.ibaraki.jp";

ibaraki_jp("hitachi", _Any) ->
    "hitachi.ibaraki.jp";

ibaraki_jp("kashima", _Any) ->
    "kashima.ibaraki.jp";

ibaraki_jp("yamagata", _Any) ->
    "yamagata.ibaraki.jp";

ibaraki_jp("itako", _Any) ->
    "itako.ibaraki.jp";

ibaraki_jp("oarai", _Any) ->
    "oarai.ibaraki.jp";

ibaraki_jp("omitama", _Any) ->
    "omitama.ibaraki.jp";

ibaraki_jp("sakuragawa", _Any) ->
    "sakuragawa.ibaraki.jp";

ibaraki_jp("tamatsukuri", _Any) ->
    "tamatsukuri.ibaraki.jp";

ibaraki_jp("yachiyo", _Any) ->
    "yachiyo.ibaraki.jp";

ibaraki_jp("fujishiro", _Any) ->
    "fujishiro.ibaraki.jp";

ibaraki_jp("mito", _Any) ->
    "mito.ibaraki.jp";

ibaraki_jp("hitachiomiya", _Any) ->
    "hitachiomiya.ibaraki.jp";

ibaraki_jp("kasama", _Any) ->
    "kasama.ibaraki.jp";

ibaraki_jp("suifu", _Any) ->
    "suifu.ibaraki.jp";

ibaraki_jp("chikusei", _Any) ->
    "chikusei.ibaraki.jp";

ibaraki_jp("sakai", _Any) ->
    "sakai.ibaraki.jp";

ibaraki_jp("ina", _Any) ->
    "ina.ibaraki.jp";

ibaraki_jp("ushiku", _Any) ->
    "ushiku.ibaraki.jp";

ibaraki_jp("ogawa", _Any) ->
    "ogawa.ibaraki.jp";

ibaraki_jp("shirosato", _Any) ->
    "shirosato.ibaraki.jp";

ibaraki_jp("ryugasaki", _Any) ->
    "ryugasaki.ibaraki.jp";

ibaraki_jp("tomobe", _Any) ->
    "tomobe.ibaraki.jp";

ibaraki_jp("moriya", _Any) ->
    "moriya.ibaraki.jp";

ibaraki_jp("shimotsuma", _Any) ->
    "shimotsuma.ibaraki.jp";

ibaraki_jp("tone", _Any) ->
    "tone.ibaraki.jp";

ibaraki_jp("namegata", _Any) ->
    "namegata.ibaraki.jp";

ibaraki_jp("uchihara", _Any) ->
    "uchihara.ibaraki.jp";

ibaraki_jp("hitachinaka", _Any) ->
    "hitachinaka.ibaraki.jp";

ibaraki_jp("ibaraki", _Any) ->
    "ibaraki.ibaraki.jp";

ibaraki_jp("tsuchiura", _Any) ->
    "tsuchiura.ibaraki.jp";

ibaraki_jp("kamisu", _Any) ->
    "kamisu.ibaraki.jp";

ibaraki_jp("inashiki", _Any) ->
    "inashiki.ibaraki.jp";

ibaraki_jp("yuki", _Any) ->
    "yuki.ibaraki.jp";

ibaraki_jp("takahagi", _Any) ->
    "takahagi.ibaraki.jp";

ibaraki_jp("tsukuba", _Any) ->
    "tsukuba.ibaraki.jp";

ibaraki_jp("ami", _Any) ->
    "ami.ibaraki.jp";

ibaraki_jp("naka", _Any) ->
    "naka.ibaraki.jp";

ibaraki_jp("bando", _Any) ->
    "bando.ibaraki.jp";

ibaraki_jp("miho", _Any) ->
    "miho.ibaraki.jp";

ibaraki_jp("sowa", _Any) ->
    "sowa.ibaraki.jp";

ibaraki_jp("koga", _Any) ->
    "koga.ibaraki.jp";

ibaraki_jp("yawara", _Any) ->
    "yawara.ibaraki.jp";

ibaraki_jp("hitachiota", _Any) ->
    "hitachiota.ibaraki.jp";

ibaraki_jp("shimodate", _Any) ->
    "shimodate.ibaraki.jp";

ibaraki_jp("daigo", _Any) ->
    "daigo.ibaraki.jp";

ibaraki_jp("kasumigaura", _Any) ->
    "kasumigaura.ibaraki.jp";

ibaraki_jp("joso", _Any) ->
    "joso.ibaraki.jp";


ibaraki_jp(_, _) ->
    "ibaraki.jp".

%% regular rules
aomori_jp("hachinohe", _Any) ->
    "hachinohe.aomori.jp";

aomori_jp("hiranai", _Any) ->
    "hiranai.aomori.jp";

aomori_jp("kuroishi", _Any) ->
    "kuroishi.aomori.jp";

aomori_jp("itayanagi", _Any) ->
    "itayanagi.aomori.jp";

aomori_jp("mutsu", _Any) ->
    "mutsu.aomori.jp";

aomori_jp("misawa", _Any) ->
    "misawa.aomori.jp";

aomori_jp("shichinohe", _Any) ->
    "shichinohe.aomori.jp";

aomori_jp("aomori", _Any) ->
    "aomori.aomori.jp";

aomori_jp("takko", _Any) ->
    "takko.aomori.jp";

aomori_jp("owani", _Any) ->
    "owani.aomori.jp";

aomori_jp("tsuruta", _Any) ->
    "tsuruta.aomori.jp";

aomori_jp("sannohe", _Any) ->
    "sannohe.aomori.jp";

aomori_jp("gonohe", _Any) ->
    "gonohe.aomori.jp";

aomori_jp("tsugaru", _Any) ->
    "tsugaru.aomori.jp";

aomori_jp("hashikami", _Any) ->
    "hashikami.aomori.jp";

aomori_jp("rokunohe", _Any) ->
    "rokunohe.aomori.jp";

aomori_jp("towada", _Any) ->
    "towada.aomori.jp";

aomori_jp("oirase", _Any) ->
    "oirase.aomori.jp";

aomori_jp("shingo", _Any) ->
    "shingo.aomori.jp";

aomori_jp("noheji", _Any) ->
    "noheji.aomori.jp";

aomori_jp("nakadomari", _Any) ->
    "nakadomari.aomori.jp";

aomori_jp("hirosaki", _Any) ->
    "hirosaki.aomori.jp";


aomori_jp(_, _) ->
    "aomori.jp".

%% regular rules
tt("int", _Any) ->
    "int.tt";

tt("net", _Any) ->
    "net.tt";

tt("coop", _Any) ->
    "coop.tt";

tt("museum", _Any) ->
    "museum.tt";

tt("travel", _Any) ->
    "travel.tt";

tt("co", _Any) ->
    "co.tt";

tt("gov", _Any) ->
    "gov.tt";

tt("aero", _Any) ->
    "aero.tt";

tt("info", _Any) ->
    "info.tt";

tt("edu", _Any) ->
    "edu.tt";

tt("com", _Any) ->
    "com.tt";

tt("pro", _Any) ->
    "pro.tt";

tt("mobi", _Any) ->
    "mobi.tt";

tt("biz", _Any) ->
    "biz.tt";

tt("org", _Any) ->
    "org.tt";

tt("name", _Any) ->
    "name.tt";

tt("jobs", _Any) ->
    "jobs.tt";


tt(_, _) ->
    "tt".

%% regular rules
jo("mil", _Any) ->
    "mil.jo";

jo("gov", _Any) ->
    "gov.jo";

jo("name", _Any) ->
    "name.jo";

jo("sch", _Any) ->
    "sch.jo";

jo("org", _Any) ->
    "org.jo";

jo("edu", _Any) ->
    "edu.jo";

jo("net", _Any) ->
    "net.jo";

jo("com", _Any) ->
    "com.jo";


jo(_, _) ->
    "jo".

%% regular rules
cm("gov", _Any) ->
    "gov.cm";

cm("co", _Any) ->
    "co.cm";

cm("com", _Any) ->
    "com.cm";

cm("net", _Any) ->
    "net.cm";


cm(_, _) ->
    "cm".

%% regular rules
im("com", _Any) ->
    "com.im";

im("tv", _Any) ->
    "tv.im";

im("ro", _Any) ->
    "ro.im";

im("org", _Any) ->
    "org.im";

im("net", _Any) ->
    "net.im";

im("tt", _Any) ->
    "tt.im";

im("co", []) ->
    "co.im";
im("co", Parts) ->
    [First | Rest] = Parts,
    co_im(First, Rest);

im("ac", _Any) ->
    "ac.im";


im(_, _) ->
    "im".

%% regular rules
co_im("ltd", _Any) ->
    "ltd.co.im";

co_im("plc", _Any) ->
    "plc.co.im";


co_im(_, _) ->
    "co.im".

%% regular rules
ni("org", _Any) ->
    "org.ni";

ni("gob", _Any) ->
    "gob.ni";

ni("biz", _Any) ->
    "biz.ni";

ni("co", _Any) ->
    "co.ni";

ni("ac", _Any) ->
    "ac.ni";

ni("nom", _Any) ->
    "nom.ni";

ni("in", _Any) ->
    "in.ni";

ni("net", _Any) ->
    "net.ni";

ni("int", _Any) ->
    "int.ni";

ni("mil", _Any) ->
    "mil.ni";

ni("web", _Any) ->
    "web.ni";

ni("com", _Any) ->
    "com.ni";

ni("info", _Any) ->
    "info.ni";

ni("edu", _Any) ->
    "edu.ni";


ni(_, _) ->
    "ni".

%% regular rules
sv("edu", _Any) ->
    "edu.sv";

sv("red", _Any) ->
    "red.sv";

sv("com", _Any) ->
    "com.sv";

sv("gob", _Any) ->
    "gob.sv";

sv("org", _Any) ->
    "org.sv";


sv(_, _) ->
    "sv".

%% regular rules
nu("merseine", _Any) ->
    "merseine.nu";

nu("mine", _Any) ->
    "mine.nu";

nu("shacknet", _Any) ->
    "shacknet.nu";

nu("enterprisecloud", _Any) ->
    "enterprisecloud.nu";


nu(_, _) ->
    "nu".

%% regular rules
ps("gov", _Any) ->
    "gov.ps";

ps("net", _Any) ->
    "net.ps";

ps("org", _Any) ->
    "org.ps";

ps("sec", _Any) ->
    "sec.ps";

ps("com", _Any) ->
    "com.ps";

ps("plo", _Any) ->
    "plo.ps";

ps("edu", _Any) ->
    "edu.ps";


ps(_, _) ->
    "ps".

%% regular rules
re("asso", _Any) ->
    "asso.re";

re("blogspot", _Any) ->
    "blogspot.re";

re("nom", _Any) ->
    "nom.re";

re("com", _Any) ->
    "com.re";


re(_, _) ->
    "re".

%% regular rules
uz("org", _Any) ->
    "org.uz";

uz("com", _Any) ->
    "com.uz";

uz("net", _Any) ->
    "net.uz";

uz("co", _Any) ->
    "co.uz";


uz(_, _) ->
    "uz".

%% regular rules
pf("com", _Any) ->
    "com.pf";

pf("edu", _Any) ->
    "edu.pf";

pf("org", _Any) ->
    "org.pf";


pf(_, _) ->
    "pf".

%% regular rules
th("online", _Any) ->
    "online.th";

th("in", _Any) ->
    "in.th";

th("net", _Any) ->
    "net.th";

th("go", _Any) ->
    "go.th";

th("co", _Any) ->
    "co.th";

th("shop", _Any) ->
    "shop.th";

th("ac", _Any) ->
    "ac.th";

th("or", _Any) ->
    "or.th";

th("mi", _Any) ->
    "mi.th";


th(_, _) ->
    "th".

%% regular rules
zone("hs", _Any) ->
    "hs.zone";

zone("lima", _Any) ->
    "lima.zone";


zone(_, _) ->
    "zone".

%% regular rules
pro("med", _Any) ->
    "med.pro";

pro("cpa", _Any) ->
    "cpa.pro";

pro("dnstrace", []) ->
    "dnstrace.pro";
pro("dnstrace", Parts) ->
    [First | Rest] = Parts,
    dnstrace_pro(First, Rest);

pro("aaa", _Any) ->
    "aaa.pro";

pro("cloudns", _Any) ->
    "cloudns.pro";

pro("acct", _Any) ->
    "acct.pro";

pro("recht", _Any) ->
    "recht.pro";

pro("avocat", _Any) ->
    "avocat.pro";

pro("jur", _Any) ->
    "jur.pro";

pro("aca", _Any) ->
    "aca.pro";

pro("bar", _Any) ->
    "bar.pro";

pro("eng", _Any) ->
    "eng.pro";

pro("barsy", _Any) ->
    "barsy.pro";

pro("law", _Any) ->
    "law.pro";


pro(_, _) ->
    "pro".

%% regular rules
dnstrace_pro("bci", _Any) ->
    "bci.dnstrace.pro";


dnstrace_pro(_, _) ->
    "dnstrace.pro".

%% regular rules
tr("mil", _Any) ->
    "mil.tr";

tr("tv", _Any) ->
    "tv.tr";

tr("edu", _Any) ->
    "edu.tr";

tr("info", _Any) ->
    "info.tr";

tr("web", _Any) ->
    "web.tr";

tr("com", []) ->
    "com.tr";
tr("com", Parts) ->
    [First | Rest] = Parts,
    com_tr(First, Rest);

tr("gov", _Any) ->
    "gov.tr";

tr("kep", _Any) ->
    "kep.tr";

tr("dr", _Any) ->
    "dr.tr";

tr("bbs", _Any) ->
    "bbs.tr";

tr("bel", _Any) ->
    "bel.tr";

tr("net", _Any) ->
    "net.tr";

tr("av", _Any) ->
    "av.tr";

tr("gen", _Any) ->
    "gen.tr";

tr("nc", []) ->
    "nc.tr";
tr("nc", Parts) ->
    [First | Rest] = Parts,
    nc_tr(First, Rest);

tr("tsk", _Any) ->
    "tsk.tr";

tr("pol", _Any) ->
    "pol.tr";

tr("tel", _Any) ->
    "tel.tr";

tr("name", _Any) ->
    "name.tr";

tr("org", _Any) ->
    "org.tr";

tr("biz", _Any) ->
    "biz.tr";


tr(_, _) ->
    "tr".

%% regular rules
com_tr("blogspot", _Any) ->
    "blogspot.com.tr";


com_tr(_, _) ->
    "com.tr".

%% regular rules
nc_tr("gov", _Any) ->
    "gov.nc.tr";


nc_tr(_, _) ->
    "nc.tr".

%% regular rules
net("serveftp", _Any) ->
    "serveftp.net";

net("myeffect", _Any) ->
    "myeffect.net";

net("shopselect", _Any) ->
    "shopselect.net";

net("flynnhosting", _Any) ->
    "flynnhosting.net";

net("supabase", _Any) ->
    "supabase.net";

net("ru", _Any) ->
    "ru.net";

net("za", _Any) ->
    "za.net";

net("serveblog", _Any) ->
    "serveblog.net";

net("cloudycluster", _Any) ->
    "cloudycluster.net";

net("thruhere", _Any) ->
    "thruhere.net";

net("heteml", _Any) ->
    "heteml.net";

net("homeunix", _Any) ->
    "homeunix.net";

net("gb", _Any) ->
    "gb.net";

net("moonscale", _Any) ->
    "moonscale.net";

net("myamaze", _Any) ->
    "myamaze.net";

net("adobeaemcloud", _Any) ->
    "adobeaemcloud.net";

net("hicam", _Any) ->
    "hicam.net";

net("onavstack", _Any) ->
    "onavstack.net";

net("scaleforce", []) ->
    "scaleforce.net";
net("scaleforce", Parts) ->
    [First | Rest] = Parts,
    scaleforce_net(First, Rest);

net("akamaihd", _Any) ->
    "akamaihd.net";

net("adobeioruntime", _Any) ->
    "adobeioruntime.net";

net("edgekey", _Any) ->
    "edgekey.net";

net("azurefd", _Any) ->
    "azurefd.net";

net("iobb", _Any) ->
    "iobb.net";

net("edgesuite", _Any) ->
    "edgesuite.net";

net("cloudfunctions", _Any) ->
    "cloudfunctions.net";

net("cloudapp", _Any) ->
    "cloudapp.net";

net("windows", []) ->
    "windows.net";
net("windows", Parts) ->
    [First | Rest] = Parts,
    windows_net(First, Rest);

net("dynu", _Any) ->
    "dynu.net";

net("vpndns", _Any) ->
    "vpndns.net";

net("rackmaze", _Any) ->
    "rackmaze.net";

net("serveminecraft", _Any) ->
    "serveminecraft.net";

net("cloudfront", _Any) ->
    "cloudfront.net";

net("casacam", _Any) ->
    "casacam.net";

net("bounceme", _Any) ->
    "bounceme.net";

net("jp", _Any) ->
    "jp.net";

net("torproject", []) ->
    "torproject.net";
net("torproject", Parts) ->
    [First | Rest] = Parts,
    torproject_net(First, Rest);

net("dnsdojo", _Any) ->
    "dnsdojo.net";

net("mydatto", _Any) ->
    "mydatto.net";

net("dynalias", _Any) ->
    "dynalias.net";

net("dontexist", _Any) ->
    "dontexist.net";

net("azurestaticapps", []) ->
    "azurestaticapps.net";
net("azurestaticapps", Parts) ->
    [First | Rest] = Parts,
    azurestaticapps_net(First, Rest);

net("ownip", _Any) ->
    "ownip.net";

net("akamai", _Any) ->
    "akamai.net";

net("mymediapc", _Any) ->
    "mymediapc.net";

net("akamaized", _Any) ->
    "akamaized.net";

net("akamaiedge", _Any) ->
    "akamaiedge.net";

net("alwaysdata", _Any) ->
    "alwaysdata.net";

net("podzone", _Any) ->
    "podzone.net";

net("ipifony", _Any) ->
    "ipifony.net";

net("privatizehealthinsurance", _Any) ->
    "privatizehealthinsurance.net";

net("fastly", []) ->
    "fastly.net";
net("fastly", Parts) ->
    [First | Rest] = Parts,
    fastly_net(First, Rest);

net("tsukaeru", []) ->
    "tsukaeru.net";
net("tsukaeru", Parts) ->
    [First | Rest] = Parts,
    tsukaeru_net(First, Rest);

net("seidat", _Any) ->
    "seidat.net";

net("cloudjiffy", _Any) ->
    "cloudjiffy.net";

net("uk", _Any) ->
    "uk.net";

net("faststacks", _Any) ->
    "faststacks.net";

net("twmail", _Any) ->
    "twmail.net";

net("channelsdvr", []) ->
    "channelsdvr.net";
net("channelsdvr", Parts) ->
    [First | Rest] = Parts,
    channelsdvr_net(First, Rest);

net("yandexcloud", []) ->
    "yandexcloud.net";
net("yandexcloud", Parts) ->
    [First | Rest] = Parts,
    yandexcloud_net(First, Rest);

net("akamaiorigin", _Any) ->
    "akamaiorigin.net";

net("pgafan", _Any) ->
    "pgafan.net";

net("cloudaccess", _Any) ->
    "cloudaccess.net";

net("mydissent", _Any) ->
    "mydissent.net";

net("memset", _Any) ->
    "memset.net";

net("webhop", _Any) ->
    "webhop.net";

net("mypsx", _Any) ->
    "mypsx.net";

net("siteleaf", _Any) ->
    "siteleaf.net";

net("homeftp", _Any) ->
    "homeftp.net";

net("dnsalias", _Any) ->
    "dnsalias.net";

net("myspreadshop", _Any) ->
    "myspreadshop.net";

net("mysecuritycamera", _Any) ->
    "mysecuritycamera.net";

net("kinghost", _Any) ->
    "kinghost.net";

net("saveincloud", []) ->
    "saveincloud.net";
net("saveincloud", Parts) ->
    [First | Rest] = Parts,
    saveincloud_net(First, Rest);

net("bplaced", _Any) ->
    "bplaced.net";

net("homeip", _Any) ->
    "homeip.net";

net("myfritz", _Any) ->
    "myfritz.net";

net("nhlfan", _Any) ->
    "nhlfan.net";

net("definima", _Any) ->
    "definima.net";

net("meinforum", _Any) ->
    "meinforum.net";

net("clickrising", _Any) ->
    "clickrising.net";

net("hu", _Any) ->
    "hu.net";

net("selfip", _Any) ->
    "selfip.net";

net("ts", _Any) ->
    "ts.net";

net("azurewebsites", _Any) ->
    "azurewebsites.net";

net("blackbaudcdn", _Any) ->
    "blackbaudcdn.net";

net("homelinux", _Any) ->
    "homelinux.net";

net("dnsup", _Any) ->
    "dnsup.net";

net("boomla", _Any) ->
    "boomla.net";

net("blogdns", _Any) ->
    "blogdns.net";

net("barsy", _Any) ->
    "barsy.net";

net("se", _Any) ->
    "se.net";

net("fastlylb", []) ->
    "fastlylb.net";
net("fastlylb", Parts) ->
    [First | Rest] = Parts,
    fastlylb_net(First, Rest);

net("familyds", _Any) ->
    "familyds.net";

net("bitbridge", _Any) ->
    "bitbridge.net";

net("endofinternet", _Any) ->
    "endofinternet.net";

net("azureedge", _Any) ->
    "azureedge.net";

net("ddns", _Any) ->
    "ddns.net";

net("servebbs", _Any) ->
    "servebbs.net";

net("debian", _Any) ->
    "debian.net";

net("krellian", _Any) ->
    "krellian.net";

net("buyshouses", _Any) ->
    "buyshouses.net";

net("akadns", _Any) ->
    "akadns.net";

net("srcf", []) ->
    "srcf.net";
net("srcf", Parts) ->
    [First | Rest] = Parts,
    srcf_net(First, Rest);

net("schokokeks", _Any) ->
    "schokokeks.net";

net("dynathome", _Any) ->
    "dynathome.net";

net("appudo", _Any) ->
    "appudo.net";

net("dsmynas", _Any) ->
    "dsmynas.net";

net("senseering", _Any) ->
    "senseering.net";

net("trafficmanager", _Any) ->
    "trafficmanager.net";

net("in", _Any) ->
    "in.net";

net("tailscale", []) ->
    "tailscale.net";
net("tailscale", Parts) ->
    [First | Rest] = Parts,
    tailscale_net(First, Rest);

net("redirectme", _Any) ->
    "redirectme.net";

net("squares", _Any) ->
    "squares.net";

net("edgeapp", _Any) ->
    "edgeapp.net";

net("sytes", _Any) ->
    "sytes.net";

net("dattolocal", _Any) ->
    "dattolocal.net";


net(_, _) ->
    "net".

%% regular rules
scaleforce_net("j", _Any) ->
    "j.scaleforce.net";


scaleforce_net(_, _) ->
    "scaleforce.net".

%% regular rules
windows_net("servicebus", _Any) ->
    "servicebus.windows.net";

windows_net("core", []) ->
    "core.windows.net";
windows_net("core", Parts) ->
    [First | Rest] = Parts,
    core_windows_net(First, Rest);


windows_net(_, _) ->
    "windows.net".

%% regular rules
core_windows_net("blob", _Any) ->
    "blob.core.windows.net";


core_windows_net(_, _) ->
    "core.windows.net".

%% regular rules
torproject_net("pages", _Any) ->
    "pages.torproject.net";


torproject_net(_, _) ->
    "torproject.net".

%% regular rules
azurestaticapps_net("centralus", _Any) ->
    "centralus.azurestaticapps.net";

azurestaticapps_net("eastasia", _Any) ->
    "eastasia.azurestaticapps.net";

azurestaticapps_net("westeurope", _Any) ->
    "westeurope.azurestaticapps.net";


azurestaticapps_net(_, _) ->
    "azurestaticapps.net".

%% regular rules
fastly_net("ssl", []) ->
    "ssl.fastly.net";
fastly_net("ssl", Parts) ->
    [First | Rest] = Parts,
    ssl_fastly_net(First, Rest);

fastly_net("map", _Any) ->
    "map.fastly.net";

fastly_net("prod", []) ->
    "prod.fastly.net";
fastly_net("prod", Parts) ->
    [First | Rest] = Parts,
    prod_fastly_net(First, Rest);

fastly_net("freetls", _Any) ->
    "freetls.fastly.net";


fastly_net(_, _) ->
    "fastly.net".

%% regular rules
ssl_fastly_net("a", _Any) ->
    "a.ssl.fastly.net";

ssl_fastly_net("b", _Any) ->
    "b.ssl.fastly.net";

ssl_fastly_net("global", _Any) ->
    "global.ssl.fastly.net";


ssl_fastly_net(_, _) ->
    "ssl.fastly.net".

%% regular rules
prod_fastly_net("a", _Any) ->
    "a.prod.fastly.net";

prod_fastly_net("global", _Any) ->
    "global.prod.fastly.net";


prod_fastly_net(_, _) ->
    "prod.fastly.net".

%% regular rules
tsukaeru_net("jelastic", _Any) ->
    "jelastic.tsukaeru.net";


tsukaeru_net(_, _) ->
    "tsukaeru.net".

%% regular rules
channelsdvr_net("u", _Any) ->
    "u.channelsdvr.net";


channelsdvr_net(_, _) ->
    "channelsdvr.net".

%% regular rules
yandexcloud_net("website", _Any) ->
    "website.yandexcloud.net";

yandexcloud_net("storage", _Any) ->
    "storage.yandexcloud.net";


yandexcloud_net(_, _) ->
    "yandexcloud.net".

%% regular rules
saveincloud_net("jelastic", _Any) ->
    "jelastic.saveincloud.net";


saveincloud_net(_, _) ->
    "saveincloud.net".

%% regular rules
fastlylb_net("map", _Any) ->
    "map.fastlylb.net";


fastlylb_net(_, _) ->
    "fastlylb.net".

%% regular rules
srcf_net("user", _Any) ->
    "user.srcf.net";

srcf_net("soc", _Any) ->
    "soc.srcf.net";


srcf_net(_, _) ->
    "srcf.net".

%% regular rules
tailscale_net("beta", _Any) ->
    "beta.tailscale.net";


tailscale_net(_, _) ->
    "tailscale.net".

%% regular rules
iq("net", _Any) ->
    "net.iq";

iq("org", _Any) ->
    "org.iq";

iq("gov", _Any) ->
    "gov.iq";

iq("edu", _Any) ->
    "edu.iq";

iq("com", _Any) ->
    "com.iq";

iq("mil", _Any) ->
    "mil.iq";


iq(_, _) ->
    "iq".

%% regular rules
pl("mail", _Any) ->
    "mail.pl";

pl("pomorze", _Any) ->
    "pomorze.pl";

pl("konin", _Any) ->
    "konin.pl";

pl("nieruchomosci", _Any) ->
    "nieruchomosci.pl";

pl("lubartow", _Any) ->
    "lubartow.pl";

pl("kutno", _Any) ->
    "kutno.pl";

pl("swiebodzin", _Any) ->
    "swiebodzin.pl";

pl("pisz", _Any) ->
    "pisz.pl";

pl("tarnobrzeg", _Any) ->
    "tarnobrzeg.pl";

pl("bielawa", _Any) ->
    "bielawa.pl";

pl("gsm", _Any) ->
    "gsm.pl";

pl("swidnik", _Any) ->
    "swidnik.pl";

pl("unicloud", _Any) ->
    "unicloud.pl";

pl("jaworzno", _Any) ->
    "jaworzno.pl";

pl("nysa", _Any) ->
    "nysa.pl";

pl("bialystok", _Any) ->
    "bialystok.pl";

pl("olsztyn", _Any) ->
    "olsztyn.pl";

pl("media", _Any) ->
    "media.pl";

pl("gdansk", _Any) ->
    "gdansk.pl";

pl("bedzin", _Any) ->
    "bedzin.pl";

pl("mazury", _Any) ->
    "mazury.pl";

pl("gov", []) ->
    "gov.pl";
pl("gov", Parts) ->
    [First | Rest] = Parts,
    gov_pl(First, Rest);

pl("mragowo", _Any) ->
    "mragowo.pl";

pl("simplesite", _Any) ->
    "simplesite.pl";

pl("sex", _Any) ->
    "sex.pl";

pl("suwalki", _Any) ->
    "suwalki.pl";

pl("warszawa", _Any) ->
    "warszawa.pl";

pl("krakow", _Any) ->
    "krakow.pl";

pl("swidnica", _Any) ->
    "swidnica.pl";

pl("swinoujscie", _Any) ->
    "swinoujscie.pl";

pl("targi", _Any) ->
    "targi.pl";

pl("sopot", _Any) ->
    "sopot.pl";

pl("olecko", _Any) ->
    "olecko.pl";

pl("lowicz", _Any) ->
    "lowicz.pl";

pl("rybnik", _Any) ->
    "rybnik.pl";

pl("bieszczady", _Any) ->
    "bieszczady.pl";

pl("turystyka", _Any) ->
    "turystyka.pl";

pl("auto", _Any) ->
    "auto.pl";

pl("tgory", _Any) ->
    "tgory.pl";

pl("bydgoszcz", _Any) ->
    "bydgoszcz.pl";

pl("wroc", _Any) ->
    "wroc.pl";

pl("tm", _Any) ->
    "tm.pl";

pl("gda", _Any) ->
    "gda.pl";

pl("gniezno", _Any) ->
    "gniezno.pl";

pl("zachpomor", _Any) ->
    "zachpomor.pl";

pl("poznan", _Any) ->
    "poznan.pl";

pl("podhale", _Any) ->
    "podhale.pl";

pl("lomza", _Any) ->
    "lomza.pl";

pl("czeladz", _Any) ->
    "czeladz.pl";

pl("czest", _Any) ->
    "czest.pl";

pl("warmia", _Any) ->
    "warmia.pl";

pl("aid", _Any) ->
    "aid.pl";

pl("lapy", _Any) ->
    "lapy.pl";

pl("pulawy", _Any) ->
    "pulawy.pl";

pl("biz", _Any) ->
    "biz.pl";

pl("olkusz", _Any) ->
    "olkusz.pl";

pl("lublin", _Any) ->
    "lublin.pl";

pl("wlocl", _Any) ->
    "wlocl.pl";

pl("waw", _Any) ->
    "waw.pl";

pl("agro", _Any) ->
    "agro.pl";

pl("ilawa", _Any) ->
    "ilawa.pl";

pl("med", _Any) ->
    "med.pl";

pl("kepno", _Any) ->
    "kepno.pl";

pl("olawa", _Any) ->
    "olawa.pl";

pl("glogow", _Any) ->
    "glogow.pl";

pl("edu", _Any) ->
    "edu.pl";

pl("naklo", _Any) ->
    "naklo.pl";

pl("beep", _Any) ->
    "beep.pl";

pl("nom", _Any) ->
    "nom.pl";

pl("slask", _Any) ->
    "slask.pl";

pl("ketrzyn", _Any) ->
    "ketrzyn.pl";

pl("org", _Any) ->
    "org.pl";

pl("atm", _Any) ->
    "atm.pl";

pl("radom", _Any) ->
    "radom.pl";

pl("leczna", _Any) ->
    "leczna.pl";

pl("malopolska", _Any) ->
    "malopolska.pl";

pl("pc", _Any) ->
    "pc.pl";

pl("opoczno", _Any) ->
    "opoczno.pl";

pl("wolomin", _Any) ->
    "wolomin.pl";

pl("bialowieza", _Any) ->
    "bialowieza.pl";

pl("beskidy", _Any) ->
    "beskidy.pl";

pl("shop", _Any) ->
    "shop.pl";

pl("stargard", _Any) ->
    "stargard.pl";

pl("sklep", _Any) ->
    "sklep.pl";

pl("prochowice", _Any) ->
    "prochowice.pl";

pl("dlugoleka", _Any) ->
    "dlugoleka.pl";

pl("pruszkow", _Any) ->
    "pruszkow.pl";

pl("krasnik", _Any) ->
    "krasnik.pl";

pl("katowice", _Any) ->
    "katowice.pl";

pl("walbrzych", _Any) ->
    "walbrzych.pl";

pl("jgora", _Any) ->
    "jgora.pl";

pl("priv", _Any) ->
    "priv.pl";

pl("zakopane", _Any) ->
    "zakopane.pl";

pl("karpacz", _Any) ->
    "karpacz.pl";

pl("ostroda", _Any) ->
    "ostroda.pl";

pl("rel", _Any) ->
    "rel.pl";

pl("shoparena", _Any) ->
    "shoparena.pl";

pl("torun", _Any) ->
    "torun.pl";

pl("ostroleka", _Any) ->
    "ostroleka.pl";

pl("ustka", _Any) ->
    "ustka.pl";

pl("kalisz", _Any) ->
    "kalisz.pl";

pl("opole", _Any) ->
    "opole.pl";

pl("net", _Any) ->
    "net.pl";

pl("mielno", _Any) ->
    "mielno.pl";

pl("zarow", _Any) ->
    "zarow.pl";

pl("grajewo", _Any) ->
    "grajewo.pl";

pl("przeworsk", _Any) ->
    "przeworsk.pl";

pl("gmina", _Any) ->
    "gmina.pl";

pl("homesklep", _Any) ->
    "homesklep.pl";

pl("augustow", _Any) ->
    "augustow.pl";

pl("zagan", _Any) ->
    "zagan.pl";

pl("boleslawiec", _Any) ->
    "boleslawiec.pl";

pl("lubin", _Any) ->
    "lubin.pl";

pl("zgorzelec", _Any) ->
    "zgorzelec.pl";

pl("sanok", _Any) ->
    "sanok.pl";

pl("wroclaw", _Any) ->
    "wroclaw.pl";

pl("wodzislaw", _Any) ->
    "wodzislaw.pl";

pl("ostrowiec", _Any) ->
    "ostrowiec.pl";

pl("gliwice", _Any) ->
    "gliwice.pl";

pl("starachowice", _Any) ->
    "starachowice.pl";

pl("wielun", _Any) ->
    "wielun.pl";

pl("tourism", _Any) ->
    "tourism.pl";

pl("konskowola", _Any) ->
    "konskowola.pl";

pl("bytom", _Any) ->
    "bytom.pl";

pl("sdscloud", _Any) ->
    "sdscloud.pl";

pl("cieszyn", _Any) ->
    "cieszyn.pl";

pl("mielec", _Any) ->
    "mielec.pl";

pl("myspreadshop", _Any) ->
    "myspreadshop.pl";

pl("lebork", _Any) ->
    "lebork.pl";

pl("elk", _Any) ->
    "elk.pl";

pl("lukow", _Any) ->
    "lukow.pl";

pl("kolobrzeg", _Any) ->
    "kolobrzeg.pl";

pl("gdynia", _Any) ->
    "gdynia.pl";

pl("miasta", _Any) ->
    "miasta.pl";

pl("sejny", _Any) ->
    "sejny.pl";

pl("powiat", _Any) ->
    "powiat.pl";

pl("wegrow", _Any) ->
    "wegrow.pl";

pl("lezajsk", _Any) ->
    "lezajsk.pl";

pl("pomorskie", _Any) ->
    "pomorskie.pl";

pl("rzeszow", _Any) ->
    "rzeszow.pl";

pl("travel", _Any) ->
    "travel.pl";

pl("co", _Any) ->
    "co.pl";

pl("podlasie", _Any) ->
    "podlasie.pl";

pl("pila", _Any) ->
    "pila.pl";

pl("zgora", _Any) ->
    "zgora.pl";

pl("nowaruda", _Any) ->
    "nowaruda.pl";

pl("sosnowiec", _Any) ->
    "sosnowiec.pl";

pl("elblag", _Any) ->
    "elblag.pl";

pl("kobierzyce", _Any) ->
    "kobierzyce.pl";

pl("skoczow", _Any) ->
    "skoczow.pl";

pl("szkola", _Any) ->
    "szkola.pl";

pl("legnica", _Any) ->
    "legnica.pl";

pl("mazowsze", _Any) ->
    "mazowsze.pl";

pl("sos", _Any) ->
    "sos.pl";

pl("klodzko", _Any) ->
    "klodzko.pl";

pl("slupsk", _Any) ->
    "slupsk.pl";

pl("polkowice", _Any) ->
    "polkowice.pl";

pl("kartuzy", _Any) ->
    "kartuzy.pl";

pl("info", _Any) ->
    "info.pl";

pl("szczecin", _Any) ->
    "szczecin.pl";

pl("mil", _Any) ->
    "mil.pl";

pl("kaszuby", _Any) ->
    "kaszuby.pl";

pl("turek", _Any) ->
    "turek.pl";

pl("malbork", _Any) ->
    "malbork.pl";

pl("poniatowa", _Any) ->
    "poniatowa.pl";

pl("art", _Any) ->
    "art.pl";

pl("realestate", _Any) ->
    "realestate.pl";

pl("szczytno", _Any) ->
    "szczytno.pl";

pl("limanowa", _Any) ->
    "limanowa.pl";

pl("tychy", _Any) ->
    "tychy.pl";

pl("ostrowwlkp", _Any) ->
    "ostrowwlkp.pl";

pl("wloclawek", _Any) ->
    "wloclawek.pl";

pl("com", _Any) ->
    "com.pl";

pl("gorlice", _Any) ->
    "gorlice.pl";


pl(_, _) ->
    "pl".

%% regular rules
gov_pl("pinb", _Any) ->
    "pinb.gov.pl";

gov_pl("umig", _Any) ->
    "umig.gov.pl";

gov_pl("piw", _Any) ->
    "piw.gov.pl";

gov_pl("zp", _Any) ->
    "zp.gov.pl";

gov_pl("pr", _Any) ->
    "pr.gov.pl";

gov_pl("wif", _Any) ->
    "wif.gov.pl";

gov_pl("oke", _Any) ->
    "oke.gov.pl";

gov_pl("wios", _Any) ->
    "wios.gov.pl";

gov_pl("kmpsp", _Any) ->
    "kmpsp.gov.pl";

gov_pl("sa", _Any) ->
    "sa.gov.pl";

gov_pl("so", _Any) ->
    "so.gov.pl";

gov_pl("wsa", _Any) ->
    "wsa.gov.pl";

gov_pl("sko", _Any) ->
    "sko.gov.pl";

gov_pl("po", _Any) ->
    "po.gov.pl";

gov_pl("pa", _Any) ->
    "pa.gov.pl";

gov_pl("konsulat", _Any) ->
    "konsulat.gov.pl";

gov_pl("uw", _Any) ->
    "uw.gov.pl";

gov_pl("psse", _Any) ->
    "psse.gov.pl";

gov_pl("sr", _Any) ->
    "sr.gov.pl";

gov_pl("wuoz", _Any) ->
    "wuoz.gov.pl";

gov_pl("griw", _Any) ->
    "griw.gov.pl";

gov_pl("ugim", _Any) ->
    "ugim.gov.pl";

gov_pl("kppsp", _Any) ->
    "kppsp.gov.pl";

gov_pl("oum", _Any) ->
    "oum.gov.pl";

gov_pl("kwp", _Any) ->
    "kwp.gov.pl";

gov_pl("wiih", _Any) ->
    "wiih.gov.pl";

gov_pl("wskr", _Any) ->
    "wskr.gov.pl";

gov_pl("uppo", _Any) ->
    "uppo.gov.pl";

gov_pl("mup", _Any) ->
    "mup.gov.pl";

gov_pl("wsse", _Any) ->
    "wsse.gov.pl";

gov_pl("mw", _Any) ->
    "mw.gov.pl";

gov_pl("rzgw", _Any) ->
    "rzgw.gov.pl";

gov_pl("uzs", _Any) ->
    "uzs.gov.pl";

gov_pl("upow", _Any) ->
    "upow.gov.pl";

gov_pl("us", _Any) ->
    "us.gov.pl";

gov_pl("wiw", _Any) ->
    "wiw.gov.pl";

gov_pl("oia", _Any) ->
    "oia.gov.pl";

gov_pl("winb", _Any) ->
    "winb.gov.pl";

gov_pl("starostwo", _Any) ->
    "starostwo.gov.pl";

gov_pl("sdn", _Any) ->
    "sdn.gov.pl";

gov_pl("pup", _Any) ->
    "pup.gov.pl";

gov_pl("ug", _Any) ->
    "ug.gov.pl";

gov_pl("oirm", _Any) ->
    "oirm.gov.pl";

gov_pl("witd", _Any) ->
    "witd.gov.pl";

gov_pl("oschr", _Any) ->
    "oschr.gov.pl";

gov_pl("oow", _Any) ->
    "oow.gov.pl";

gov_pl("wkz", _Any) ->
    "wkz.gov.pl";

gov_pl("um", _Any) ->
    "um.gov.pl";

gov_pl("wzmiuw", _Any) ->
    "wzmiuw.gov.pl";

gov_pl("ap", _Any) ->
    "ap.gov.pl";

gov_pl("is", _Any) ->
    "is.gov.pl";

gov_pl("zpisdn", _Any) ->
    "zpisdn.gov.pl";

gov_pl("ic", _Any) ->
    "ic.gov.pl";

gov_pl("kwpsp", _Any) ->
    "kwpsp.gov.pl";

gov_pl("psp", _Any) ->
    "psp.gov.pl";


gov_pl(_, _) ->
    "gov.pl".

%% regular rules
science("ybo", _Any) ->
    "ybo.science";


science(_, _) ->
    "science".

%% regular rules
today("prequalifyme", _Any) ->
    "prequalifyme.today";


today(_, _) ->
    "today".

%% regular rules
systems("knightpoint", _Any) ->
    "knightpoint.systems";


systems(_, _) ->
    "systems".

%% regular rules
tc("ch", _Any) ->
    "ch.tc";

tc("me", _Any) ->
    "me.tc";

tc("we", _Any) ->
    "we.tc";


tc(_, _) ->
    "tc".

%% regular rules
cx("gov", _Any) ->
    "gov.cx";

cx("info", _Any) ->
    "info.cx";

cx("ath", _Any) ->
    "ath.cx";


cx(_, _) ->
    "cx".

%% regular rules
bo("tecnologia", _Any) ->
    "tecnologia.bo";

bo("gob", _Any) ->
    "gob.bo";

bo("politica", _Any) ->
    "politica.bo";

bo("tksat", _Any) ->
    "tksat.bo";

bo("movimiento", _Any) ->
    "movimiento.bo";

bo("academia", _Any) ->
    "academia.bo";

bo("medicina", _Any) ->
    "medicina.bo";

bo("plurinacional", _Any) ->
    "plurinacional.bo";

bo("agro", _Any) ->
    "agro.bo";

bo("blog", _Any) ->
    "blog.bo";

bo("natural", _Any) ->
    "natural.bo";

bo("patria", _Any) ->
    "patria.bo";

bo("int", _Any) ->
    "int.bo";

bo("deporte", _Any) ->
    "deporte.bo";

bo("transporte", _Any) ->
    "transporte.bo";

bo("nombre", _Any) ->
    "nombre.bo";

bo("info", _Any) ->
    "info.bo";

bo("edu", _Any) ->
    "edu.bo";

bo("ciencia", _Any) ->
    "ciencia.bo";

bo("profesional", _Any) ->
    "profesional.bo";

bo("mil", _Any) ->
    "mil.bo";

bo("democracia", _Any) ->
    "democracia.bo";

bo("salud", _Any) ->
    "salud.bo";

bo("musica", _Any) ->
    "musica.bo";

bo("ecologia", _Any) ->
    "ecologia.bo";

bo("org", _Any) ->
    "org.bo";

bo("arte", _Any) ->
    "arte.bo";

bo("noticias", _Any) ->
    "noticias.bo";

bo("pueblo", _Any) ->
    "pueblo.bo";

bo("net", _Any) ->
    "net.bo";

bo("indigena", _Any) ->
    "indigena.bo";

bo("wiki", _Any) ->
    "wiki.bo";

bo("revista", _Any) ->
    "revista.bo";

bo("economia", _Any) ->
    "economia.bo";

bo("com", _Any) ->
    "com.bo";

bo("bolivia", _Any) ->
    "bolivia.bo";

bo("web", _Any) ->
    "web.bo";

bo("tv", _Any) ->
    "tv.bo";

bo("cooperativa", _Any) ->
    "cooperativa.bo";

bo("industria", _Any) ->
    "industria.bo";

bo("empresa", _Any) ->
    "empresa.bo";


bo(_, _) ->
    "bo".

%% regular rules
se("paba", []) ->
    "paba.se";
se("paba", Parts) ->
    [First | Rest] = Parts,
    paba_se(First, Rest);

se("komvux", _Any) ->
    "komvux.se";

se("myspreadshop", _Any) ->
    "myspreadshop.se";

se("o", _Any) ->
    "o.se";

se("tm", _Any) ->
    "tm.se";

se("ac", _Any) ->
    "ac.se";

se("e", _Any) ->
    "e.se";

se("pp", _Any) ->
    "pp.se";

se("k", _Any) ->
    "k.se";

se("s", _Any) ->
    "s.se";

se("com", _Any) ->
    "com.se";

se("i", _Any) ->
    "i.se";

se("c", _Any) ->
    "c.se";

se("org", _Any) ->
    "org.se";

se("p", _Any) ->
    "p.se";

se("h", _Any) ->
    "h.se";

se("lanbib", _Any) ->
    "lanbib.se";

se("a", _Any) ->
    "a.se";

se("bd", _Any) ->
    "bd.se";

se("brand", _Any) ->
    "brand.se";

se("n", _Any) ->
    "n.se";

se("itcouldbewor", _Any) ->
    "itcouldbewor.se";

se("x", _Any) ->
    "x.se";

se("f", _Any) ->
    "f.se";

se("l", _Any) ->
    "l.se";

se("t", _Any) ->
    "t.se";

se("u", _Any) ->
    "u.se";

se("r", _Any) ->
    "r.se";

se("g", _Any) ->
    "g.se";

se("conf", _Any) ->
    "conf.se";

se("b", _Any) ->
    "b.se";

se("w", _Any) ->
    "w.se";

se("y", _Any) ->
    "y.se";

se("komforb", _Any) ->
    "komforb.se";

se("kommunalforbund", _Any) ->
    "kommunalforbund.se";

se("fh", _Any) ->
    "fh.se";

se("fhsk", _Any) ->
    "fhsk.se";

se("press", _Any) ->
    "press.se";

se("naturbruksgymn", _Any) ->
    "naturbruksgymn.se";

se("z", _Any) ->
    "z.se";

se("parti", _Any) ->
    "parti.se";

se("fhv", _Any) ->
    "fhv.se";

se("iopsys", _Any) ->
    "iopsys.se";

se("m", _Any) ->
    "m.se";

se("d", _Any) ->
    "d.se";

se("blogspot", _Any) ->
    "blogspot.se";


se(_, _) ->
    "se".

%% regular rules
paba_se("su", _Any) ->
    "su.paba.se";


paba_se(_, _) ->
    "paba.se".

%% regular rules
page("hlx", _Any) ->
    "hlx.page";

page("pdns", _Any) ->
    "pdns.page";

page("aem", _Any) ->
    "aem.page";

page("codeberg", _Any) ->
    "codeberg.page";

page("plesk", _Any) ->
    "plesk.page";

page("translated", _Any) ->
    "translated.page";

page("magnet", _Any) ->
    "magnet.page";

page("prvcy", _Any) ->
    "prvcy.page";

page("rocky", _Any) ->
    "rocky.page";


page(_, _) ->
    "page".

%% regular rules
casa("nabu", []) ->
    "nabu.casa";
casa("nabu", Parts) ->
    [First | Rest] = Parts,
    nabu_casa(First, Rest);


casa(_, _) ->
    "casa".

%% regular rules
nabu_casa("ui", _Any) ->
    "ui.nabu.casa";


nabu_casa(_, _) ->
    "nabu.casa".

%% regular rules
ovh("nerdpol", _Any) ->
    "nerdpol.ovh";


ovh(_, _) ->
    "ovh".

%% regular rules
au("qld", _Any) ->
    "qld.au";

au("org", _Any) ->
    "org.au";

au("oz", _Any) ->
    "oz.au";

au("com", []) ->
    "com.au";
au("com", Parts) ->
    [First | Rest] = Parts,
    com_au(First, Rest);

au("info", _Any) ->
    "info.au";

au("edu", []) ->
    "edu.au";
au("edu", Parts) ->
    [First | Rest] = Parts,
    edu_au(First, Rest);

au("id", _Any) ->
    "id.au";

au("vic", _Any) ->
    "vic.au";

au("asn", _Any) ->
    "asn.au";

au("tas", _Any) ->
    "tas.au";

au("nsw", _Any) ->
    "nsw.au";

au("sa", _Any) ->
    "sa.au";

au("net", _Any) ->
    "net.au";

au("nt", _Any) ->
    "nt.au";

au("conf", _Any) ->
    "conf.au";

au("act", _Any) ->
    "act.au";

au("gov", []) ->
    "gov.au";
au("gov", Parts) ->
    [First | Rest] = Parts,
    gov_au(First, Rest);

au("wa", _Any) ->
    "wa.au";


au(_, _) ->
    "au".

%% regular rules
com_au("cloudlets", []) ->
    "cloudlets.com.au";
com_au("cloudlets", Parts) ->
    [First | Rest] = Parts,
    cloudlets_com_au(First, Rest);

com_au("myspreadshop", _Any) ->
    "myspreadshop.com.au";

com_au("blogspot", _Any) ->
    "blogspot.com.au";


com_au(_, _) ->
    "com.au".

%% regular rules
cloudlets_com_au("mel", _Any) ->
    "mel.cloudlets.com.au";


cloudlets_com_au(_, _) ->
    "cloudlets.com.au".

%% regular rules
edu_au("qld", _Any) ->
    "qld.edu.au";

edu_au("vic", _Any) ->
    "vic.edu.au";

edu_au("act", _Any) ->
    "act.edu.au";

edu_au("catholic", _Any) ->
    "catholic.edu.au";

edu_au("wa", _Any) ->
    "wa.edu.au";

edu_au("sa", _Any) ->
    "sa.edu.au";

edu_au("tas", _Any) ->
    "tas.edu.au";

edu_au("nsw", []) ->
    "nsw.edu.au";
edu_au("nsw", Parts) ->
    [First | Rest] = Parts,
    nsw_edu_au(First, Rest);

edu_au("nt", _Any) ->
    "nt.edu.au";


edu_au(_, _) ->
    "edu.au".

%% regular rules
nsw_edu_au("schools", _Any) ->
    "schools.nsw.edu.au";


nsw_edu_au(_, _) ->
    "nsw.edu.au".

%% regular rules
gov_au("vic", _Any) ->
    "vic.gov.au";

gov_au("qld", _Any) ->
    "qld.gov.au";

gov_au("wa", _Any) ->
    "wa.gov.au";

gov_au("tas", _Any) ->
    "tas.gov.au";

gov_au("sa", _Any) ->
    "sa.gov.au";


gov_au(_, _) ->
    "gov.au".

%% regular rules
dk("store", _Any) ->
    "store.dk";

dk("biz", _Any) ->
    "biz.dk";

dk("co", _Any) ->
    "co.dk";

dk("firm", _Any) ->
    "firm.dk";

dk("myspreadshop", _Any) ->
    "myspreadshop.dk";

dk("reg", _Any) ->
    "reg.dk";

dk("blogspot", _Any) ->
    "blogspot.dk";


dk(_, _) ->
    "dk".

%% regular rules
ai("uwu", _Any) ->
    "uwu.ai";

ai("org", _Any) ->
    "org.ai";

ai("com", _Any) ->
    "com.ai";

ai("net", _Any) ->
    "net.ai";

ai("off", _Any) ->
    "off.ai";


ai(_, _) ->
    "ai".

%% regular rules
bw("co", _Any) ->
    "co.bw";

bw("org", _Any) ->
    "org.bw";


bw(_, _) ->
    "bw".

%% regular rules
fm("radio", _Any) ->
    "radio.fm";

fm("org", _Any) ->
    "org.fm";

fm("com", _Any) ->
    "com.fm";

fm("edu", _Any) ->
    "edu.fm";

fm("net", _Any) ->
    "net.fm";


fm(_, _) ->
    "fm".

%% regular rules
live("aem", _Any) ->
    "aem.live";

live("hlx", _Any) ->
    "hlx.live";


live(_, _) ->
    "live".

%% regular rules
site("opensocial", _Any) ->
    "opensocial.site";

site("omniwe", _Any) ->
    "omniwe.site";

site("cyon", _Any) ->
    "cyon.site";

site("loginline", _Any) ->
    "loginline.site";

site("byen", _Any) ->
    "byen.site";

site("srht", _Any) ->
    "srht.site";

site("barsy", _Any) ->
    "barsy.site";

site("mintere", _Any) ->
    "mintere.site";

site("folionetwork", _Any) ->
    "folionetwork.site";

site("fnwk", _Any) ->
    "fnwk.site";

site("lelux", _Any) ->
    "lelux.site";

site("novecore", _Any) ->
    "novecore.site";

site("jele", _Any) ->
    "jele.site";

site("fastvps", _Any) ->
    "fastvps.site";


site(_, _) ->
    "site".

%% regular rules
st("org", _Any) ->
    "org.st";

st("noho", _Any) ->
    "noho.st";

st("store", _Any) ->
    "store.st";

st("kirara", _Any) ->
    "kirara.st";

st("net", _Any) ->
    "net.st";

st("embaixada", _Any) ->
    "embaixada.st";

st("co", _Any) ->
    "co.st";

st("saotome", _Any) ->
    "saotome.st";

st("com", _Any) ->
    "com.st";

st("edu", _Any) ->
    "edu.st";

st("consulado", _Any) ->
    "consulado.st";

st("mil", _Any) ->
    "mil.st";

st("principe", _Any) ->
    "principe.st";


st(_, _) ->
    "st".

%% regular rules
sd("tv", _Any) ->
    "tv.sd";

sd("com", _Any) ->
    "com.sd";

sd("edu", _Any) ->
    "edu.sd";

sd("info", _Any) ->
    "info.sd";

sd("gov", _Any) ->
    "gov.sd";

sd("org", _Any) ->
    "org.sd";

sd("med", _Any) ->
    "med.sd";

sd("net", _Any) ->
    "net.sd";


sd(_, _) ->
    "sd".

%% regular rules
online("eero", _Any) ->
    "eero.online";

online("barsy", _Any) ->
    "barsy.online";


online(_, _) ->
    "online".

%% regular rules
sa("med", _Any) ->
    "med.sa";

sa("org", _Any) ->
    "org.sa";

sa("sch", _Any) ->
    "sch.sa";

sa("net", _Any) ->
    "net.sa";

sa("gov", _Any) ->
    "gov.sa";

sa("pub", _Any) ->
    "pub.sa";

sa("com", _Any) ->
    "com.sa";

sa("edu", _Any) ->
    "edu.sa";


sa(_, _) ->
    "sa".

%% regular rules
io("resinstaging", []) ->
    "resinstaging.io";
io("resinstaging", Parts) ->
    [First | Rest] = Parts,
    resinstaging_io(First, Rest);

io("readthedocs", _Any) ->
    "readthedocs.io";

io("drud", _Any) ->
    "drud.io";

io("shiftedit", _Any) ->
    "shiftedit.io";

io("nid", _Any) ->
    "nid.io";

io("beagleboard", _Any) ->
    "beagleboard.io";

io("browsersafetymark", _Any) ->
    "browsersafetymark.io";

io("apigee", _Any) ->
    "apigee.io";

io("resindevice", _Any) ->
    "resindevice.io";

io("ghost", _Any) ->
    "ghost.io";

io("musician", _Any) ->
    "musician.io";

io("vaporcloud", _Any) ->
    "vaporcloud.io";

io("upli", _Any) ->
    "upli.io";

io("virtualserver", _Any) ->
    "virtualserver.io";

io("thingdust", []) ->
    "thingdust.io";
io("thingdust", Parts) ->
    [First | Rest] = Parts,
    thingdust_io(First, Rest);

io("dedyn", _Any) ->
    "dedyn.io";

io("pstmn", []) ->
    "pstmn.io";
io("pstmn", Parts) ->
    [First | Rest] = Parts,
    pstmn_io(First, Rest);

io("ngrok", []) ->
    "ngrok.io";
io("ngrok", Parts) ->
    [First | Rest] = Parts,
    ngrok_io(First, Rest);

io("bluebite", _Any) ->
    "bluebite.io";

io("qoto", _Any) ->
    "qoto.io";

io("forgerock", []) ->
    "forgerock.io";
io("forgerock", Parts) ->
    [First | Rest] = Parts,
    forgerock_io(First, Rest);

io("utwente", _Any) ->
    "utwente.io";

io("gitlab", _Any) ->
    "gitlab.io";

io("edugit", _Any) ->
    "edugit.io";

io("spacekit", _Any) ->
    "spacekit.io";

io("jele", _Any) ->
    "jele.io";

io("hostyhosting", _Any) ->
    "hostyhosting.io";

io("protonet", _Any) ->
    "protonet.io";

io("hzc", _Any) ->
    "hzc.io";

io("backplaneapp", _Any) ->
    "backplaneapp.io";

io("shiftcrypto", _Any) ->
    "shiftcrypto.io";

io("tickets", _Any) ->
    "tickets.io";

io("telebit", _Any) ->
    "telebit.io";

io("com", _Any) ->
    "com.io";

io("definima", _Any) ->
    "definima.io";

io("nodeart", []) ->
    "nodeart.io";
io("nodeart", Parts) ->
    [First | Rest] = Parts,
    nodeart_io(First, Rest);

io("webthings", _Any) ->
    "webthings.io";

io("beebyte", []) ->
    "beebyte.io";
io("beebyte", Parts) ->
    [First | Rest] = Parts,
    beebyte_io(First, Rest);

io("banzaicloud", []) ->
    "banzaicloud.io";
io("banzaicloud", Parts) ->
    [First | Rest] = Parts,
    banzaicloud_io(First, Rest);

io("lolipop", _Any) ->
    "lolipop.io";

io("basicserver", _Any) ->
    "basicserver.io";

io("qcx", _Any) ->
    "qcx.io";

io("dappnode", []) ->
    "dappnode.io";
io("dappnode", Parts) ->
    [First | Rest] = Parts,
    dappnode_io(First, Rest);

io("cleverapps", _Any) ->
    "cleverapps.io";

io("editorx", _Any) ->
    "editorx.io";

io("github", _Any) ->
    "github.io";

io("bitbucket", _Any) ->
    "bitbucket.io";

io("loginline", _Any) ->
    "loginline.io";

io("wedeploy", _Any) ->
    "wedeploy.io";

io("boxfuse", _Any) ->
    "boxfuse.io";

io("lair", []) ->
    "lair.io";
io("lair", Parts) ->
    [First | Rest] = Parts,
    lair_io(First, Rest);

io("pantheonsite", _Any) ->
    "pantheonsite.io";

io("wixstudio", _Any) ->
    "wixstudio.io";

io("sandcats", _Any) ->
    "sandcats.io";

io("barsy", _Any) ->
    "barsy.io";

io("vbrplsbx", []) ->
    "vbrplsbx.io";
io("vbrplsbx", Parts) ->
    [First | Rest] = Parts,
    vbrplsbx_io(First, Rest);

io("shw", _Any) ->
    "shw.io";


io(_, _) ->
    "io".

%% regular rules
resinstaging_io("devices", _Any) ->
    "devices.resinstaging.io";


resinstaging_io(_, _) ->
    "resinstaging.io".

%% regular rules
thingdust_io("testing", []) ->
    "testing.thingdust.io";
thingdust_io("testing", Parts) ->
    [First | Rest] = Parts,
    testing_thingdust_io(First, Rest);

thingdust_io("prod", []) ->
    "prod.thingdust.io";
thingdust_io("prod", Parts) ->
    [First | Rest] = Parts,
    prod_thingdust_io(First, Rest);

thingdust_io("disrec", []) ->
    "disrec.thingdust.io";
thingdust_io("disrec", Parts) ->
    [First | Rest] = Parts,
    disrec_thingdust_io(First, Rest);

thingdust_io("dev", []) ->
    "dev.thingdust.io";
thingdust_io("dev", Parts) ->
    [First | Rest] = Parts,
    dev_thingdust_io(First, Rest);


thingdust_io(_, _) ->
    "thingdust.io".

%% regular rules
testing_thingdust_io("reservd", _Any) ->
    "reservd.testing.thingdust.io";

testing_thingdust_io("cust", _Any) ->
    "cust.testing.thingdust.io";


testing_thingdust_io(_, _) ->
    "testing.thingdust.io".

%% regular rules
prod_thingdust_io("cust", _Any) ->
    "cust.prod.thingdust.io";


prod_thingdust_io(_, _) ->
    "prod.thingdust.io".

%% regular rules
disrec_thingdust_io("cust", _Any) ->
    "cust.disrec.thingdust.io";

disrec_thingdust_io("reservd", _Any) ->
    "reservd.disrec.thingdust.io";


disrec_thingdust_io(_, _) ->
    "disrec.thingdust.io".

%% regular rules
dev_thingdust_io("reservd", _Any) ->
    "reservd.dev.thingdust.io";

dev_thingdust_io("cust", _Any) ->
    "cust.dev.thingdust.io";


dev_thingdust_io(_, _) ->
    "dev.thingdust.io".

%% regular rules
pstmn_io("mock", _Any) ->
    "mock.pstmn.io";


pstmn_io(_, _) ->
    "pstmn.io".

%% regular rules
ngrok_io("au", _Any) ->
    "au.ngrok.io";

ngrok_io("ap", _Any) ->
    "ap.ngrok.io";

ngrok_io("sa", _Any) ->
    "sa.ngrok.io";

ngrok_io("in", _Any) ->
    "in.ngrok.io";

ngrok_io("eu", _Any) ->
    "eu.ngrok.io";

ngrok_io("jp", _Any) ->
    "jp.ngrok.io";

ngrok_io("us", _Any) ->
    "us.ngrok.io";


ngrok_io(_, _) ->
    "ngrok.io".

%% regular rules
forgerock_io("id", _Any) ->
    "id.forgerock.io";


forgerock_io(_, _) ->
    "forgerock.io".

%% regular rules
nodeart_io("stage", _Any) ->
    "stage.nodeart.io";


nodeart_io(_, _) ->
    "nodeart.io".

%% regular rules
beebyte_io("paas", _Any) ->
    "paas.beebyte.io";


beebyte_io(_, _) ->
    "beebyte.io".

%% regular rules
banzaicloud_io("app", _Any) ->
    "app.banzaicloud.io";


banzaicloud_io(_, _) ->
    "banzaicloud.io".

%% regular rules
dappnode_io("dyndns", _Any) ->
    "dyndns.dappnode.io";


dappnode_io(_, _) ->
    "dappnode.io".

%% regular rules
lair_io("apps", _Any) ->
    "apps.lair.io";


lair_io(_, _) ->
    "lair.io".

%% regular rules
vbrplsbx_io("g", _Any) ->
    "g.vbrplsbx.io";


vbrplsbx_io(_, _) ->
    "vbrplsbx.io".

%% regular rules
co("supabase", _Any) ->
    "supabase.co";

co("org", _Any) ->
    "org.co";

co("firewalledreplit", []) ->
    "firewalledreplit.co";
co("firewalledreplit", Parts) ->
    [First | Rest] = Parts,
    firewalledreplit_co(First, Rest);

co("lpages", _Any) ->
    "lpages.co";

co("rec", _Any) ->
    "rec.co";

co("arts", _Any) ->
    "arts.co";

co("crd", _Any) ->
    "crd.co";

co("firm", _Any) ->
    "firm.co";

co("carrd", _Any) ->
    "carrd.co";

co("mypi", _Any) ->
    "mypi.co";

co("gov", _Any) ->
    "gov.co";

co("nom", _Any) ->
    "nom.co";

co("leadpages", _Any) ->
    "leadpages.co";

co("int", _Any) ->
    "int.co";

co("net", _Any) ->
    "net.co";

co("mil", _Any) ->
    "mil.co";

co("repl", []) ->
    "repl.co";
co("repl", Parts) ->
    [First | Rest] = Parts,
    repl_co(First, Rest);

co("web", _Any) ->
    "web.co";

co("com", []) ->
    "com.co";
co("com", Parts) ->
    [First | Rest] = Parts,
    com_co(First, Rest);

co("edu", _Any) ->
    "edu.co";

co("info", _Any) ->
    "info.co";


co(_, _) ->
    "co".

%% regular rules
firewalledreplit_co("id", _Any) ->
    "id.firewalledreplit.co";


firewalledreplit_co(_, _) ->
    "firewalledreplit.co".

%% regular rules
repl_co("id", _Any) ->
    "id.repl.co";


repl_co(_, _) ->
    "repl.co".

%% regular rules
com_co("blogspot", _Any) ->
    "blogspot.com.co";


com_co(_, _) ->
    "com.co".

%% regular rules
ht("pol", _Any) ->
    "pol.ht";

ht("perso", _Any) ->
    "perso.ht";

ht("rel", _Any) ->
    "rel.ht";

ht("med", _Any) ->
    "med.ht";

ht("org", _Any) ->
    "org.ht";

ht("asso", _Any) ->
    "asso.ht";

ht("com", _Any) ->
    "com.ht";

ht("edu", _Any) ->
    "edu.ht";

ht("info", _Any) ->
    "info.ht";

ht("pro", _Any) ->
    "pro.ht";

ht("coop", _Any) ->
    "coop.ht";

ht("gouv", _Any) ->
    "gouv.ht";

ht("art", _Any) ->
    "art.ht";

ht("net", _Any) ->
    "net.ht";

ht("adult", _Any) ->
    "adult.ht";

ht("shop", _Any) ->
    "shop.ht";

ht("firm", _Any) ->
    "firm.ht";


ht(_, _) ->
    "ht".

%% regular rules
gl("edu", _Any) ->
    "edu.gl";

gl("com", _Any) ->
    "com.gl";

gl("co", _Any) ->
    "co.gl";

gl("org", _Any) ->
    "org.gl";

gl("xx", _Any) ->
    "xx.gl";

gl("net", _Any) ->
    "net.gl";

gl("biz", _Any) ->
    "biz.gl";


gl(_, _) ->
    "gl".

%% regular rules
one("service", _Any) ->
    "service.one";

one("onred", []) ->
    "onred.one";
one("onred", Parts) ->
    [First | Rest] = Parts,
    onred_one(First, Rest);

one("homelink", _Any) ->
    "homelink.one";


one(_, _) ->
    "one".

%% regular rules
onred_one("staging", _Any) ->
    "staging.onred.one";


onred_one(_, _) ->
    "onred.one".

%% regular rules
cw("edu", _Any) ->
    "edu.cw";

cw("net", _Any) ->
    "net.cw";

cw("com", _Any) ->
    "com.cw";

cw("org", _Any) ->
    "org.cw";


cw(_, _) ->
    "cw".

%% regular rules
sk("blogspot", _Any) ->
    "blogspot.sk";


sk(_, _) ->
    "sk".

%% regular rules
de("lebtimnetz", _Any) ->
    "lebtimnetz.de";

de("dnshome", _Any) ->
    "dnshome.de";

de("schulplattform", _Any) ->
    "schulplattform.de";

de("myspreadshop", _Any) ->
    "myspreadshop.de";

de("com", _Any) ->
    "com.de";

de("iservschule", _Any) ->
    "iservschule.de";

de("bplaced", _Any) ->
    "bplaced.de";

de("goip", _Any) ->
    "goip.de";

de("keymachine", _Any) ->
    "keymachine.de";

de("traeumtgerade", _Any) ->
    "traeumtgerade.de";

de("istmein", _Any) ->
    "istmein.de";

de("fuettertdasnetz", _Any) ->
    "fuettertdasnetz.de";

de("speedpartner", []) ->
    "speedpartner.de";
de("speedpartner", Parts) ->
    [First | Rest] = Parts,
    speedpartner_de(First, Rest);

de("diskussionsbereich", _Any) ->
    "diskussionsbereich.de";

de("ddnss", []) ->
    "ddnss.de";
de("ddnss", Parts) ->
    [First | Rest] = Parts,
    ddnss_de(First, Rest);

de("draydns", _Any) ->
    "draydns.de";

de("spdns", _Any) ->
    "spdns.de";

de("leitungsen", _Any) ->
    "leitungsen.de";

de("barsy", _Any) ->
    "barsy.de";

de("virtualuser", _Any) ->
    "virtualuser.de";

de("schulserver", _Any) ->
    "schulserver.de";

de("cosidns", []) ->
    "cosidns.de";
de("cosidns", Parts) ->
    [First | Rest] = Parts,
    cosidns_de(First, Rest);

de("dnsupdater", _Any) ->
    "dnsupdater.de";

de("isteingeek", _Any) ->
    "isteingeek.de";

de("dynvpn", _Any) ->
    "dynvpn.de";

de("logoip", _Any) ->
    "logoip.de";

de("blogspot", _Any) ->
    "blogspot.de";


de(_, _) ->
    "de".

%% regular rules
speedpartner_de("customer", _Any) ->
    "customer.speedpartner.de";


speedpartner_de(_, _) ->
    "speedpartner.de".

%% regular rules
ddnss_de("dyn", _Any) ->
    "dyn.ddnss.de";

ddnss_de("dyndns", _Any) ->
    "dyndns.ddnss.de";


ddnss_de(_, _) ->
    "ddnss.de".

%% regular rules
cosidns_de("dyn", _Any) ->
    "dyn.cosidns.de";


cosidns_de(_, _) ->
    "cosidns.de".

%% regular rules
farm("storj", _Any) ->
    "storj.farm";


farm(_, _) ->
    "farm".

%% regular rules
hk("org", _Any) ->
    "org.hk";

hk("ltd", _Any) ->
    "ltd.hk";

hk("inc", _Any) ->
    "inc.hk";

hk("net", _Any) ->
    "net.hk";

hk("gov", _Any) ->
    "gov.hk";

hk("com", _Any) ->
    "com.hk";

hk("edu", _Any) ->
    "edu.hk";

hk("secaas", _Any) ->
    "secaas.hk";

hk("idv", _Any) ->
    "idv.hk";

hk("blogspot", _Any) ->
    "blogspot.hk";


hk(_, _) ->
    "hk".

%% regular rules
info("mayfirst", _Any) ->
    "mayfirst.info";

info("dvrcam", _Any) ->
    "dvrcam.info";

info("barsy", _Any) ->
    "barsy.info";

info("webhop", _Any) ->
    "webhop.info";

info("forumz", _Any) ->
    "forumz.info";

info("cloudns", _Any) ->
    "cloudns.info";

info("selfip", _Any) ->
    "selfip.info";

info("knowsitall", _Any) ->
    "knowsitall.info";

info("nsupdate", _Any) ->
    "nsupdate.info";

info("ilovecollege", _Any) ->
    "ilovecollege.info";

info("dyndns", _Any) ->
    "dyndns.info";

info("dnsupdate", _Any) ->
    "dnsupdate.info";


info(_, _) ->
    "info".

%% regular rules
ag("net", _Any) ->
    "net.ag";

ag("nom", _Any) ->
    "nom.ag";

ag("com", _Any) ->
    "com.ag";

ag("org", _Any) ->
    "org.ag";

ag("co", _Any) ->
    "co.ag";


ag(_, _) ->
    "ag".

%% regular rules
ml("gov", _Any) ->
    "gov.ml";

ml("gouv", _Any) ->
    "gouv.ml";

ml("net", _Any) ->
    "net.ml";

ml("org", _Any) ->
    "org.ml";

ml("presse", _Any) ->
    "presse.ml";

ml("com", _Any) ->
    "com.ml";

ml("edu", _Any) ->
    "edu.ml";


ml(_, _) ->
    "ml".

%% regular rules
vn("bacninh", _Any) ->
    "bacninh.vn";

vn("thainguyen", _Any) ->
    "thainguyen.vn";

vn("angiang", _Any) ->
    "angiang.vn";

vn("hagiang", _Any) ->
    "hagiang.vn";

vn("blogspot", _Any) ->
    "blogspot.vn";

vn("kontum", _Any) ->
    "kontum.vn";

vn("io", _Any) ->
    "io.vn";

vn("health", _Any) ->
    "health.vn";

vn("hanam", _Any) ->
    "hanam.vn";

vn("id", _Any) ->
    "id.vn";

vn("baclieu", _Any) ->
    "baclieu.vn";

vn("hatinh", _Any) ->
    "hatinh.vn";

vn("tayninh", _Any) ->
    "tayninh.vn";

vn("binhduong", _Any) ->
    "binhduong.vn";

vn("binhphuoc", _Any) ->
    "binhphuoc.vn";

vn("thaibinh", _Any) ->
    "thaibinh.vn";

vn("haiphong", _Any) ->
    "haiphong.vn";

vn("biz", _Any) ->
    "biz.vn";

vn("backan", _Any) ->
    "backan.vn";

vn("quangbinh", _Any) ->
    "quangbinh.vn";

vn("thuathienhue", _Any) ->
    "thuathienhue.vn";

vn("lamdong", _Any) ->
    "lamdong.vn";

vn("yenbai", _Any) ->
    "yenbai.vn";

vn("haugiang", _Any) ->
    "haugiang.vn";

vn("binhthuan", _Any) ->
    "binhthuan.vn";

vn("daknong", _Any) ->
    "daknong.vn";

vn("bentre", _Any) ->
    "bentre.vn";

vn("thanhphohochiminh", _Any) ->
    "thanhphohochiminh.vn";

vn("gov", _Any) ->
    "gov.vn";

vn("danang", _Any) ->
    "danang.vn";

vn("net", _Any) ->
    "net.vn";

vn("laichau", _Any) ->
    "laichau.vn";

vn("quangtri", _Any) ->
    "quangtri.vn";

vn("ninhbinh", _Any) ->
    "ninhbinh.vn";

vn("namdinh", _Any) ->
    "namdinh.vn";

vn("quangngai", _Any) ->
    "quangngai.vn";

vn("pro", _Any) ->
    "pro.vn";

vn("nghean", _Any) ->
    "nghean.vn";

vn("tuyenquang", _Any) ->
    "tuyenquang.vn";

vn("vinhlong", _Any) ->
    "vinhlong.vn";

vn("cantho", _Any) ->
    "cantho.vn";

vn("ninhthuan", _Any) ->
    "ninhthuan.vn";

vn("dienbien", _Any) ->
    "dienbien.vn";

vn("laocai", _Any) ->
    "laocai.vn";

vn("camau", _Any) ->
    "camau.vn";

vn("travinh", _Any) ->
    "travinh.vn";

vn("phuyen", _Any) ->
    "phuyen.vn";

vn("int", _Any) ->
    "int.vn";

vn("khanhhoa", _Any) ->
    "khanhhoa.vn";

vn("longan", _Any) ->
    "longan.vn";

vn("hanoi", _Any) ->
    "hanoi.vn";

vn("info", _Any) ->
    "info.vn";

vn("edu", _Any) ->
    "edu.vn";

vn("hungyen", _Any) ->
    "hungyen.vn";

vn("dongthap", _Any) ->
    "dongthap.vn";

vn("tiengiang", _Any) ->
    "tiengiang.vn";

vn("thanhhoa", _Any) ->
    "thanhhoa.vn";

vn("name", _Any) ->
    "name.vn";

vn("hoabinh", _Any) ->
    "hoabinh.vn";

vn("kiengiang", _Any) ->
    "kiengiang.vn";

vn("org", _Any) ->
    "org.vn";

vn("gialai", _Any) ->
    "gialai.vn";

vn("vinhphuc", _Any) ->
    "vinhphuc.vn";

vn("phutho", _Any) ->
    "phutho.vn";

vn("langson", _Any) ->
    "langson.vn";

vn("dongnai", _Any) ->
    "dongnai.vn";

vn("quangninh", _Any) ->
    "quangninh.vn";

vn("caobang", _Any) ->
    "caobang.vn";

vn("binhdinh", _Any) ->
    "binhdinh.vn";

vn("ac", _Any) ->
    "ac.vn";

vn("sonla", _Any) ->
    "sonla.vn";

vn("ai", _Any) ->
    "ai.vn";

vn("soctrang", _Any) ->
    "soctrang.vn";

vn("bacgiang", _Any) ->
    "bacgiang.vn";

vn("daklak", _Any) ->
    "daklak.vn";

vn("com", _Any) ->
    "com.vn";

vn("quangnam", _Any) ->
    "quangnam.vn";

vn("haiduong", _Any) ->
    "haiduong.vn";


vn(_, _) ->
    "vn".

%% regular rules
tv("sakura", _Any) ->
    "sakura.tv";

tv("dyndns", _Any) ->
    "dyndns.tv";

tv("from", _Any) ->
    "from.tv";


tv(_, _) ->
    "tv".

%% regular rules
gdn("cnpy", _Any) ->
    "cnpy.gdn";


gdn(_, _) ->
    "gdn".

%% regular rules
es("gob", _Any) ->
    "gob.es";

es("org", _Any) ->
    "org.es";

es("edu", _Any) ->
    "edu.es";

es("nom", _Any) ->
    "nom.es";

es("com", []) ->
    "com.es";
es("com", Parts) ->
    [First | Rest] = Parts,
    com_es(First, Rest);

es("myspreadshop", _Any) ->
    "myspreadshop.es";


es(_, _) ->
    "es".

%% regular rules
com_es("blogspot", _Any) ->
    "blogspot.com.es";


com_es(_, _) ->
    "com.es".

%% regular rules
uy("edu", _Any) ->
    "edu.uy";

uy("net", _Any) ->
    "net.uy";

uy("com", []) ->
    "com.uy";
uy("com", Parts) ->
    [First | Rest] = Parts,
    com_uy(First, Rest);

uy("org", _Any) ->
    "org.uy";

uy("gub", _Any) ->
    "gub.uy";

uy("mil", _Any) ->
    "mil.uy";


uy(_, _) ->
    "uy".

%% regular rules
com_uy("blogspot", _Any) ->
    "blogspot.com.uy";


com_uy(_, _) ->
    "com.uy".

%% regular rules
lb("gov", _Any) ->
    "gov.lb";

lb("com", _Any) ->
    "com.lb";

lb("net", _Any) ->
    "net.lb";

lb("edu", _Any) ->
    "edu.lb";

lb("org", _Any) ->
    "org.lb";


lb(_, _) ->
    "lb".

%% regular rules
mp("ju", _Any) ->
    "ju.mp";


mp(_, _) ->
    "mp".

%% regular rules
cf("blogspot", _Any) ->
    "blogspot.cf";


cf(_, _) ->
    "cf".

%% regular rules
faith("ybo", _Any) ->
    "ybo.faith";


faith(_, _) ->
    "faith".

%% regular rules
management("router", _Any) ->
    "router.management";


management(_, _) ->
    "management".

%% regular rules
kw("ind", _Any) ->
    "ind.kw";

kw("edu", _Any) ->
    "edu.kw";

kw("com", _Any) ->
    "com.kw";

kw("emb", _Any) ->
    "emb.kw";

kw("org", _Any) ->
    "org.kw";

kw("net", _Any) ->
    "net.kw";

kw("gov", _Any) ->
    "gov.kw";


kw(_, _) ->
    "kw".

%% regular rules
il("idf", _Any) ->
    "idf.il";

il("ac", _Any) ->
    "ac.il";

il("gov", _Any) ->
    "gov.il";

il("co", []) ->
    "co.il";
il("co", Parts) ->
    [First | Rest] = Parts,
    co_il(First, Rest);

il("net", _Any) ->
    "net.il";

il("org", _Any) ->
    "org.il";

il("muni", _Any) ->
    "muni.il";


il(_, _) ->
    "il".

%% regular rules
co_il("blogspot", _Any) ->
    "blogspot.co.il";

co_il("mytabit", _Any) ->
    "mytabit.co.il";

co_il("tabitorder", _Any) ->
    "tabitorder.co.il";

co_il("ravpage", _Any) ->
    "ravpage.co.il";


co_il(_, _) ->
    "co.il".

%% regular rules
cl("gob", _Any) ->
    "gob.cl";

cl("blogspot", _Any) ->
    "blogspot.cl";

cl("co", _Any) ->
    "co.cl";

cl("gov", _Any) ->
    "gov.cl";

cl("mil", _Any) ->
    "mil.cl";


cl(_, _) ->
    "cl".

%% regular rules
vc("org", _Any) ->
    "org.vc";

vc("net", _Any) ->
    "net.vc";

vc("gv", []) ->
    "gv.vc";
vc("gv", Parts) ->
    [First | Rest] = Parts,
    gv_vc(First, Rest);

vc("gov", _Any) ->
    "gov.vc";

vc("edu", _Any) ->
    "edu.vc";

vc("com", _Any) ->
    "com.vc";

vc("mil", _Any) ->
    "mil.vc";


vc(_, _) ->
    "vc".

%% regular rules
gv_vc("d", _Any) ->
    "d.gv.vc";


gv_vc(_, _) ->
    "gv.vc".

%% regular rules
place("co", _Any) ->
    "co.place";


place(_, _) ->
    "place".

%% regular rules
top("ntdll", _Any) ->
    "ntdll.top";


top(_, _) ->
    "top".

%% regular rules
gp("asso", _Any) ->
    "asso.gp";

gp("com", _Any) ->
    "com.gp";

gp("edu", _Any) ->
    "edu.gp";

gp("net", _Any) ->
    "net.gp";

gp("mobi", _Any) ->
    "mobi.gp";

gp("org", _Any) ->
    "org.gp";

gp("app", _Any) ->
    "app.gp";


gp(_, _) ->
    "gp".

%% regular rules
su("kalmykia", _Any) ->
    "kalmykia.su";

su("vladikavkaz", _Any) ->
    "vladikavkaz.su";

su("exnet", _Any) ->
    "exnet.su";

su("bashkiria", _Any) ->
    "bashkiria.su";

su("tula", _Any) ->
    "tula.su";

su("aktyubinsk", _Any) ->
    "aktyubinsk.su";

su("troitsk", _Any) ->
    "troitsk.su";

su("nov", _Any) ->
    "nov.su";

su("ashgabad", _Any) ->
    "ashgabad.su";

su("karaganda", _Any) ->
    "karaganda.su";

su("bryansk", _Any) ->
    "bryansk.su";

su("azerbaijan", _Any) ->
    "azerbaijan.su";

su("navoi", _Any) ->
    "navoi.su";

su("sochi", _Any) ->
    "sochi.su";

su("nalchik", _Any) ->
    "nalchik.su";

su("kaluga", _Any) ->
    "kaluga.su";

su("termez", _Any) ->
    "termez.su";

su("mordovia", _Any) ->
    "mordovia.su";

su("adygeya", _Any) ->
    "adygeya.su";

su("balashov", _Any) ->
    "balashov.su";

su("dagestan", _Any) ->
    "dagestan.su";

su("pokrovsk", _Any) ->
    "pokrovsk.su";

su("bukhara", _Any) ->
    "bukhara.su";

su("kustanai", _Any) ->
    "kustanai.su";

su("abkhazia", _Any) ->
    "abkhazia.su";

su("kurgan", _Any) ->
    "kurgan.su";

su("georgia", _Any) ->
    "georgia.su";

su("karacol", _Any) ->
    "karacol.su";

su("spb", _Any) ->
    "spb.su";

su("vologda", _Any) ->
    "vologda.su";

su("tselinograd", _Any) ->
    "tselinograd.su";

su("chimkent", _Any) ->
    "chimkent.su";

su("grozny", _Any) ->
    "grozny.su";

su("jambyl", _Any) ->
    "jambyl.su";

su("ivanovo", _Any) ->
    "ivanovo.su";

su("karelia", _Any) ->
    "karelia.su";

su("obninsk", _Any) ->
    "obninsk.su";

su("tuva", _Any) ->
    "tuva.su";

su("khakassia", _Any) ->
    "khakassia.su";

su("krasnodar", _Any) ->
    "krasnodar.su";

su("arkhangelsk", _Any) ->
    "arkhangelsk.su";

su("mangyshlak", _Any) ->
    "mangyshlak.su";

su("armenia", _Any) ->
    "armenia.su";

su("tashkent", _Any) ->
    "tashkent.su";

su("murmansk", _Any) ->
    "murmansk.su";

su("penza", _Any) ->
    "penza.su";

su("vladimir", _Any) ->
    "vladimir.su";

su("msk", _Any) ->
    "msk.su";

su("lenug", _Any) ->
    "lenug.su";

su("togliatti", _Any) ->
    "togliatti.su";


su(_, _) ->
    "su".

%% regular rules
ae("mil", _Any) ->
    "mil.ae";

ae("blogspot", _Any) ->
    "blogspot.ae";

ae("ac", _Any) ->
    "ac.ae";

ae("co", _Any) ->
    "co.ae";

ae("gov", _Any) ->
    "gov.ae";

ae("org", _Any) ->
    "org.ae";

ae("sch", _Any) ->
    "sch.ae";

ae("net", _Any) ->
    "net.ae";


ae(_, _) ->
    "ae".

%% regular rules
hu("ingatlan", _Any) ->
    "ingatlan.hu";

hu("utazas", _Any) ->
    "utazas.hu";

hu("forum", _Any) ->
    "forum.hu";

hu("tozsde", _Any) ->
    "tozsde.hu";

hu("org", _Any) ->
    "org.hu";

hu("city", _Any) ->
    "city.hu";

hu("media", _Any) ->
    "media.hu";

hu("film", _Any) ->
    "film.hu";

hu("shop", _Any) ->
    "shop.hu";

hu("reklam", _Any) ->
    "reklam.hu";

hu("tm", _Any) ->
    "tm.hu";

hu("suli", _Any) ->
    "suli.hu";

hu("hotel", _Any) ->
    "hotel.hu";

hu("casino", _Any) ->
    "casino.hu";

hu("blogspot", _Any) ->
    "blogspot.hu";

hu("sex", _Any) ->
    "sex.hu";

hu("erotica", _Any) ->
    "erotica.hu";

hu("news", _Any) ->
    "news.hu";

hu("konyvelo", _Any) ->
    "konyvelo.hu";

hu("bolt", _Any) ->
    "bolt.hu";

hu("games", _Any) ->
    "games.hu";

hu("info", _Any) ->
    "info.hu";

hu("erotika", _Any) ->
    "erotika.hu";

hu("agrar", _Any) ->
    "agrar.hu";

hu("sport", _Any) ->
    "sport.hu";

hu("szex", _Any) ->
    "szex.hu";

hu("priv", _Any) ->
    "priv.hu";

hu("jogasz", _Any) ->
    "jogasz.hu";

hu("co", _Any) ->
    "co.hu";

hu("video", _Any) ->
    "video.hu";

hu("lakas", _Any) ->
    "lakas.hu";


hu(_, _) ->
    "hu".

%% regular rules
us("cloudns", _Any) ->
    "cloudns.us";

us("mt", []) ->
    "mt.us";
us("mt", Parts) ->
    [First | Rest] = Parts,
    mt_us(First, Rest);

us("nv", []) ->
    "nv.us";
us("nv", Parts) ->
    [First | Rest] = Parts,
    nv_us(First, Rest);

us("md", []) ->
    "md.us";
us("md", Parts) ->
    [First | Rest] = Parts,
    md_us(First, Rest);

us("gu", []) ->
    "gu.us";
us("gu", Parts) ->
    [First | Rest] = Parts,
    gu_us(First, Rest);

us("ma", []) ->
    "ma.us";
us("ma", Parts) ->
    [First | Rest] = Parts,
    ma_us(First, Rest);

us("tx", []) ->
    "tx.us";
us("tx", Parts) ->
    [First | Rest] = Parts,
    tx_us(First, Rest);

us("mo", []) ->
    "mo.us";
us("mo", Parts) ->
    [First | Rest] = Parts,
    mo_us(First, Rest);

us("nm", []) ->
    "nm.us";
us("nm", Parts) ->
    [First | Rest] = Parts,
    nm_us(First, Rest);

us("noip", _Any) ->
    "noip.us";

us("mn", []) ->
    "mn.us";
us("mn", Parts) ->
    [First | Rest] = Parts,
    mn_us(First, Rest);

us("sc", []) ->
    "sc.us";
us("sc", Parts) ->
    [First | Rest] = Parts,
    sc_us(First, Rest);

us("as", []) ->
    "as.us";
us("as", Parts) ->
    [First | Rest] = Parts,
    as_us(First, Rest);

us("ny", []) ->
    "ny.us";
us("ny", Parts) ->
    [First | Rest] = Parts,
    ny_us(First, Rest);

us("ks", []) ->
    "ks.us";
us("ks", Parts) ->
    [First | Rest] = Parts,
    ks_us(First, Rest);

us("hi", []) ->
    "hi.us";
us("hi", Parts) ->
    [First | Rest] = Parts,
    hi_us(First, Rest);

us("ne", []) ->
    "ne.us";
us("ne", Parts) ->
    [First | Rest] = Parts,
    ne_us(First, Rest);

us("nc", []) ->
    "nc.us";
us("nc", Parts) ->
    [First | Rest] = Parts,
    nc_us(First, Rest);

us("enscaled", []) ->
    "enscaled.us";
us("enscaled", Parts) ->
    [First | Rest] = Parts,
    enscaled_us(First, Rest);

us("vt", []) ->
    "vt.us";
us("vt", Parts) ->
    [First | Rest] = Parts,
    vt_us(First, Rest);

us("nj", []) ->
    "nj.us";
us("nj", Parts) ->
    [First | Rest] = Parts,
    nj_us(First, Rest);

us("va", []) ->
    "va.us";
us("va", Parts) ->
    [First | Rest] = Parts,
    va_us(First, Rest);

us("mircloud", _Any) ->
    "mircloud.us";

us("dni", _Any) ->
    "dni.us";

us("ri", []) ->
    "ri.us";
us("ri", Parts) ->
    [First | Rest] = Parts,
    ri_us(First, Rest);

us("ky", []) ->
    "ky.us";
us("ky", Parts) ->
    [First | Rest] = Parts,
    ky_us(First, Rest);

us("wa", []) ->
    "wa.us";
us("wa", Parts) ->
    [First | Rest] = Parts,
    wa_us(First, Rest);

us("isa", _Any) ->
    "isa.us";

us("tn", []) ->
    "tn.us";
us("tn", Parts) ->
    [First | Rest] = Parts,
    tn_us(First, Rest);

us("wi", []) ->
    "wi.us";
us("wi", Parts) ->
    [First | Rest] = Parts,
    wi_us(First, Rest);

us("me", []) ->
    "me.us";
us("me", Parts) ->
    [First | Rest] = Parts,
    me_us(First, Rest);

us("de", []) ->
    "de.us";
us("de", Parts) ->
    [First | Rest] = Parts,
    de_us(First, Rest);

us("pointto", _Any) ->
    "pointto.us";

us("ak", []) ->
    "ak.us";
us("ak", Parts) ->
    [First | Rest] = Parts,
    ak_us(First, Rest);

us("drud", _Any) ->
    "drud.us";

us("ga", []) ->
    "ga.us";
us("ga", Parts) ->
    [First | Rest] = Parts,
    ga_us(First, Rest);

us("ut", []) ->
    "ut.us";
us("ut", Parts) ->
    [First | Rest] = Parts,
    ut_us(First, Rest);

us("al", []) ->
    "al.us";
us("al", Parts) ->
    [First | Rest] = Parts,
    al_us(First, Rest);

us("az", []) ->
    "az.us";
us("az", Parts) ->
    [First | Rest] = Parts,
    az_us(First, Rest);

us("platterp", _Any) ->
    "platterp.us";

us("vi", []) ->
    "vi.us";
us("vi", Parts) ->
    [First | Rest] = Parts,
    vi_us(First, Rest);

us("freeddns", _Any) ->
    "freeddns.us";

us("ok", []) ->
    "ok.us";
us("ok", Parts) ->
    [First | Rest] = Parts,
    ok_us(First, Rest);

us("oh", []) ->
    "oh.us";
us("oh", Parts) ->
    [First | Rest] = Parts,
    oh_us(First, Rest);

us("la", []) ->
    "la.us";
us("la", Parts) ->
    [First | Rest] = Parts,
    la_us(First, Rest);

us("nd", []) ->
    "nd.us";
us("nd", Parts) ->
    [First | Rest] = Parts,
    nd_us(First, Rest);

us("il", []) ->
    "il.us";
us("il", Parts) ->
    [First | Rest] = Parts,
    il_us(First, Rest);

us("pa", []) ->
    "pa.us";
us("pa", Parts) ->
    [First | Rest] = Parts,
    pa_us(First, Rest);

us("or", []) ->
    "or.us";
us("or", Parts) ->
    [First | Rest] = Parts,
    or_us(First, Rest);

us("nsn", _Any) ->
    "nsn.us";

us("ms", []) ->
    "ms.us";
us("ms", Parts) ->
    [First | Rest] = Parts,
    ms_us(First, Rest);

us("wv", []) ->
    "wv.us";
us("wv", Parts) ->
    [First | Rest] = Parts,
    wv_us(First, Rest);

us("golffan", _Any) ->
    "golffan.us";

us("graphox", _Any) ->
    "graphox.us";

us("nh", []) ->
    "nh.us";
us("nh", Parts) ->
    [First | Rest] = Parts,
    nh_us(First, Rest);

us("sd", []) ->
    "sd.us";
us("sd", Parts) ->
    [First | Rest] = Parts,
    sd_us(First, Rest);

us("mi", []) ->
    "mi.us";
us("mi", Parts) ->
    [First | Rest] = Parts,
    mi_us(First, Rest);

us("id", []) ->
    "id.us";
us("id", Parts) ->
    [First | Rest] = Parts,
    id_us(First, Rest);

us("pr", []) ->
    "pr.us";
us("pr", Parts) ->
    [First | Rest] = Parts,
    pr_us(First, Rest);

us("kids", _Any) ->
    "kids.us";

us("ct", []) ->
    "ct.us";
us("ct", Parts) ->
    [First | Rest] = Parts,
    ct_us(First, Rest);

us("co", []) ->
    "co.us";
us("co", Parts) ->
    [First | Rest] = Parts,
    co_us(First, Rest);

us("fed", _Any) ->
    "fed.us";

us("ca", []) ->
    "ca.us";
us("ca", Parts) ->
    [First | Rest] = Parts,
    ca_us(First, Rest);

us("ia", []) ->
    "ia.us";
us("ia", Parts) ->
    [First | Rest] = Parts,
    ia_us(First, Rest);

us("fl", []) ->
    "fl.us";
us("fl", Parts) ->
    [First | Rest] = Parts,
    fl_us(First, Rest);

us("dc", []) ->
    "dc.us";
us("dc", Parts) ->
    [First | Rest] = Parts,
    dc_us(First, Rest);

us("ar", []) ->
    "ar.us";
us("ar", Parts) ->
    [First | Rest] = Parts,
    ar_us(First, Rest);

us("in", []) ->
    "in.us";
us("in", Parts) ->
    [First | Rest] = Parts,
    in_us(First, Rest);

us("wy", []) ->
    "wy.us";
us("wy", Parts) ->
    [First | Rest] = Parts,
    wy_us(First, Rest);


us(_, _) ->
    "us".

%% regular rules
mt_us("cc", _Any) ->
    "cc.mt.us";

mt_us("lib", _Any) ->
    "lib.mt.us";


mt_us(_, _) ->
    "mt.us".

%% regular rules
nv_us("cc", _Any) ->
    "cc.nv.us";

nv_us("lib", _Any) ->
    "lib.nv.us";


nv_us(_, _) ->
    "nv.us".

%% regular rules
md_us("lib", _Any) ->
    "lib.md.us";

md_us("cc", _Any) ->
    "cc.md.us";


md_us(_, _) ->
    "md.us".

%% regular rules
gu_us("cc", _Any) ->
    "cc.gu.us";

gu_us("lib", _Any) ->
    "lib.gu.us";


gu_us(_, _) ->
    "gu.us".

%% regular rules
ma_us("lib", _Any) ->
    "lib.ma.us";

ma_us("cc", _Any) ->
    "cc.ma.us";


ma_us(_, _) ->
    "ma.us".

%% regular rules
tx_us("lib", _Any) ->
    "lib.tx.us";

tx_us("cc", _Any) ->
    "cc.tx.us";


tx_us(_, _) ->
    "tx.us".

%% regular rules
mo_us("cc", _Any) ->
    "cc.mo.us";

mo_us("lib", _Any) ->
    "lib.mo.us";


mo_us(_, _) ->
    "mo.us".

%% regular rules
nm_us("lib", _Any) ->
    "lib.nm.us";

nm_us("cc", _Any) ->
    "cc.nm.us";


nm_us(_, _) ->
    "nm.us".

%% regular rules
mn_us("lib", _Any) ->
    "lib.mn.us";

mn_us("cc", _Any) ->
    "cc.mn.us";


mn_us(_, _) ->
    "mn.us".

%% regular rules
sc_us("cc", _Any) ->
    "cc.sc.us";

sc_us("lib", _Any) ->
    "lib.sc.us";


sc_us(_, _) ->
    "sc.us".

%% regular rules
as_us("lib", _Any) ->
    "lib.as.us";

as_us("cc", _Any) ->
    "cc.as.us";


as_us(_, _) ->
    "as.us".

%% regular rules
ny_us("lib", _Any) ->
    "lib.ny.us";

ny_us("cc", _Any) ->
    "cc.ny.us";


ny_us(_, _) ->
    "ny.us".

%% regular rules
ks_us("cc", _Any) ->
    "cc.ks.us";

ks_us("lib", _Any) ->
    "lib.ks.us";


ks_us(_, _) ->
    "ks.us".

%% regular rules
hi_us("lib", _Any) ->
    "lib.hi.us";

hi_us("cc", _Any) ->
    "cc.hi.us";


hi_us(_, _) ->
    "hi.us".

%% regular rules
ne_us("cc", _Any) ->
    "cc.ne.us";

ne_us("lib", _Any) ->
    "lib.ne.us";


ne_us(_, _) ->
    "ne.us".

%% regular rules
nc_us("lib", _Any) ->
    "lib.nc.us";

nc_us("cc", _Any) ->
    "cc.nc.us";


nc_us(_, _) ->
    "nc.us".

%% regular rules
enscaled_us("phx", _Any) ->
    "phx.enscaled.us";


enscaled_us(_, _) ->
    "enscaled.us".

%% regular rules
vt_us("cc", _Any) ->
    "cc.vt.us";

vt_us("lib", _Any) ->
    "lib.vt.us";


vt_us(_, _) ->
    "vt.us".

%% regular rules
nj_us("lib", _Any) ->
    "lib.nj.us";

nj_us("cc", _Any) ->
    "cc.nj.us";


nj_us(_, _) ->
    "nj.us".

%% regular rules
va_us("lib", _Any) ->
    "lib.va.us";

va_us("cc", _Any) ->
    "cc.va.us";


va_us(_, _) ->
    "va.us".

%% regular rules
ri_us("lib", _Any) ->
    "lib.ri.us";

ri_us("cc", _Any) ->
    "cc.ri.us";


ri_us(_, _) ->
    "ri.us".

%% regular rules
ky_us("cc", _Any) ->
    "cc.ky.us";

ky_us("lib", _Any) ->
    "lib.ky.us";


ky_us(_, _) ->
    "ky.us".

%% regular rules
wa_us("cc", _Any) ->
    "cc.wa.us";

wa_us("lib", _Any) ->
    "lib.wa.us";


wa_us(_, _) ->
    "wa.us".

%% regular rules
tn_us("lib", _Any) ->
    "lib.tn.us";

tn_us("cc", _Any) ->
    "cc.tn.us";


tn_us(_, _) ->
    "tn.us".

%% regular rules
wi_us("cc", _Any) ->
    "cc.wi.us";

wi_us("lib", _Any) ->
    "lib.wi.us";


wi_us(_, _) ->
    "wi.us".

%% regular rules
me_us("lib", _Any) ->
    "lib.me.us";

me_us("cc", _Any) ->
    "cc.me.us";


me_us(_, _) ->
    "me.us".

%% regular rules
de_us("lib", _Any) ->
    "lib.de.us";

de_us("cc", _Any) ->
    "cc.de.us";


de_us(_, _) ->
    "de.us".

%% regular rules
ak_us("lib", _Any) ->
    "lib.ak.us";

ak_us("cc", _Any) ->
    "cc.ak.us";


ak_us(_, _) ->
    "ak.us".

%% regular rules
ga_us("cc", _Any) ->
    "cc.ga.us";

ga_us("lib", _Any) ->
    "lib.ga.us";


ga_us(_, _) ->
    "ga.us".

%% regular rules
ut_us("cc", _Any) ->
    "cc.ut.us";

ut_us("lib", _Any) ->
    "lib.ut.us";


ut_us(_, _) ->
    "ut.us".

%% regular rules
al_us("lib", _Any) ->
    "lib.al.us";

al_us("cc", _Any) ->
    "cc.al.us";


al_us(_, _) ->
    "al.us".

%% regular rules
az_us("lib", _Any) ->
    "lib.az.us";

az_us("cc", _Any) ->
    "cc.az.us";


az_us(_, _) ->
    "az.us".

%% regular rules
vi_us("cc", _Any) ->
    "cc.vi.us";

vi_us("lib", _Any) ->
    "lib.vi.us";


vi_us(_, _) ->
    "vi.us".

%% regular rules
ok_us("cc", _Any) ->
    "cc.ok.us";

ok_us("lib", _Any) ->
    "lib.ok.us";


ok_us(_, _) ->
    "ok.us".

%% regular rules
oh_us("cc", _Any) ->
    "cc.oh.us";

oh_us("lib", _Any) ->
    "lib.oh.us";


oh_us(_, _) ->
    "oh.us".

%% regular rules
la_us("lib", _Any) ->
    "lib.la.us";

la_us("cc", _Any) ->
    "cc.la.us";


la_us(_, _) ->
    "la.us".

%% regular rules
nd_us("cc", _Any) ->
    "cc.nd.us";

nd_us("lib", _Any) ->
    "lib.nd.us";


nd_us(_, _) ->
    "nd.us".

%% regular rules
il_us("lib", _Any) ->
    "lib.il.us";

il_us("cc", _Any) ->
    "cc.il.us";


il_us(_, _) ->
    "il.us".

%% regular rules
pa_us("cc", _Any) ->
    "cc.pa.us";

pa_us("lib", _Any) ->
    "lib.pa.us";


pa_us(_, _) ->
    "pa.us".

%% regular rules
or_us("cc", _Any) ->
    "cc.or.us";

or_us("lib", _Any) ->
    "lib.or.us";


or_us(_, _) ->
    "or.us".

%% regular rules
ms_us("cc", _Any) ->
    "cc.ms.us";

ms_us("lib", _Any) ->
    "lib.ms.us";


ms_us(_, _) ->
    "ms.us".

%% regular rules
wv_us("cc", _Any) ->
    "cc.wv.us";


wv_us(_, _) ->
    "wv.us".

%% regular rules
nh_us("lib", _Any) ->
    "lib.nh.us";

nh_us("cc", _Any) ->
    "cc.nh.us";


nh_us(_, _) ->
    "nh.us".

%% regular rules
sd_us("cc", _Any) ->
    "cc.sd.us";

sd_us("lib", _Any) ->
    "lib.sd.us";


sd_us(_, _) ->
    "sd.us".

%% regular rules
mi_us("cc", _Any) ->
    "cc.mi.us";

mi_us("tec", _Any) ->
    "tec.mi.us";

mi_us("gen", _Any) ->
    "gen.mi.us";

mi_us("dst", _Any) ->
    "dst.mi.us";

mi_us("eaton", _Any) ->
    "eaton.mi.us";

mi_us("lib", _Any) ->
    "lib.mi.us";

mi_us("cog", _Any) ->
    "cog.mi.us";

mi_us("mus", _Any) ->
    "mus.mi.us";

mi_us("washtenaw", _Any) ->
    "washtenaw.mi.us";


mi_us(_, _) ->
    "mi.us".

%% regular rules
id_us("cc", _Any) ->
    "cc.id.us";

id_us("lib", _Any) ->
    "lib.id.us";


id_us(_, _) ->
    "id.us".

%% regular rules
pr_us("cc", _Any) ->
    "cc.pr.us";

pr_us("lib", _Any) ->
    "lib.pr.us";


pr_us(_, _) ->
    "pr.us".

%% regular rules
ct_us("lib", _Any) ->
    "lib.ct.us";

ct_us("cc", _Any) ->
    "cc.ct.us";


ct_us(_, _) ->
    "ct.us".

%% regular rules
co_us("lib", _Any) ->
    "lib.co.us";

co_us("cc", _Any) ->
    "cc.co.us";


co_us(_, _) ->
    "co.us".

%% regular rules
ca_us("cc", _Any) ->
    "cc.ca.us";

ca_us("lib", _Any) ->
    "lib.ca.us";


ca_us(_, _) ->
    "ca.us".

%% regular rules
ia_us("lib", _Any) ->
    "lib.ia.us";

ia_us("cc", _Any) ->
    "cc.ia.us";


ia_us(_, _) ->
    "ia.us".

%% regular rules
fl_us("lib", _Any) ->
    "lib.fl.us";

fl_us("cc", _Any) ->
    "cc.fl.us";


fl_us(_, _) ->
    "fl.us".

%% regular rules
dc_us("cc", _Any) ->
    "cc.dc.us";

dc_us("lib", _Any) ->
    "lib.dc.us";


dc_us(_, _) ->
    "dc.us".

%% regular rules
ar_us("cc", _Any) ->
    "cc.ar.us";

ar_us("lib", _Any) ->
    "lib.ar.us";


ar_us(_, _) ->
    "ar.us".

%% regular rules
in_us("lib", _Any) ->
    "lib.in.us";

in_us("cc", _Any) ->
    "cc.in.us";


in_us(_, _) ->
    "in.us".

%% regular rules
wy_us("cc", _Any) ->
    "cc.wy.us";

wy_us("lib", _Any) ->
    "lib.wy.us";


wy_us(_, _) ->
    "wy.us".

%% regular rules
mw("ac", _Any) ->
    "ac.mw";

mw("co", _Any) ->
    "co.mw";

mw("gov", _Any) ->
    "gov.mw";

mw("net", _Any) ->
    "net.mw";

mw("int", _Any) ->
    "int.mw";

mw("coop", _Any) ->
    "coop.mw";

mw("biz", _Any) ->
    "biz.mw";

mw("museum", _Any) ->
    "museum.mw";

mw("org", _Any) ->
    "org.mw";

mw("edu", _Any) ->
    "edu.mw";

mw("com", _Any) ->
    "com.mw";


mw(_, _) ->
    "mw".

%% regular rules
events("co", _Any) ->
    "co.events";

events("koobin", _Any) ->
    "koobin.events";


events(_, _) ->
    "events".

%% regular rules
land("static", []) ->
    "static.land";
land("static", Parts) ->
    [First | Rest] = Parts,
    static_land(First, Rest);


land(_, _) ->
    "land".

%% regular rules
static_land("sites", _Any) ->
    "sites.static.land";

static_land("dev", _Any) ->
    "dev.static.land";


static_land(_, _) ->
    "static.land".

%% regular rules
si("blogspot", _Any) ->
    "blogspot.si";

si("gitpage", _Any) ->
    "gitpage.si";

si("gitapp", _Any) ->
    "gitapp.si";


si(_, _) ->
    "si".

%% regular rules
mo("com", _Any) ->
    "com.mo";

mo("edu", _Any) ->
    "edu.mo";

mo("net", _Any) ->
    "net.mo";

mo("org", _Any) ->
    "org.mo";

mo("gov", _Any) ->
    "gov.mo";


mo(_, _) ->
    "mo".

%% regular rules
kp("gov", _Any) ->
    "gov.kp";

kp("tra", _Any) ->
    "tra.kp";

kp("org", _Any) ->
    "org.kp";

kp("edu", _Any) ->
    "edu.kp";

kp("rep", _Any) ->
    "rep.kp";

kp("com", _Any) ->
    "com.kp";


kp(_, _) ->
    "kp".

%% regular rules
health("hra", _Any) ->
    "hra.health";


health(_, _) ->
    "health".

%% regular rules
ad("nom", _Any) ->
    "nom.ad";


ad(_, _) ->
    "ad".

%% regular rules
bb("gov", _Any) ->
    "gov.bb";

bb("co", _Any) ->
    "co.bb";

bb("org", _Any) ->
    "org.bb";

bb("net", _Any) ->
    "net.bb";

bb("store", _Any) ->
    "store.bb";

bb("biz", _Any) ->
    "biz.bb";

bb("tv", _Any) ->
    "tv.bb";

bb("edu", _Any) ->
    "edu.bb";

bb("info", _Any) ->
    "info.bb";

bb("com", _Any) ->
    "com.bb";


bb(_, _) ->
    "bb".

%% regular rules
at("ac", []) ->
    "ac.at";
at("ac", Parts) ->
    [First | Rest] = Parts,
    ac_at(First, Rest);

at("co", []) ->
    "co.at";
at("co", Parts) ->
    [First | Rest] = Parts,
    co_at(First, Rest);

at("futuremailing", _Any) ->
    "futuremailing.at";

at("gv", _Any) ->
    "gv.at";

at("priv", _Any) ->
    "priv.at";

at("myspreadshop", _Any) ->
    "myspreadshop.at";

at("info", _Any) ->
    "info.at";

at("biz", _Any) ->
    "biz.at";

at("futurehosting", _Any) ->
    "futurehosting.at";

at("funkfeuer", []) ->
    "funkfeuer.at";
at("funkfeuer", Parts) ->
    [First | Rest] = Parts,
    funkfeuer_at(First, Rest);

at("or", _Any) ->
    "or.at";


at(_, _) ->
    "at".

%% regular rules
ac_at("sth", _Any) ->
    "sth.ac.at";


ac_at(_, _) ->
    "ac.at".

%% regular rules
co_at("blogspot", _Any) ->
    "blogspot.co.at";


co_at(_, _) ->
    "co.at".

%% regular rules
funkfeuer_at("wien", _Any) ->
    "wien.funkfeuer.at";


funkfeuer_at(_, _) ->
    "funkfeuer.at".

%% regular rules
mx("blogspot", _Any) ->
    "blogspot.mx";

mx("gob", _Any) ->
    "gob.mx";

mx("org", _Any) ->
    "org.mx";

mx("edu", _Any) ->
    "edu.mx";

mx("net", _Any) ->
    "net.mx";

mx("com", _Any) ->
    "com.mx";


mx(_, _) ->
    "mx".

%% regular rules
nr("org", _Any) ->
    "org.nr";

nr("net", _Any) ->
    "net.nr";

nr("biz", _Any) ->
    "biz.nr";

nr("gov", _Any) ->
    "gov.nr";

nr("edu", _Any) ->
    "edu.nr";

nr("info", _Any) ->
    "info.nr";

nr("com", _Any) ->
    "com.nr";


nr(_, _) ->
    "nr".

%% regular rules
tn("orangecloud", _Any) ->
    "orangecloud.tn";

tn("tourism", _Any) ->
    "tourism.tn";

tn("info", _Any) ->
    "info.tn";

tn("ind", _Any) ->
    "ind.tn";

tn("com", _Any) ->
    "com.tn";

tn("nat", _Any) ->
    "nat.tn";

tn("net", _Any) ->
    "net.tn";

tn("fin", _Any) ->
    "fin.tn";

tn("gov", _Any) ->
    "gov.tn";

tn("ens", _Any) ->
    "ens.tn";

tn("perso", _Any) ->
    "perso.tn";

tn("org", _Any) ->
    "org.tn";

tn("mincom", _Any) ->
    "mincom.tn";

tn("intl", _Any) ->
    "intl.tn";


tn(_, _) ->
    "tn".

%% regular rules
pw("co", _Any) ->
    "co.pw";

pw("go", _Any) ->
    "go.pw";

pw("ne", _Any) ->
    "ne.pw";

pw("cloudns", _Any) ->
    "cloudns.pw";

pw("belau", _Any) ->
    "belau.pw";

pw("ed", _Any) ->
    "ed.pw";

pw("or", _Any) ->
    "or.pw";


pw(_, _) ->
    "pw".

%% regular rules
bf("gov", _Any) ->
    "gov.bf";


bf(_, _) ->
    "bf".

%% regular rules
scot("edu", _Any) ->
    "edu.scot";

scot("gov", []) ->
    "gov.scot";
scot("gov", Parts) ->
    [First | Rest] = Parts,
    gov_scot(First, Rest);


scot(_, _) ->
    "scot".

%% regular rules
gov_scot("service", _Any) ->
    "service.gov.scot";


gov_scot(_, _) ->
    "gov.scot".

%% regular rules
menu("barsy", _Any) ->
    "barsy.menu";


menu(_, _) ->
    "menu".

%% regular rules
nc("nom", _Any) ->
    "nom.nc";

nc("asso", _Any) ->
    "asso.nc";


nc(_, _) ->
    "nc".

%% regular rules
sg("blogspot", _Any) ->
    "blogspot.sg";

sg("enscaled", _Any) ->
    "enscaled.sg";

sg("com", _Any) ->
    "com.sg";

sg("edu", _Any) ->
    "edu.sg";

sg("gov", _Any) ->
    "gov.sg";

sg("per", _Any) ->
    "per.sg";

sg("net", _Any) ->
    "net.sg";

sg("org", _Any) ->
    "org.sg";


sg(_, _) ->
    "sg".

%% regular rules
games("pley", _Any) ->
    "pley.games";


games(_, _) ->
    "games".

%% regular rules
ar("coop", _Any) ->
    "coop.ar";

ar("int", _Any) ->
    "int.ar";

ar("net", _Any) ->
    "net.ar";

ar("bet", _Any) ->
    "bet.ar";

ar("gov", _Any) ->
    "gov.ar";

ar("com", []) ->
    "com.ar";
ar("com", Parts) ->
    [First | Rest] = Parts,
    com_ar(First, Rest);

ar("mutual", _Any) ->
    "mutual.ar";

ar("edu", _Any) ->
    "edu.ar";

ar("mil", _Any) ->
    "mil.ar";

ar("musica", _Any) ->
    "musica.ar";

ar("org", _Any) ->
    "org.ar";

ar("gob", _Any) ->
    "gob.ar";

ar("senasa", _Any) ->
    "senasa.ar";

ar("tur", _Any) ->
    "tur.ar";


ar(_, _) ->
    "ar".

%% regular rules
com_ar("blogspot", _Any) ->
    "blogspot.com.ar";


com_ar(_, _) ->
    "com.ar".

%% regular rules
ve("store", _Any) ->
    "store.ve";

ve("rec", _Any) ->
    "rec.ve";

ve("gob", _Any) ->
    "gob.ve";

ve("org", _Any) ->
    "org.ve";

ve("tec", _Any) ->
    "tec.ve";

ve("bib", _Any) ->
    "bib.ve";

ve("arts", _Any) ->
    "arts.ve";

ve("rar", _Any) ->
    "rar.ve";

ve("int", _Any) ->
    "int.ve";

ve("net", _Any) ->
    "net.ve";

ve("nom", _Any) ->
    "nom.ve";

ve("co", _Any) ->
    "co.ve";

ve("gov", _Any) ->
    "gov.ve";

ve("firm", _Any) ->
    "firm.ve";

ve("edu", _Any) ->
    "edu.ve";

ve("info", _Any) ->
    "info.ve";

ve("web", _Any) ->
    "web.ve";

ve("com", _Any) ->
    "com.ve";

ve("mil", _Any) ->
    "mil.ve";


ve(_, _) ->
    "ve".

%% regular rules
bs("com", _Any) ->
    "com.bs";

bs("we", _Any) ->
    "we.bs";

bs("edu", _Any) ->
    "edu.bs";

bs("net", _Any) ->
    "net.bs";

bs("org", _Any) ->
    "org.bs";

bs("gov", _Any) ->
    "gov.bs";


bs(_, _) ->
    "bs".

%% regular rules
na("tv", _Any) ->
    "tv.na";

na("info", _Any) ->
    "info.na";

na("com", _Any) ->
    "com.na";

na("pro", _Any) ->
    "pro.na";

na("mobi", _Any) ->
    "mobi.na";

na("co", _Any) ->
    "co.na";

na("ca", _Any) ->
    "ca.na";

na("school", _Any) ->
    "school.na";

na("in", _Any) ->
    "in.na";

na("ws", _Any) ->
    "ws.na";

na("dr", _Any) ->
    "dr.na";

na("mx", _Any) ->
    "mx.na";

na("or", _Any) ->
    "or.na";

na("us", _Any) ->
    "us.na";

na("cc", _Any) ->
    "cc.na";

na("name", _Any) ->
    "name.na";

na("org", _Any) ->
    "org.na";


na(_, _) ->
    "na".

%% regular rules
kz("gov", _Any) ->
    "gov.kz";

kz("jcloud", _Any) ->
    "jcloud.kz";

kz("mil", _Any) ->
    "mil.kz";

kz("com", _Any) ->
    "com.kz";

kz("net", _Any) ->
    "net.kz";

kz("edu", _Any) ->
    "edu.kz";

kz("org", _Any) ->
    "org.kz";

kz("kazteleport", []) ->
    "kazteleport.kz";
kz("kazteleport", Parts) ->
    [First | Rest] = Parts,
    kazteleport_kz(First, Rest);


kz(_, _) ->
    "kz".

%% regular rules
kazteleport_kz("upaas", _Any) ->
    "upaas.kazteleport.kz";


kazteleport_kz(_, _) ->
    "kazteleport.kz".

%% regular rules
mz("mil", _Any) ->
    "mil.mz";

mz("adv", _Any) ->
    "adv.mz";

mz("edu", _Any) ->
    "edu.mz";

mz("co", _Any) ->
    "co.mz";

mz("ac", _Any) ->
    "ac.mz";

mz("gov", _Any) ->
    "gov.mz";

mz("net", _Any) ->
    "net.mz";

mz("org", _Any) ->
    "org.mz";


mz(_, _) ->
    "mz".

%% regular rules
py("mil", _Any) ->
    "mil.py";

py("edu", _Any) ->
    "edu.py";

py("com", _Any) ->
    "com.py";

py("gov", _Any) ->
    "gov.py";

py("net", _Any) ->
    "net.py";

py("coop", _Any) ->
    "coop.py";

py("org", _Any) ->
    "org.py";


py(_, _) ->
    "py".

%% regular rules
km("asso", _Any) ->
    "asso.km";

km("veterinaire", _Any) ->
    "veterinaire.km";

km("pharmaciens", _Any) ->
    "pharmaciens.km";

km("org", _Any) ->
    "org.km";

km("mil", _Any) ->
    "mil.km";

km("com", _Any) ->
    "com.km";

km("edu", _Any) ->
    "edu.km";

km("ass", _Any) ->
    "ass.km";

km("medecin", _Any) ->
    "medecin.km";

km("tm", _Any) ->
    "tm.km";

km("gov", _Any) ->
    "gov.km";

km("notaires", _Any) ->
    "notaires.km";

km("nom", _Any) ->
    "nom.km";

km("gouv", _Any) ->
    "gouv.km";

km("coop", _Any) ->
    "coop.km";

km("prd", _Any) ->
    "prd.km";

km("presse", _Any) ->
    "presse.km";


km(_, _) ->
    "km".

%% regular rules
store("storebase", _Any) ->
    "storebase.store";

store("shopware", _Any) ->
    "shopware.store";

store("sellfy", _Any) ->
    "sellfy.store";


store(_, _) ->
    "store".

%% regular rules
ac("org", _Any) ->
    "org.ac";

ac("drr", _Any) ->
    "drr.ac";

ac("com", _Any) ->
    "com.ac";

ac("edu", _Any) ->
    "edu.ac";

ac("net", _Any) ->
    "net.ac";

ac("mil", _Any) ->
    "mil.ac";

ac("gov", _Any) ->
    "gov.ac";


ac(_, _) ->
    "ac".

%% regular rules
sn("gouv", _Any) ->
    "gouv.sn";

sn("art", _Any) ->
    "art.sn";

sn("org", _Any) ->
    "org.sn";

sn("univ", _Any) ->
    "univ.sn";

sn("com", _Any) ->
    "com.sn";

sn("edu", _Any) ->
    "edu.sn";

sn("blogspot", _Any) ->
    "blogspot.sn";

sn("perso", _Any) ->
    "perso.sn";


sn(_, _) ->
    "sn".

%% regular rules
hn("com", _Any) ->
    "com.hn";

hn("net", _Any) ->
    "net.hn";

hn("edu", _Any) ->
    "edu.hn";

hn("org", _Any) ->
    "org.hn";

hn("gob", _Any) ->
    "gob.hn";

hn("cc", _Any) ->
    "cc.hn";

hn("mil", _Any) ->
    "mil.hn";


hn(_, _) ->
    "hn".

%% regular rules
team("jelastic", _Any) ->
    "jelastic.team";

team("discourse", _Any) ->
    "discourse.team";


team(_, _) ->
    "team".

%% regular rules
pub("barsy", _Any) ->
    "barsy.pub";


pub(_, _) ->
    "pub".

%% regular rules
pizza("ngrok", _Any) ->
    "ngrok.pizza";


pizza(_, _) ->
    "pizza".

%% regular rules
my("net", _Any) ->
    "net.my";

my("biz", _Any) ->
    "biz.my";

my("org", _Any) ->
    "org.my";

my("gov", _Any) ->
    "gov.my";

my("name", _Any) ->
    "name.my";

my("edu", _Any) ->
    "edu.my";

my("com", _Any) ->
    "com.my";

my("blogspot", _Any) ->
    "blogspot.my";

my("mil", _Any) ->
    "mil.my";


my(_, _) ->
    "my".

%% regular rules
qa("blogspot", _Any) ->
    "blogspot.qa";

qa("mil", _Any) ->
    "mil.qa";

qa("edu", _Any) ->
    "edu.qa";

qa("com", _Any) ->
    "com.qa";

qa("gov", _Any) ->
    "gov.qa";

qa("name", _Any) ->
    "name.qa";

qa("net", _Any) ->
    "net.qa";

qa("sch", _Any) ->
    "sch.qa";

qa("org", _Any) ->
    "org.qa";


qa(_, _) ->
    "qa".

%% regular rules
tj("mil", _Any) ->
    "mil.tj";

tj("com", _Any) ->
    "com.tj";

tj("web", _Any) ->
    "web.tj";

tj("edu", _Any) ->
    "edu.tj";

tj("ac", _Any) ->
    "ac.tj";

tj("co", _Any) ->
    "co.tj";

tj("gov", _Any) ->
    "gov.tj";

tj("int", _Any) ->
    "int.tj";

tj("net", _Any) ->
    "net.tj";

tj("name", _Any) ->
    "name.tj";

tj("nic", _Any) ->
    "nic.tj";

tj("test", _Any) ->
    "test.tj";

tj("go", _Any) ->
    "go.tj";

tj("org", _Any) ->
    "org.tj";

tj("biz", _Any) ->
    "biz.tj";


tj(_, _) ->
    "tj".

%% regular rules
pm("name", _Any) ->
    "name.pm";

pm("own", _Any) ->
    "own.pm";


pm(_, _) ->
    "pm".

%% regular rules
ky("org", _Any) ->
    "org.ky";

ky("com", _Any) ->
    "com.ky";

ky("edu", _Any) ->
    "edu.ky";

ky("net", _Any) ->
    "net.ky";


ky(_, _) ->
    "ky".

%% regular rules
ly("net", _Any) ->
    "net.ly";

ly("sch", _Any) ->
    "sch.ly";

ly("med", _Any) ->
    "med.ly";

ly("org", _Any) ->
    "org.ly";

ly("gov", _Any) ->
    "gov.ly";

ly("edu", _Any) ->
    "edu.ly";

ly("id", _Any) ->
    "id.ly";

ly("com", _Any) ->
    "com.ly";

ly("plc", _Any) ->
    "plc.ly";


ly(_, _) ->
    "ly".

%% regular rules
wiki("framer", _Any) ->
    "framer.wiki";


wiki(_, _) ->
    "wiki".

%% regular rules
is("org", _Any) ->
    "org.is";

is("net", _Any) ->
    "net.is";

is("int", _Any) ->
    "int.is";

is("cupcake", _Any) ->
    "cupcake.is";

is("gov", _Any) ->
    "gov.is";

is("edu", _Any) ->
    "edu.is";

is("com", _Any) ->
    "com.is";

is("blogspot", _Any) ->
    "blogspot.is";


is(_, _) ->
    "is".

%% regular rules
ru("eurodir", _Any) ->
    "eurodir.ru";

ru("net", _Any) ->
    "net.ru";

ru("bashkiria", _Any) ->
    "bashkiria.ru";

ru("grozny", _Any) ->
    "grozny.ru";

ru("gov", _Any) ->
    "gov.ru";

ru("ras", _Any) ->
    "ras.ru";

ru("ac", _Any) ->
    "ac.ru";

ru("regruhosting", []) ->
    "regruhosting.ru";
ru("regruhosting", Parts) ->
    [First | Rest] = Parts,
    regruhosting_ru(First, Rest);

ru("pp", _Any) ->
    "pp.ru";

ru("com", _Any) ->
    "com.ru";

ru("kalmykia", _Any) ->
    "kalmykia.ru";

ru("pyatigorsk", _Any) ->
    "pyatigorsk.ru";

ru("vladikavkaz", _Any) ->
    "vladikavkaz.ru";

ru("cldmail", []) ->
    "cldmail.ru";
ru("cldmail", Parts) ->
    [First | Rest] = Parts,
    cldmail_ru(First, Rest);

ru("org", _Any) ->
    "org.ru";

ru("myjino", _Any) ->
    "myjino.ru";

ru("mcpre", _Any) ->
    "mcpre.ru";

ru("test", _Any) ->
    "test.ru";

ru("nov", _Any) ->
    "nov.ru";

ru("cbg", _Any) ->
    "cbg.ru";

ru("int", _Any) ->
    "int.ru";

ru("mcdir", []) ->
    "mcdir.ru";
ru("mcdir", Parts) ->
    [First | Rest] = Parts,
    mcdir_ru(First, Rest);

ru("adygeya", _Any) ->
    "adygeya.ru";

ru("mordovia", _Any) ->
    "mordovia.ru";

ru("edu", _Any) ->
    "edu.ru";

ru("mil", _Any) ->
    "mil.ru";

ru("nalchik", _Any) ->
    "nalchik.ru";

ru("mircloud", _Any) ->
    "mircloud.ru";

ru("vladimir", _Any) ->
    "vladimir.ru";

ru("msk", _Any) ->
    "msk.ru";

ru("mytis", _Any) ->
    "mytis.ru";

ru("kustanai", _Any) ->
    "kustanai.ru";

ru("bir", _Any) ->
    "bir.ru";

ru("spb", _Any) ->
    "spb.ru";

ru("dagestan", _Any) ->
    "dagestan.ru";

ru("marine", _Any) ->
    "marine.ru";

ru("blogspot", _Any) ->
    "blogspot.ru";


ru(_, _) ->
    "ru".

%% regular rules
regruhosting_ru("jelastic", _Any) ->
    "jelastic.regruhosting.ru";


regruhosting_ru(_, _) ->
    "regruhosting.ru".

%% regular rules
cldmail_ru("hb", _Any) ->
    "hb.cldmail.ru";


cldmail_ru(_, _) ->
    "cldmail.ru".

%% regular rules
mcdir_ru("vps", _Any) ->
    "vps.mcdir.ru";


mcdir_ru(_, _) ->
    "mcdir.ru".

%% regular rules
za("net", _Any) ->
    "net.za";

za("nom", _Any) ->
    "nom.za";

za("school", _Any) ->
    "school.za";

za("gov", _Any) ->
    "gov.za";

za("ac", _Any) ->
    "ac.za";

za("co", []) ->
    "co.za";
za("co", Parts) ->
    [First | Rest] = Parts,
    co_za(First, Rest);

za("tm", _Any) ->
    "tm.za";

za("edu", _Any) ->
    "edu.za";

za("web", _Any) ->
    "web.za";

za("law", _Any) ->
    "law.za";

za("mil", _Any) ->
    "mil.za";

za("nis", _Any) ->
    "nis.za";

za("agric", _Any) ->
    "agric.za";

za("alt", _Any) ->
    "alt.za";

za("org", _Any) ->
    "org.za";

za("nic", _Any) ->
    "nic.za";

za("grondar", _Any) ->
    "grondar.za";

za("ngo", _Any) ->
    "ngo.za";


za(_, _) ->
    "za".

%% regular rules
co_za("blogspot", _Any) ->
    "blogspot.co.za";


co_za(_, _) ->
    "co.za".

%% regular rules
gy("edu", _Any) ->
    "edu.gy";

gy("net", _Any) ->
    "net.gy";

gy("com", _Any) ->
    "com.gy";

gy("be", _Any) ->
    "be.gy";

gy("org", _Any) ->
    "org.gy";

gy("co", _Any) ->
    "co.gy";

gy("gov", _Any) ->
    "gov.gy";


gy(_, _) ->
    "gy".

%% regular rules
cd("gov", _Any) ->
    "gov.cd";


cd(_, _) ->
    "cd".

%% regular rules
id("mil", _Any) ->
    "mil.id";

id("web", _Any) ->
    "web.id";

id("co", []) ->
    "co.id";
id("co", Parts) ->
    [First | Rest] = Parts,
    co_id(First, Rest);

id("ac", _Any) ->
    "ac.id";

id("net", _Any) ->
    "net.id";

id("flap", _Any) ->
    "flap.id";

id("desa", _Any) ->
    "desa.id";

id("or", _Any) ->
    "or.id";

id("forte", _Any) ->
    "forte.id";

id("ponpes", _Any) ->
    "ponpes.id";

id("biz", _Any) ->
    "biz.id";

id("my", _Any) ->
    "my.id";

id("sch", _Any) ->
    "sch.id";

id("go", _Any) ->
    "go.id";


id(_, _) ->
    "id".

%% regular rules
co_id("blogspot", _Any) ->
    "blogspot.co.id";


co_id(_, _) ->
    "co.id".

%% regular rules
it("asti", _Any) ->
    "asti.it";

it("no", _Any) ->
    "no.it";

it("alessandria", _Any) ->
    "alessandria.it";

it("trentinsudtirol", _Any) ->
    "trentinsudtirol.it";

it("cagliari", _Any) ->
    "cagliari.it";

it("syncloud", _Any) ->
    "syncloud.it";

it("bozen", _Any) ->
    "bozen.it";

it("lucania", _Any) ->
    "lucania.it";

it("cz", _Any) ->
    "cz.it";

it("tn", _Any) ->
    "tn.it";

it("ferrara", _Any) ->
    "ferrara.it";

it("bolzano", _Any) ->
    "bolzano.it";

it("sic", _Any) ->
    "sic.it";

it("ta", _Any) ->
    "ta.it";

it("caltanissetta", _Any) ->
    "caltanissetta.it";

it("padua", _Any) ->
    "padua.it";

it("firenze", _Any) ->
    "firenze.it";

it("al", _Any) ->
    "al.it";

it("ibxos", _Any) ->
    "ibxos.it";

it("milano", _Any) ->
    "milano.it";

it("potenza", _Any) ->
    "potenza.it";

it("cosenza", _Any) ->
    "cosenza.it";

it("tuscany", _Any) ->
    "tuscany.it";

it("rieti", _Any) ->
    "rieti.it";

it("piemonte", _Any) ->
    "piemonte.it";

it("pr", _Any) ->
    "pr.it";

it("vibovalentia", _Any) ->
    "vibovalentia.it";

it("fermo", _Any) ->
    "fermo.it";

it("vv", _Any) ->
    "vv.it";

it("molise", _Any) ->
    "molise.it";

it("po", _Any) ->
    "po.it";

it("at", _Any) ->
    "at.it";

it("siracusa", _Any) ->
    "siracusa.it";

it("ascolipiceno", _Any) ->
    "ascolipiceno.it";

it("an", _Any) ->
    "an.it";

it("parma", _Any) ->
    "parma.it";

it("salerno", _Any) ->
    "salerno.it";

it("toscana", _Any) ->
    "toscana.it";

it("pc", _Any) ->
    "pc.it";

it("nu", _Any) ->
    "nu.it";

it("bl", _Any) ->
    "bl.it";

it("rome", _Any) ->
    "rome.it";

it("monzabrianza", _Any) ->
    "monzabrianza.it";

it("campania", _Any) ->
    "campania.it";

it("pi", _Any) ->
    "pi.it";

it("valdaosta", _Any) ->
    "valdaosta.it";

it("tos", _Any) ->
    "tos.it";

it("rm", _Any) ->
    "rm.it";

it("reggiocalabria", _Any) ->
    "reggiocalabria.it";

it("vda", _Any) ->
    "vda.it";

it("benevento", _Any) ->
    "benevento.it";

it("monza", _Any) ->
    "monza.it";

it("balsan", _Any) ->
    "balsan.it";

it("reggioemilia", _Any) ->
    "reggioemilia.it";

it("fg", _Any) ->
    "fg.it";

it("re", _Any) ->
    "re.it";

it("ba", _Any) ->
    "ba.it";

it("bn", _Any) ->
    "bn.it";

it("lazio", _Any) ->
    "lazio.it";

it("edu", _Any) ->
    "edu.it";

it("ce", _Any) ->
    "ce.it";

it("rimini", _Any) ->
    "rimini.it";

it("enna", _Any) ->
    "enna.it";

it("oristano", _Any) ->
    "oristano.it";

it("cremona", _Any) ->
    "cremona.it";

it("bologna", _Any) ->
    "bologna.it";

it("bt", _Any) ->
    "bt.it";

it("pu", _Any) ->
    "pu.it";

it("tempioolbia", _Any) ->
    "tempioolbia.it";

it("modena", _Any) ->
    "modena.it";

it("treviso", _Any) ->
    "treviso.it";

it("im", _Any) ->
    "im.it";

it("catania", _Any) ->
    "catania.it";

it("sv", _Any) ->
    "sv.it";

it("lodi", _Any) ->
    "lodi.it";

it("basilicata", _Any) ->
    "basilicata.it";

it("lombardy", _Any) ->
    "lombardy.it";

it("livorno", _Any) ->
    "livorno.it";

it("vi", _Any) ->
    "vi.it";

it("verbania", _Any) ->
    "verbania.it";

it("lo", _Any) ->
    "lo.it";

it("gr", _Any) ->
    "gr.it";

it("naples", _Any) ->
    "naples.it";

it("gov", _Any) ->
    "gov.it";

it("vc", _Any) ->
    "vc.it";

it("campobasso", _Any) ->
    "campobasso.it";

it("laz", _Any) ->
    "laz.it";

it("cl", _Any) ->
    "cl.it";

it("abr", _Any) ->
    "abr.it";

it("ra", _Any) ->
    "ra.it";

it("emr", _Any) ->
    "emr.it";

it("vicenza", _Any) ->
    "vicenza.it";

it("aosta", _Any) ->
    "aosta.it";

it("puglia", _Any) ->
    "puglia.it";

it("rn", _Any) ->
    "rn.it";

it("varese", _Any) ->
    "varese.it";

it("avellino", _Any) ->
    "avellino.it";

it("fr", _Any) ->
    "fr.it";

it("vs", _Any) ->
    "vs.it";

it("aquila", _Any) ->
    "aquila.it";

it("go", _Any) ->
    "go.it";

it("liguria", _Any) ->
    "liguria.it";

it("pistoia", _Any) ->
    "pistoia.it";

it("mi", _Any) ->
    "mi.it";

it("milan", _Any) ->
    "milan.it";

it("ct", _Any) ->
    "ct.it";

it("viterbo", _Any) ->
    "viterbo.it";

it("latina", _Any) ->
    "latina.it";

it("ca", _Any) ->
    "ca.it";

it("mc", _Any) ->
    "mc.it";

it("valledaosta", _Any) ->
    "valledaosta.it";

it("en", _Any) ->
    "en.it";

it("traniandriabarletta", _Any) ->
    "traniandriabarletta.it";

it("so", _Any) ->
    "so.it";

it("ot", _Any) ->
    "ot.it";

it("cn", _Any) ->
    "cn.it";

it("umb", _Any) ->
    "umb.it";

it("terni", _Any) ->
    "terni.it";

it("blogspot", _Any) ->
    "blogspot.it";

it("savona", _Any) ->
    "savona.it";

it("sr", _Any) ->
    "sr.it";

it("iliadboxos", _Any) ->
    "iliadboxos.it";

it("kr", _Any) ->
    "kr.it";

it("como", _Any) ->
    "como.it";

it("ms", _Any) ->
    "ms.it";

it("tranibarlettaandria", _Any) ->
    "tranibarlettaandria.it";

it("trentinoaltoadige", _Any) ->
    "trentinoaltoadige.it";

it("cam", _Any) ->
    "cam.it";

it("abruzzo", _Any) ->
    "abruzzo.it";

it("piacenza", _Any) ->
    "piacenza.it";

it("ss", _Any) ->
    "ss.it";

it("lu", _Any) ->
    "lu.it";

it("caserta", _Any) ->
    "caserta.it";

it("laspezia", _Any) ->
    "laspezia.it";

it("dellogliastra", _Any) ->
    "dellogliastra.it";

it("veneto", _Any) ->
    "veneto.it";

it("rovigo", _Any) ->
    "rovigo.it";

it("novara", _Any) ->
    "novara.it";

it("pescara", _Any) ->
    "pescara.it";

it("aostavalley", _Any) ->
    "aostavalley.it";

it("si", _Any) ->
    "si.it";

it("massacarrara", _Any) ->
    "massacarrara.it";

it("mo", _Any) ->
    "mo.it";

it("bz", _Any) ->
    "bz.it";

it("vao", _Any) ->
    "vao.it";

it("verona", _Any) ->
    "verona.it";

it("sp", _Any) ->
    "sp.it";

it("te", _Any) ->
    "te.it";

it("sondrio", _Any) ->
    "sondrio.it";

it("brindisi", _Any) ->
    "brindisi.it";

it("pg", _Any) ->
    "pg.it";

it("imperia", _Any) ->
    "imperia.it";

it("udine", _Any) ->
    "udine.it";

it("lom", _Any) ->
    "lom.it";

it("pv", _Any) ->
    "pv.it";

it("lecco", _Any) ->
    "lecco.it";

it("padova", _Any) ->
    "padova.it";

it("vr", _Any) ->
    "vr.it";

it("foggia", _Any) ->
    "foggia.it";

it("trentinoaadige", _Any) ->
    "trentinoaadige.it";

it("li", _Any) ->
    "li.it";

it("gorizia", _Any) ->
    "gorizia.it";

it("matera", _Any) ->
    "matera.it";

it("valleedaoste", _Any) ->
    "valleedaoste.it";

it("fi", _Any) ->
    "fi.it";

it("sicily", _Any) ->
    "sicily.it";

it("lc", _Any) ->
    "lc.it";

it("teramo", _Any) ->
    "teramo.it";

it("catanzaro", _Any) ->
    "catanzaro.it";

it("cb", _Any) ->
    "cb.it";

it("urbinopesaro", _Any) ->
    "urbinopesaro.it";

it("fc", _Any) ->
    "fc.it";

it("lt", _Any) ->
    "lt.it";

it("ch", _Any) ->
    "ch.it";

it("pz", _Any) ->
    "pz.it";

it("trieste", _Any) ->
    "trieste.it";

it("pisa", _Any) ->
    "pisa.it";

it("mb", _Any) ->
    "mb.it";

it("ro", _Any) ->
    "ro.it";

it("ravenna", _Any) ->
    "ravenna.it";

it("venice", _Any) ->
    "venice.it";

it("mol", _Any) ->
    "mol.it";

it("aq", _Any) ->
    "aq.it";

it("pug", _Any) ->
    "pug.it";

it("ud", _Any) ->
    "ud.it";

it("chieti", _Any) ->
    "chieti.it";

it("emiliaromagna", _Any) ->
    "emiliaromagna.it";

it("trentinosudtirol", _Any) ->
    "trentinosudtirol.it";

it("sardegna", _Any) ->
    "sardegna.it";

it("andriatranibarletta", _Any) ->
    "andriatranibarletta.it";

it("napoli", _Any) ->
    "napoli.it";

it("iglesiascarbonia", _Any) ->
    "iglesiascarbonia.it";

it("pordenone", _Any) ->
    "pordenone.it";

it("co", _Any) ->
    "co.it";

it("agrigento", _Any) ->
    "agrigento.it";

it("vb", _Any) ->
    "vb.it";

it("umbria", _Any) ->
    "umbria.it";

it("sa", _Any) ->
    "sa.it";

it("pmn", _Any) ->
    "pmn.it";

it("macerata", _Any) ->
    "macerata.it";

it("fvg", _Any) ->
    "fvg.it";

it("bg", _Any) ->
    "bg.it";

it("taa", _Any) ->
    "taa.it";

it("or", _Any) ->
    "or.it";

it("altoadige", _Any) ->
    "altoadige.it";

it("biella", _Any) ->
    "biella.it";

it("isernia", _Any) ->
    "isernia.it";

it("pesarourbino", _Any) ->
    "pesarourbino.it";

it("trentinsuedtirol", _Any) ->
    "trentinsuedtirol.it";

it("genova", _Any) ->
    "genova.it";

it("lecce", _Any) ->
    "lecce.it";

it("palermo", _Any) ->
    "palermo.it";

it("cr", _Any) ->
    "cr.it";

it("tv", _Any) ->
    "tv.it";

it("ragusa", _Any) ->
    "ragusa.it";

it("venezia", _Any) ->
    "venezia.it";

it("trento", _Any) ->
    "trento.it";

it("is", _Any) ->
    "is.it";

it("cs", _Any) ->
    "cs.it";

it("nuoro", _Any) ->
    "nuoro.it";

it("piedmont", _Any) ->
    "piedmont.it";

it("ci", _Any) ->
    "ci.it";

it("barlettatraniandria", _Any) ->
    "barlettatraniandria.it";

it("pavia", _Any) ->
    "pavia.it";

it("crotone", _Any) ->
    "crotone.it";

it("mt", _Any) ->
    "mt.it";

it("messina", _Any) ->
    "messina.it";

it("aoste", _Any) ->
    "aoste.it";

it("mn", _Any) ->
    "mn.it";

it("rc", _Any) ->
    "rc.it";

it("laquila", _Any) ->
    "laquila.it";

it("ag", _Any) ->
    "ag.it";

it("cal", _Any) ->
    "cal.it";

it("ri", _Any) ->
    "ri.it";

it("av", _Any) ->
    "av.it";

it("vercelli", _Any) ->
    "vercelli.it";

it("carboniaiglesias", _Any) ->
    "carboniaiglesias.it";

it("turin", _Any) ->
    "turin.it";

it("ancona", _Any) ->
    "ancona.it";

it("vt", _Any) ->
    "vt.it";

it("cesenaforli", _Any) ->
    "cesenaforli.it";

it("bergamo", _Any) ->
    "bergamo.it";

it("va", _Any) ->
    "va.it";

it("brescia", _Any) ->
    "brescia.it";

it("pe", _Any) ->
    "pe.it";

it("na", _Any) ->
    "na.it";

it("sassari", _Any) ->
    "sassari.it";

it("tr", _Any) ->
    "tr.it";

it("tim", []) ->
    "tim.it";
it("tim", Parts) ->
    [First | Rest] = Parts,
    tim_it(First, Rest);

it("bs", _Any) ->
    "bs.it";

it("grosseto", _Any) ->
    "grosseto.it";

it("friulivegiulia", _Any) ->
    "friulivegiulia.it";

it("trentinosuedtirol", _Any) ->
    "trentinosuedtirol.it";

it("neen", []) ->
    "neen.it";
it("neen", Parts) ->
    [First | Rest] = Parts,
    neen_it(First, Rest);

it("campidanomedio", _Any) ->
    "campidanomedio.it";

it("me", _Any) ->
    "me.it";

it("to", _Any) ->
    "to.it";

it("bi", _Any) ->
    "bi.it";

it("lig", _Any) ->
    "lig.it";

it("frosinone", _Any) ->
    "frosinone.it";

it("genoa", _Any) ->
    "genoa.it";

it("bari", _Any) ->
    "bari.it";

it("bulsan", _Any) ->
    "bulsan.it";

it("perugia", _Any) ->
    "perugia.it";

it("monzaedellabrianza", _Any) ->
    "monzaedellabrianza.it";

it("sicilia", _Any) ->
    "sicilia.it";

it("lombardia", _Any) ->
    "lombardia.it";

it("valleeaoste", _Any) ->
    "valleeaoste.it";

it("sardinia", _Any) ->
    "sardinia.it";

it("andriabarlettatrani", _Any) ->
    "andriabarlettatrani.it";

it("ar", _Any) ->
    "ar.it";

it("valleaosta", _Any) ->
    "valleaosta.it";

it("pa", _Any) ->
    "pa.it";

it("torino", _Any) ->
    "torino.it";

it("marche", _Any) ->
    "marche.it";

it("olbiatempio", _Any) ->
    "olbiatempio.it";

it("ve", _Any) ->
    "ve.it";

it("pn", _Any) ->
    "pn.it";

it("bas", _Any) ->
    "bas.it";

it("ao", _Any) ->
    "ao.it";

it("mar", _Any) ->
    "mar.it";

it("pt", _Any) ->
    "pt.it";

it("trentino", _Any) ->
    "trentino.it";

it("pd", _Any) ->
    "pd.it";

it("rg", _Any) ->
    "rg.it";

it("fe", _Any) ->
    "fe.it";

it("carraramassa", _Any) ->
    "carraramassa.it";

it("florence", _Any) ->
    "florence.it";

it("le", _Any) ->
    "le.it";

it("taranto", _Any) ->
    "taranto.it";

it("myspreadshop", _Any) ->
    "myspreadshop.it";

it("friuliveneziagiulia", _Any) ->
    "friuliveneziagiulia.it";

it("ap", _Any) ->
    "ap.it";

it("sar", _Any) ->
    "sar.it";

it("ge", _Any) ->
    "ge.it";

it("fm", _Any) ->
    "fm.it";

it("trapani", _Any) ->
    "trapani.it";

it("forlicesena", _Any) ->
    "forlicesena.it";

it("tp", _Any) ->
    "tp.it";

it("bo", _Any) ->
    "bo.it";

it("mantova", _Any) ->
    "mantova.it";

it("roma", _Any) ->
    "roma.it";

it("belluno", _Any) ->
    "belluno.it";

it("ven", _Any) ->
    "ven.it";

it("prato", _Any) ->
    "prato.it";

it("mediocampidano", _Any) ->
    "mediocampidano.it";

it("ts", _Any) ->
    "ts.it";

it("monzaebrianza", _Any) ->
    "monzaebrianza.it";

it("og", _Any) ->
    "og.it";

it("suedtirol", _Any) ->
    "suedtirol.it";

it("cuneo", _Any) ->
    "cuneo.it";

it("br", _Any) ->
    "br.it";

it("arezzo", _Any) ->
    "arezzo.it";

it("calabria", _Any) ->
    "calabria.it";

it("siena", _Any) ->
    "siena.it";

it("ogliastra", _Any) ->
    "ogliastra.it";

it("friulivgiulia", _Any) ->
    "friulivgiulia.it";

it("trentinostirol", _Any) ->
    "trentinostirol.it";

it("lucca", _Any) ->
    "lucca.it";


it(_, _) ->
    "it".

%% regular rules
tim_it("open", []) ->
    "open.tim.it";
tim_it("open", Parts) ->
    [First | Rest] = Parts,
    open_tim_it(First, Rest);


tim_it(_, _) ->
    "tim.it".

%% regular rules
open_tim_it("jelastic", []) ->
    "jelastic.open.tim.it";
open_tim_it("jelastic", Parts) ->
    [First | Rest] = Parts,
    jelastic_open_tim_it(First, Rest);


open_tim_it(_, _) ->
    "open.tim.it".

%% regular rules
jelastic_open_tim_it("cloud", _Any) ->
    "cloud.jelastic.open.tim.it";


jelastic_open_tim_it(_, _) ->
    "jelastic.open.tim.it".

%% regular rules
neen_it("jc", _Any) ->
    "jc.neen.it";


neen_it(_, _) ->
    "neen.it".

%% regular rules
tz("sc", _Any) ->
    "sc.tz";

tz("go", _Any) ->
    "go.tz";

tz("hotel", _Any) ->
    "hotel.tz";

tz("me", _Any) ->
    "me.tz";

tz("or", _Any) ->
    "or.tz";

tz("co", _Any) ->
    "co.tz";

tz("ac", _Any) ->
    "ac.tz";

tz("ne", _Any) ->
    "ne.tz";

tz("tv", _Any) ->
    "tv.tz";

tz("mil", _Any) ->
    "mil.tz";

tz("info", _Any) ->
    "info.tz";

tz("mobi", _Any) ->
    "mobi.tz";


tz(_, _) ->
    "tz".

%% regular rules
so("org", _Any) ->
    "org.so";

so("sch", _Any) ->
    "sch.so";

so("net", _Any) ->
    "net.so";

so("gov", _Any) ->
    "gov.so";

so("me", _Any) ->
    "me.so";

so("com", _Any) ->
    "com.so";

so("edu", _Any) ->
    "edu.so";


so(_, _) ->
    "so".

%% regular rules
be("webhosting", _Any) ->
    "webhosting.be";

be("interhostsolutions", []) ->
    "interhostsolutions.be";
be("interhostsolutions", Parts) ->
    [First | Rest] = Parts,
    interhostsolutions_be(First, Rest);

be("myspreadshop", _Any) ->
    "myspreadshop.be";

be("ac", _Any) ->
    "ac.be";

be("blogspot", _Any) ->
    "blogspot.be";

be("kuleuven", []) ->
    "kuleuven.be";
be("kuleuven", Parts) ->
    [First | Rest] = Parts,
    kuleuven_be(First, Rest);


be(_, _) ->
    "be".

%% regular rules
interhostsolutions_be("cloud", _Any) ->
    "cloud.interhostsolutions.be";


interhostsolutions_be(_, _) ->
    "interhostsolutions.be".

%% regular rules
kuleuven_be("ezproxy", _Any) ->
    "ezproxy.kuleuven.be";


kuleuven_be(_, _) ->
    "kuleuven.be".

%% regular rules
ca("bc", _Any) ->
    "bc.ca";

ca("blogspot", _Any) ->
    "blogspot.ca";

ca("yk", _Any) ->
    "yk.ca";

ca("nb", _Any) ->
    "nb.ca";

ca("pe", _Any) ->
    "pe.ca";

ca("barsy", _Any) ->
    "barsy.ca";

ca("nl", _Any) ->
    "nl.ca";

ca("nu", _Any) ->
    "nu.ca";

ca("ns", _Any) ->
    "ns.ca";

ca("on", _Any) ->
    "on.ca";

ca("nf", _Any) ->
    "nf.ca";

ca("myspreadshop", _Any) ->
    "myspreadshop.ca";

ca("co", _Any) ->
    "co.ca";

ca("qc", _Any) ->
    "qc.ca";

ca("gc", _Any) ->
    "gc.ca";

ca("ab", _Any) ->
    "ab.ca";

ca("nt", _Any) ->
    "nt.ca";

ca("mb", _Any) ->
    "mb.ca";

ca("sk", _Any) ->
    "sk.ca";


ca(_, _) ->
    "ca".

%% regular rules
gay("pages", _Any) ->
    "pages.gay";


gay(_, _) ->
    "gay".

%% regular rules
design("bss", _Any) ->
    "bss.design";


design(_, _) ->
    "design".

%% regular rules
mu("org", _Any) ->
    "org.mu";

mu("net", _Any) ->
    "net.mu";

mu("gov", _Any) ->
    "gov.mu";

mu("ac", _Any) ->
    "ac.mu";

mu("co", _Any) ->
    "co.mu";

mu("or", _Any) ->
    "or.mu";

mu("com", _Any) ->
    "com.mu";


mu(_, _) ->
    "mu".

%% regular rules
fr("avoues", _Any) ->
    "avoues.fr";

fr("blogspot", _Any) ->
    "blogspot.fr";

fr("ynh", _Any) ->
    "ynh.fr";

fr("goupile", _Any) ->
    "goupile.fr";

fr("asso", _Any) ->
    "asso.fr";

fr("veterinaire", _Any) ->
    "veterinaire.fr";

fr("medecin", _Any) ->
    "medecin.fr";

fr("cci", _Any) ->
    "cci.fr";

fr("gouv", _Any) ->
    "gouv.fr";

fr("nom", _Any) ->
    "nom.fr";

fr("avocat", _Any) ->
    "avocat.fr";

fr("dedibox", _Any) ->
    "dedibox.fr";

fr("aeroport", _Any) ->
    "aeroport.fr";

fr("greta", _Any) ->
    "greta.fr";

fr("chambagri", _Any) ->
    "chambagri.fr";

fr("fbxos", _Any) ->
    "fbxos.fr";

fr("com", _Any) ->
    "com.fr";

fr("pharmacien", _Any) ->
    "pharmacien.fr";

fr("freeboxos", _Any) ->
    "freeboxos.fr";

fr("prd", _Any) ->
    "prd.fr";

fr("tm", _Any) ->
    "tm.fr";

fr("port", _Any) ->
    "port.fr";

fr("myspreadshop", _Any) ->
    "myspreadshop.fr";

fr("notaires", _Any) ->
    "notaires.fr";


fr(_, _) ->
    "fr".

%% regular rules
gi("gov", _Any) ->
    "gov.gi";

gi("mod", _Any) ->
    "mod.gi";

gi("ltd", _Any) ->
    "ltd.gi";

gi("edu", _Any) ->
    "edu.gi";

gi("com", _Any) ->
    "com.gi";

gi("org", _Any) ->
    "org.gi";


gi(_, _) ->
    "gi".

%% regular rules
li("caa", _Any) ->
    "caa.li";

li("blogspot", _Any) ->
    "blogspot.li";


li(_, _) ->
    "li".

%% regular rules
xyz("blogsite", _Any) ->
    "blogsite.xyz";

xyz("zapto", _Any) ->
    "zapto.xyz";

xyz("crafting", _Any) ->
    "crafting.xyz";

xyz("localzone", _Any) ->
    "localzone.xyz";


xyz(_, _) ->
    "xyz".

%% regular rules
lu("blogspot", _Any) ->
    "blogspot.lu";


lu(_, _) ->
    "lu".

%% regular rules
tm("com", _Any) ->
    "com.tm";

tm("edu", _Any) ->
    "edu.tm";

tm("mil", _Any) ->
    "mil.tm";

tm("org", _Any) ->
    "org.tm";

tm("nom", _Any) ->
    "nom.tm";

tm("net", _Any) ->
    "net.tm";

tm("gov", _Any) ->
    "gov.tm";

tm("co", _Any) ->
    "co.tm";


tm(_, _) ->
    "tm".

%% regular rules
ki("gov", _Any) ->
    "gov.ki";

ki("org", _Any) ->
    "org.ki";

ki("biz", _Any) ->
    "biz.ki";

ki("net", _Any) ->
    "net.ki";

ki("com", _Any) ->
    "com.ki";

ki("edu", _Any) ->
    "edu.ki";

ki("info", _Any) ->
    "info.ki";


ki(_, _) ->
    "ki".

%% regular rules
gu("guam", _Any) ->
    "guam.gu";

gu("info", _Any) ->
    "info.gu";

gu("edu", _Any) ->
    "edu.gu";

gu("web", _Any) ->
    "web.gu";

gu("com", _Any) ->
    "com.gu";

gu("org", _Any) ->
    "org.gu";

gu("net", _Any) ->
    "net.gu";

gu("gov", _Any) ->
    "gov.gu";


gu(_, _) ->
    "gu".

%% regular rules
af("gov", _Any) ->
    "gov.af";

af("org", _Any) ->
    "org.af";

af("com", _Any) ->
    "com.af";

af("edu", _Any) ->
    "edu.af";

af("net", _Any) ->
    "net.af";


af(_, _) ->
    "af".

%% regular rules
arpa("iris", _Any) ->
    "iris.arpa";

arpa("uri", _Any) ->
    "uri.arpa";

arpa("urn", _Any) ->
    "urn.arpa";


arpa(_, _) ->
    "arpa".

%% regular rules
mg("co", _Any) ->
    "co.mg";

mg("gov", _Any) ->
    "gov.mg";

mg("tm", _Any) ->
    "tm.mg";

mg("org", _Any) ->
    "org.mg";

mg("prd", _Any) ->
    "prd.mg";

mg("nom", _Any) ->
    "nom.mg";

mg("mil", _Any) ->
    "mil.mg";

mg("edu", _Any) ->
    "edu.mg";

mg("com", _Any) ->
    "com.mg";


mg(_, _) ->
    "mg".

%% regular rules
biz("myftp", _Any) ->
    "myftp.biz";

biz("mmafan", _Any) ->
    "mmafan.biz";

biz("dyndns", _Any) ->
    "dyndns.biz";

biz("activetrail", _Any) ->
    "activetrail.biz";

biz("orx", _Any) ->
    "orx.biz";

biz("jozi", _Any) ->
    "jozi.biz";

biz("dscloud", _Any) ->
    "dscloud.biz";

biz("webhop", _Any) ->
    "webhop.biz";

biz("selfip", _Any) ->
    "selfip.biz";

biz("cloudns", _Any) ->
    "cloudns.biz";


biz(_, _) ->
    "biz".

%% regular rules
al("org", _Any) ->
    "org.al";

al("net", _Any) ->
    "net.al";

al("gov", _Any) ->
    "gov.al";

al("com", _Any) ->
    "com.al";

al("edu", _Any) ->
    "edu.al";

al("mil", _Any) ->
    "mil.al";

al("blogspot", _Any) ->
    "blogspot.al";


al(_, _) ->
    "al".

%% regular rules
ie("myspreadshop", _Any) ->
    "myspreadshop.ie";

ie("blogspot", _Any) ->
    "blogspot.ie";

ie("gov", _Any) ->
    "gov.ie";


ie(_, _) ->
    "ie".

%% regular rules
education("co", _Any) ->
    "co.education";


education(_, _) ->
    "education".

%% regular rules
rip("clan", _Any) ->
    "clan.rip";


rip(_, _) ->
    "rip".

%% regular rules
ba("org", _Any) ->
    "org.ba";

ba("net", _Any) ->
    "net.ba";

ba("gov", _Any) ->
    "gov.ba";

ba("rs", _Any) ->
    "rs.ba";

ba("edu", _Any) ->
    "edu.ba";

ba("com", _Any) ->
    "com.ba";

ba("mil", _Any) ->
    "mil.ba";

ba("blogspot", _Any) ->
    "blogspot.ba";


ba(_, _) ->
    "ba".

%% regular rules
sx("gov", _Any) ->
    "gov.sx";


sx(_, _) ->
    "sx".

%% regular rules
int("eu", _Any) ->
    "eu.int";


int(_, _) ->
    "int".

%% regular rules
bt("org", _Any) ->
    "org.bt";

bt("edu", _Any) ->
    "edu.bt";

bt("net", _Any) ->
    "net.bt";

bt("com", _Any) ->
    "com.bt";

bt("gov", _Any) ->
    "gov.bt";


bt(_, _) ->
    "bt".

%% regular rules
digital("cloudapps", []) ->
    "cloudapps.digital";
digital("cloudapps", Parts) ->
    [First | Rest] = Parts,
    cloudapps_digital(First, Rest);


digital(_, _) ->
    "digital".

%% regular rules
cloudapps_digital("london", _Any) ->
    "london.cloudapps.digital";


cloudapps_digital(_, _) ->
    "cloudapps.digital".

%% regular rules
host("mircloud", _Any) ->
    "mircloud.host";

host("pcloud", _Any) ->
    "pcloud.host";

host("myfast", _Any) ->
    "myfast.host";

host("wpmudev", _Any) ->
    "wpmudev.host";

host("cloudaccess", _Any) ->
    "cloudaccess.host";

host("easypanel", _Any) ->
    "easypanel.host";

host("half", _Any) ->
    "half.host";

host("tempurl", _Any) ->
    "tempurl.host";

host("jele", _Any) ->
    "jele.host";

host("freesite", _Any) ->
    "freesite.host";

host("fastvps", _Any) ->
    "fastvps.host";


host(_, _) ->
    "host".

%% regular rules
kg("io", _Any) ->
    "io.kg";

kg("gov", _Any) ->
    "gov.kg";

kg("jp", _Any) ->
    "jp.kg";

kg("org", _Any) ->
    "org.kg";

kg("net", _Any) ->
    "net.kg";

kg("uk", _Any) ->
    "uk.kg";

kg("mil", _Any) ->
    "mil.kg";

kg("tv", _Any) ->
    "tv.kg";

kg("us", _Any) ->
    "us.kg";

kg("com", _Any) ->
    "com.kg";

kg("edu", _Any) ->
    "edu.kg";


kg(_, _) ->
    "kg".

%% regular rules
club("jele", _Any) ->
    "jele.club";

club("barsy", _Any) ->
    "barsy.club";

club("cloudns", _Any) ->
    "cloudns.club";


club(_, _) ->
    "club".

%% regular rules
gg("co", _Any) ->
    "co.gg";

gg("panel", []) ->
    "panel.gg";
gg("panel", Parts) ->
    [First | Rest] = Parts,
    panel_gg(First, Rest);

gg("net", _Any) ->
    "net.gg";

gg("kaas", _Any) ->
    "kaas.gg";

gg("org", _Any) ->
    "org.gg";

gg("cya", _Any) ->
    "cya.gg";


gg(_, _) ->
    "gg".

%% regular rules
panel_gg("daemon", _Any) ->
    "daemon.panel.gg";


panel_gg(_, _) ->
    "panel.gg".

%% regular rules
shop("base", _Any) ->
    "base.shop";

shop("hoplix", _Any) ->
    "hoplix.shop";

shop("barsy", _Any) ->
    "barsy.shop";


shop(_, _) ->
    "shop".

%% regular rules
technology("co", _Any) ->
    "co.technology";


technology(_, _) ->
    "technology".

%% regular rules
org("nflfan", _Any) ->
    "nflfan.org";

org("serveftp", _Any) ->
    "serveftp.org";

org("bmoattachments", _Any) ->
    "bmoattachments.org";

org("boldlygoingnowhere", _Any) ->
    "boldlygoingnowhere.org";

org("hopto", _Any) ->
    "hopto.org";

org("doomdns", _Any) ->
    "doomdns.org";

org("duckdns", _Any) ->
    "duckdns.org";

org("pimienta", _Any) ->
    "pimienta.org";

org("dvrdns", _Any) ->
    "dvrdns.org";

org("tunk", _Any) ->
    "tunk.org";

org("webhop", _Any) ->
    "webhop.org";

org("myfirewall", _Any) ->
    "myfirewall.org";

org("za", _Any) ->
    "za.org";

org("cloudns", _Any) ->
    "cloudns.org";

org("fedorainfracloud", _Any) ->
    "fedorainfracloud.org";

org("ufcfan", _Any) ->
    "ufcfan.org";

org("dnsalias", _Any) ->
    "dnsalias.org";

org("homeftp", _Any) ->
    "homeftp.org";

org("collegefan", _Any) ->
    "collegefan.org";

org("homeunix", _Any) ->
    "homeunix.org";

org("camdvr", _Any) ->
    "camdvr.org";

org("jpn", _Any) ->
    "jpn.org";

org("mysecuritycamera", _Any) ->
    "mysecuritycamera.org";

org("fedorapeople", _Any) ->
    "fedorapeople.org";

org("certmgr", _Any) ->
    "certmgr.org";

org("dyndns", []) ->
    "dyndns.org";
org("dyndns", Parts) ->
    [First | Rest] = Parts,
    dyndns_org(First, Rest);

org("myftp", _Any) ->
    "myftp.org";

org("wmflabs", _Any) ->
    "wmflabs.org";

org("us", _Any) ->
    "us.org";

org("ae", _Any) ->
    "ae.org";

org("selfip", _Any) ->
    "selfip.org";

org("hepforge", _Any) ->
    "hepforge.org";

org("blogsite", _Any) ->
    "blogsite.org";

org("eu", []) ->
    "eu.org";
org("eu", Parts) ->
    [First | Rest] = Parts,
    eu_org(First, Rest);

org("spdns", _Any) ->
    "spdns.org";

org("homelinux", _Any) ->
    "homelinux.org";

org("amune", []) ->
    "amune.org";
org("amune", Parts) ->
    [First | Rest] = Parts,
    amune_org(First, Rest);

org("gotdns", _Any) ->
    "gotdns.org";

org("potager", _Any) ->
    "potager.org";

org("blogdns", _Any) ->
    "blogdns.org";

org("barsy", _Any) ->
    "barsy.org";

org("misconfused", _Any) ->
    "misconfused.org";

org("couchpotatofries", _Any) ->
    "couchpotatofries.org";

org("fedoraproject", []) ->
    "fedoraproject.org";
org("fedoraproject", Parts) ->
    [First | Rest] = Parts,
    fedoraproject_org(First, Rest);

org("webredirect", _Any) ->
    "webredirect.org";

org("accesscam", _Any) ->
    "accesscam.org";

org("mywire", _Any) ->
    "mywire.org";

org("dnsdojo", _Any) ->
    "dnsdojo.org";

org("endofinternet", _Any) ->
    "endofinternet.org";

org("familyds", _Any) ->
    "familyds.org";

org("hk", _Any) ->
    "hk.org";

org("servebbs", _Any) ->
    "servebbs.org";

org("dontexist", _Any) ->
    "dontexist.org";

org("dynalias", _Any) ->
    "dynalias.org";

org("servegame", _Any) ->
    "servegame.org";

org("pubtls", _Any) ->
    "pubtls.org";

org("js", _Any) ->
    "js.org";

org("mlbfan", _Any) ->
    "mlbfan.org";

org("freeddns", _Any) ->
    "freeddns.org";

org("wmcloud", _Any) ->
    "wmcloud.org";

org("tuxfamily", _Any) ->
    "tuxfamily.org";

org("doesntexist", _Any) ->
    "doesntexist.org";

org("podzone", _Any) ->
    "podzone.org";

org("toolforge", _Any) ->
    "toolforge.org";

org("homedns", _Any) ->
    "homedns.org";

org("diskstation", _Any) ->
    "diskstation.org";

org("zapto", _Any) ->
    "zapto.org";

org("mayfirst", _Any) ->
    "mayfirst.org";

org("dsmynas", _Any) ->
    "dsmynas.org";

org("readmyblog", _Any) ->
    "readmyblog.org";

org("ddnss", _Any) ->
    "ddnss.org";

org("dynserv", _Any) ->
    "dynserv.org";

org("httpbin", _Any) ->
    "httpbin.org";

org("freedesktop", _Any) ->
    "freedesktop.org";

org("poivron", _Any) ->
    "poivron.org";

org("endoftheinternet", _Any) ->
    "endoftheinternet.org";

org("twmail", _Any) ->
    "twmail.org";

org("sellsyourhome", _Any) ->
    "sellsyourhome.org";

org("altervista", _Any) ->
    "altervista.org";

org("sweetpepper", _Any) ->
    "sweetpepper.org";


org(_, _) ->
    "org".

%% regular rules
dyndns_org("go", _Any) ->
    "go.dyndns.org";

dyndns_org("home", _Any) ->
    "home.dyndns.org";


dyndns_org(_, _) ->
    "dyndns.org".

%% regular rules
eu_org("cy", _Any) ->
    "cy.eu.org";

eu_org("int", _Any) ->
    "int.eu.org";

eu_org("ie", _Any) ->
    "ie.eu.org";

eu_org("edu", _Any) ->
    "edu.eu.org";

eu_org("se", _Any) ->
    "se.eu.org";

eu_org("ee", _Any) ->
    "ee.eu.org";

eu_org("au", _Any) ->
    "au.eu.org";

eu_org("mk", _Any) ->
    "mk.eu.org";

eu_org("dk", _Any) ->
    "dk.eu.org";

eu_org("asso", _Any) ->
    "asso.eu.org";

eu_org("us", _Any) ->
    "us.eu.org";

eu_org("fi", _Any) ->
    "fi.eu.org";

eu_org("hu", _Any) ->
    "hu.eu.org";

eu_org("paris", _Any) ->
    "paris.eu.org";

eu_org("is", _Any) ->
    "is.eu.org";

eu_org("lu", _Any) ->
    "lu.eu.org";

eu_org("es", _Any) ->
    "es.eu.org";

eu_org("lv", _Any) ->
    "lv.eu.org";

eu_org("si", _Any) ->
    "si.eu.org";

eu_org("ru", _Any) ->
    "ru.eu.org";

eu_org("mt", _Any) ->
    "mt.eu.org";

eu_org("ng", _Any) ->
    "ng.eu.org";

eu_org("be", _Any) ->
    "be.eu.org";

eu_org("in", _Any) ->
    "in.eu.org";

eu_org("cn", _Any) ->
    "cn.eu.org";

eu_org("mc", _Any) ->
    "mc.eu.org";

eu_org("ca", _Any) ->
    "ca.eu.org";

eu_org("nl", _Any) ->
    "nl.eu.org";

eu_org("hr", _Any) ->
    "hr.eu.org";

eu_org("it", _Any) ->
    "it.eu.org";

eu_org("cd", _Any) ->
    "cd.eu.org";

eu_org("pt", _Any) ->
    "pt.eu.org";

eu_org("kr", _Any) ->
    "kr.eu.org";

eu_org("nz", _Any) ->
    "nz.eu.org";

eu_org("at", _Any) ->
    "at.eu.org";

eu_org("uk", _Any) ->
    "uk.eu.org";

eu_org("bg", _Any) ->
    "bg.eu.org";

eu_org("il", _Any) ->
    "il.eu.org";

eu_org("sk", _Any) ->
    "sk.eu.org";

eu_org("net", _Any) ->
    "net.eu.org";

eu_org("gr", _Any) ->
    "gr.eu.org";

eu_org("ch", _Any) ->
    "ch.eu.org";

eu_org("lt", _Any) ->
    "lt.eu.org";

eu_org("tr", _Any) ->
    "tr.eu.org";

eu_org("no", _Any) ->
    "no.eu.org";

eu_org("al", _Any) ->
    "al.eu.org";

eu_org("my", _Any) ->
    "my.eu.org";

eu_org("fr", _Any) ->
    "fr.eu.org";

eu_org("jp", _Any) ->
    "jp.eu.org";

eu_org("de", _Any) ->
    "de.eu.org";

eu_org("pl", _Any) ->
    "pl.eu.org";

eu_org("me", _Any) ->
    "me.eu.org";

eu_org("ro", _Any) ->
    "ro.eu.org";

eu_org("cz", _Any) ->
    "cz.eu.org";


eu_org(_, _) ->
    "eu.org".

%% regular rules
amune_org("tele", _Any) ->
    "tele.amune.org";


amune_org(_, _) ->
    "amune.org".

%% regular rules
fedoraproject_org("stg", []) ->
    "stg.fedoraproject.org";
fedoraproject_org("stg", Parts) ->
    [First | Rest] = Parts,
    stg_fedoraproject_org(First, Rest);

fedoraproject_org("os", []) ->
    "os.fedoraproject.org";
fedoraproject_org("os", Parts) ->
    [First | Rest] = Parts,
    os_fedoraproject_org(First, Rest);

fedoraproject_org("cloud", _Any) ->
    "cloud.fedoraproject.org";


fedoraproject_org(_, _) ->
    "fedoraproject.org".

%% regular rules
stg_fedoraproject_org("os", []) ->
    "os.stg.fedoraproject.org";
stg_fedoraproject_org("os", Parts) ->
    [First | Rest] = Parts,
    os_stg_fedoraproject_org(First, Rest);


stg_fedoraproject_org(_, _) ->
    "stg.fedoraproject.org".

%% regular rules
os_stg_fedoraproject_org("app", _Any) ->
    "app.os.stg.fedoraproject.org";


os_stg_fedoraproject_org(_, _) ->
    "os.stg.fedoraproject.org".

%% regular rules
os_fedoraproject_org("app", _Any) ->
    "app.os.fedoraproject.org";


os_fedoraproject_org(_, _) ->
    "os.fedoraproject.org".

%% regular rules
do("art", _Any) ->
    "art.do";

do("net", _Any) ->
    "net.do";

do("gob", _Any) ->
    "gob.do";

do("org", _Any) ->
    "org.do";

do("gov", _Any) ->
    "gov.do";

do("edu", _Any) ->
    "edu.do";

do("com", _Any) ->
    "com.do";

do("web", _Any) ->
    "web.do";

do("sld", _Any) ->
    "sld.do";

do("mil", _Any) ->
    "mil.do";


do(_, _) ->
    "do".

%% regular rules
nl("myspreadshop", _Any) ->
    "myspreadshop.nl";

nl("demon", _Any) ->
    "demon.nl";

nl("cistron", _Any) ->
    "cistron.nl";

nl("co", _Any) ->
    "co.nl";

nl("gov", _Any) ->
    "gov.nl";

nl("khplay", _Any) ->
    "khplay.nl";

nl("blogspot", _Any) ->
    "blogspot.nl";


nl(_, _) ->
    "nl".

%% regular rules
financial("co", _Any) ->
    "co.financial";


financial(_, _) ->
    "financial".

%% regular rules
pn("net", _Any) ->
    "net.pn";

pn("edu", _Any) ->
    "edu.pn";

pn("org", _Any) ->
    "org.pn";

pn("co", _Any) ->
    "co.pn";

pn("gov", _Any) ->
    "gov.pn";


pn(_, _) ->
    "pn".

%% regular rules
tw("ebiz", _Any) ->
    "ebiz.tw";

tw("idv", _Any) ->
    "idv.tw";

tw("blogspot", _Any) ->
    "blogspot.tw";

tw("club", _Any) ->
    "club.tw";

tw("org", _Any) ->
    "org.tw";

tw("mil", _Any) ->
    "mil.tw";

tw("game", _Any) ->
    "game.tw";

tw("edu", _Any) ->
    "edu.tw";

tw("url", _Any) ->
    "url.tw";

tw("com", []) ->
    "com.tw";
tw("com", Parts) ->
    [First | Rest] = Parts,
    com_tw(First, Rest);

tw("gov", _Any) ->
    "gov.tw";

tw("net", _Any) ->
    "net.tw";


tw(_, _) ->
    "tw".

%% regular rules
com_tw("mymailer", _Any) ->
    "mymailer.com.tw";


com_tw(_, _) ->
    "com.tw".

%% regular rules
nf("per", _Any) ->
    "per.nf";

nf("store", _Any) ->
    "store.nf";

nf("rec", _Any) ->
    "rec.nf";

nf("net", _Any) ->
    "net.nf";

nf("other", _Any) ->
    "other.nf";

nf("firm", _Any) ->
    "firm.nf";

nf("web", _Any) ->
    "web.nf";

nf("com", _Any) ->
    "com.nf";

nf("info", _Any) ->
    "info.nf";

nf("arts", _Any) ->
    "arts.nf";


nf(_, _) ->
    "nf".

%% regular rules
to("mil", _Any) ->
    "mil.to";

to("nyan", _Any) ->
    "nyan.to";

to("edu", _Any) ->
    "edu.to";

to("quickconnect", []) ->
    "quickconnect.to";
to("quickconnect", Parts) ->
    [First | Rest] = Parts,
    quickconnect_to(First, Rest);

to("vpnplus", _Any) ->
    "vpnplus.to";

to("com", _Any) ->
    "com.to";

to("oya", _Any) ->
    "oya.to";

to("rdv", _Any) ->
    "rdv.to";

to("gov", _Any) ->
    "gov.to";

to("org", _Any) ->
    "org.to";

to("net", _Any) ->
    "net.to";


to(_, _) ->
    "to".

%% regular rules
quickconnect_to("direct", _Any) ->
    "direct.quickconnect.to";


quickconnect_to(_, _) ->
    "quickconnect.to".

%% regular rules
sz("ac", _Any) ->
    "ac.sz";

sz("co", _Any) ->
    "co.sz";

sz("org", _Any) ->
    "org.sz";


sz(_, _) ->
    "sz".

%% regular rules
community("nog", _Any) ->
    "nog.community";

community("ravendb", _Any) ->
    "ravendb.community";

community("myforum", _Any) ->
    "myforum.community";


community(_, _) ->
    "community".

%% regular rules
aero("crew", _Any) ->
    "crew.aero";

aero("government", _Any) ->
    "government.aero";

aero("safety", _Any) ->
    "safety.aero";

aero("services", _Any) ->
    "services.aero";

aero("skydiving", _Any) ->
    "skydiving.aero";

aero("software", _Any) ->
    "software.aero";

aero("airline", _Any) ->
    "airline.aero";

aero("trainer", _Any) ->
    "trainer.aero";

aero("aerobatic", _Any) ->
    "aerobatic.aero";

aero("scientist", _Any) ->
    "scientist.aero";

aero("aeroclub", _Any) ->
    "aeroclub.aero";

aero("press", _Any) ->
    "press.aero";

aero("fuel", _Any) ->
    "fuel.aero";

aero("homebuilt", _Any) ->
    "homebuilt.aero";

aero("charter", _Any) ->
    "charter.aero";

aero("recreation", _Any) ->
    "recreation.aero";

aero("federation", _Any) ->
    "federation.aero";

aero("caa", _Any) ->
    "caa.aero";

aero("engine", _Any) ->
    "engine.aero";

aero("media", _Any) ->
    "media.aero";

aero("journalist", _Any) ->
    "journalist.aero";

aero("union", _Any) ->
    "union.aero";

aero("consulting", _Any) ->
    "consulting.aero";

aero("association", _Any) ->
    "association.aero";

aero("amusement", _Any) ->
    "amusement.aero";

aero("aerodrome", _Any) ->
    "aerodrome.aero";

aero("equipment", _Any) ->
    "equipment.aero";

aero("author", _Any) ->
    "author.aero";

aero("journal", _Any) ->
    "journal.aero";

aero("repbody", _Any) ->
    "repbody.aero";

aero("civilaviation", _Any) ->
    "civilaviation.aero";

aero("res", _Any) ->
    "res.aero";

aero("navigation", _Any) ->
    "navigation.aero";

aero("ballooning", _Any) ->
    "ballooning.aero";

aero("control", _Any) ->
    "control.aero";

aero("show", _Any) ->
    "show.aero";

aero("logistics", _Any) ->
    "logistics.aero";

aero("exchange", _Any) ->
    "exchange.aero";

aero("educator", _Any) ->
    "educator.aero";

aero("design", _Any) ->
    "design.aero";

aero("workinggroup", _Any) ->
    "workinggroup.aero";

aero("ambulance", _Any) ->
    "ambulance.aero";

aero("hanggliding", _Any) ->
    "hanggliding.aero";

aero("leasing", _Any) ->
    "leasing.aero";

aero("catering", _Any) ->
    "catering.aero";

aero("works", _Any) ->
    "works.aero";

aero("rotorcraft", _Any) ->
    "rotorcraft.aero";

aero("cargo", _Any) ->
    "cargo.aero";

aero("certification", _Any) ->
    "certification.aero";

aero("production", _Any) ->
    "production.aero";

aero("championship", _Any) ->
    "championship.aero";

aero("express", _Any) ->
    "express.aero";

aero("student", _Any) ->
    "student.aero";

aero("insurance", _Any) ->
    "insurance.aero";

aero("paragliding", _Any) ->
    "paragliding.aero";

aero("trader", _Any) ->
    "trader.aero";

aero("gliding", _Any) ->
    "gliding.aero";

aero("airport", _Any) ->
    "airport.aero";

aero("airtraffic", _Any) ->
    "airtraffic.aero";

aero("aircraft", _Any) ->
    "aircraft.aero";

aero("club", _Any) ->
    "club.aero";

aero("pilot", _Any) ->
    "pilot.aero";

aero("groundhandling", _Any) ->
    "groundhandling.aero";

aero("emergency", _Any) ->
    "emergency.aero";

aero("group", _Any) ->
    "group.aero";

aero("council", _Any) ->
    "council.aero";

aero("flight", _Any) ->
    "flight.aero";

aero("entertainment", _Any) ->
    "entertainment.aero";

aero("research", _Any) ->
    "research.aero";

aero("maintenance", _Any) ->
    "maintenance.aero";

aero("microlight", _Any) ->
    "microlight.aero";

aero("modelling", _Any) ->
    "modelling.aero";

aero("engineer", _Any) ->
    "engineer.aero";

aero("broker", _Any) ->
    "broker.aero";

aero("trading", _Any) ->
    "trading.aero";

aero("conference", _Any) ->
    "conference.aero";

aero("magazine", _Any) ->
    "magazine.aero";

aero("consultant", _Any) ->
    "consultant.aero";

aero("dgca", _Any) ->
    "dgca.aero";

aero("parachuting", _Any) ->
    "parachuting.aero";

aero("agents", _Any) ->
    "agents.aero";


aero(_, _) ->
    "aero".

%% regular rules
br("riopreto", _Any) ->
    "riopreto.br";

br("org", _Any) ->
    "org.br";

br("flog", _Any) ->
    "flog.br";

br("joinville", _Any) ->
    "joinville.br";

br("adm", _Any) ->
    "adm.br";

br("rep", _Any) ->
    "rep.br";

br("bmd", _Any) ->
    "bmd.br";

br("santoandre", _Any) ->
    "santoandre.br";

br("campinas", _Any) ->
    "campinas.br";

br("fot", _Any) ->
    "fot.br";

br("wiki", _Any) ->
    "wiki.br";

br("gru", _Any) ->
    "gru.br";

br("com", []) ->
    "com.br";
br("com", Parts) ->
    [First | Rest] = Parts,
    com_br(First, Rest);

br("ind", _Any) ->
    "ind.br";

br("bhz", _Any) ->
    "bhz.br";

br("mus", _Any) ->
    "mus.br";

br("tv", _Any) ->
    "tv.br";

br("esp", _Any) ->
    "esp.br";

br("maringa", _Any) ->
    "maringa.br";

br("morena", _Any) ->
    "morena.br";

br("med", _Any) ->
    "med.br";

br("ggf", _Any) ->
    "ggf.br";

br("emp", _Any) ->
    "emp.br";

br("teo", _Any) ->
    "teo.br";

br("vet", _Any) ->
    "vet.br";

br("geo", _Any) ->
    "geo.br";

br("cnt", _Any) ->
    "cnt.br";

br("art", _Any) ->
    "art.br";

br("ntr", _Any) ->
    "ntr.br";

br("trd", _Any) ->
    "trd.br";

br("macapa", _Any) ->
    "macapa.br";

br("edu", _Any) ->
    "edu.br";

br("slg", _Any) ->
    "slg.br";

br("etc", _Any) ->
    "etc.br";

br("mil", _Any) ->
    "mil.br";

br("zlg", _Any) ->
    "zlg.br";

br("cuiaba", _Any) ->
    "cuiaba.br";

br("riobranco", _Any) ->
    "riobranco.br";

br("tec", _Any) ->
    "tec.br";

br("eti", _Any) ->
    "eti.br";

br("imb", _Any) ->
    "imb.br";

br("taxi", _Any) ->
    "taxi.br";

br("palmas", _Any) ->
    "palmas.br";

br("aparecida", _Any) ->
    "aparecida.br";

br("the", _Any) ->
    "the.br";

br("osasco", _Any) ->
    "osasco.br";

br("poa", _Any) ->
    "poa.br";

br("odo", _Any) ->
    "odo.br";

br("floripa", _Any) ->
    "floripa.br";

br("jampa", _Any) ->
    "jampa.br";

br("londrina", _Any) ->
    "londrina.br";

br("foz", _Any) ->
    "foz.br";

br("lel", _Any) ->
    "lel.br";

br("dev", _Any) ->
    "dev.br";

br("fortal", _Any) ->
    "fortal.br";

br("ecn", _Any) ->
    "ecn.br";

br("cim", _Any) ->
    "cim.br";

br("goiania", _Any) ->
    "goiania.br";

br("qsl", _Any) ->
    "qsl.br";

br("bio", _Any) ->
    "bio.br";

br("caxias", _Any) ->
    "caxias.br";

br("blog", _Any) ->
    "blog.br";

br("tur", _Any) ->
    "tur.br";

br("ppg", _Any) ->
    "ppg.br";

br("santamaria", _Any) ->
    "santamaria.br";

br("fst", _Any) ->
    "fst.br";

br("vlog", _Any) ->
    "vlog.br";

br("def", _Any) ->
    "def.br";

br("adv", _Any) ->
    "adv.br";

br("manaus", _Any) ->
    "manaus.br";

br("maceio", _Any) ->
    "maceio.br";

br("recife", _Any) ->
    "recife.br";

br("det", _Any) ->
    "det.br";

br("jdf", _Any) ->
    "jdf.br";

br("fm", _Any) ->
    "fm.br";

br("des", _Any) ->
    "des.br";

br("ong", _Any) ->
    "ong.br";

br("feira", _Any) ->
    "feira.br";

br("sampa", _Any) ->
    "sampa.br";

br("rio", _Any) ->
    "rio.br";

br("cng", _Any) ->
    "cng.br";

br("app", _Any) ->
    "app.br";

br("not", _Any) ->
    "not.br";

br("tmp", _Any) ->
    "tmp.br";

br("eng", _Any) ->
    "eng.br";

br("ribeirao", _Any) ->
    "ribeirao.br";

br("eco", _Any) ->
    "eco.br";

br("bib", _Any) ->
    "bib.br";

br("arq", _Any) ->
    "arq.br";

br("saobernardo", _Any) ->
    "saobernardo.br";

br("jus", _Any) ->
    "jus.br";

br("coop", _Any) ->
    "coop.br";

br("salvador", _Any) ->
    "salvador.br";

br("curitiba", _Any) ->
    "curitiba.br";

br("far", _Any) ->
    "far.br";

br("psi", _Any) ->
    "psi.br";

br("pvh", _Any) ->
    "pvh.br";

br("bsb", _Any) ->
    "bsb.br";

br("am", _Any) ->
    "am.br";

br("tc", _Any) ->
    "tc.br";

br("fnd", _Any) ->
    "fnd.br";

br("log", _Any) ->
    "log.br";

br("vix", _Any) ->
    "vix.br";

br("rec", _Any) ->
    "rec.br";

br("enf", _Any) ->
    "enf.br";

br("mat", _Any) ->
    "mat.br";

br("inf", _Any) ->
    "inf.br";

br("ato", _Any) ->
    "ato.br";

br("sjc", _Any) ->
    "sjc.br";

br("saogonca", _Any) ->
    "saogonca.br";

br("psc", _Any) ->
    "psc.br";

br("radio", _Any) ->
    "radio.br";

br("jab", _Any) ->
    "jab.br";

br("niteroi", _Any) ->
    "niteroi.br";

br("net", _Any) ->
    "net.br";

br("barueri", _Any) ->
    "barueri.br";

br("slz", _Any) ->
    "slz.br";

br("jor", _Any) ->
    "jor.br";

br("b", _Any) ->
    "b.br";

br("anani", _Any) ->
    "anani.br";

br("gov", []) ->
    "gov.br";
br("gov", Parts) ->
    [First | Rest] = Parts,
    gov_br(First, Rest);

br("seg", _Any) ->
    "seg.br";

br("agr", _Any) ->
    "agr.br";

br("contagem", _Any) ->
    "contagem.br";

br("aju", _Any) ->
    "aju.br";

br("belem", _Any) ->
    "belem.br";

br("cri", _Any) ->
    "cri.br";

br("pro", _Any) ->
    "pro.br";

br("campinagrande", _Any) ->
    "campinagrande.br";

br("boavista", _Any) ->
    "boavista.br";

br("mp", _Any) ->
    "mp.br";

br("srv", _Any) ->
    "srv.br";

br("sorocaba", _Any) ->
    "sorocaba.br";

br("natal", _Any) ->
    "natal.br";

br("leg", []) ->
    "leg.br";
br("leg", Parts) ->
    [First | Rest] = Parts,
    leg_br(First, Rest);

br("coz", _Any) ->
    "coz.br";

br("abc", _Any) ->
    "abc.br";

br("udi", _Any) ->
    "udi.br";


br(_, _) ->
    "br".

%% regular rules
com_br("blogspot", _Any) ->
    "blogspot.com.br";

com_br("simplesite", _Any) ->
    "simplesite.com.br";


com_br(_, _) ->
    "com.br".

%% regular rules
gov_br("am", _Any) ->
    "am.gov.br";

gov_br("pr", _Any) ->
    "pr.gov.br";

gov_br("ce", _Any) ->
    "ce.gov.br";

gov_br("pb", _Any) ->
    "pb.gov.br";

gov_br("ba", _Any) ->
    "ba.gov.br";

gov_br("se", _Any) ->
    "se.gov.br";

gov_br("rj", _Any) ->
    "rj.gov.br";

gov_br("rs", _Any) ->
    "rs.gov.br";

gov_br("pa", _Any) ->
    "pa.gov.br";

gov_br("ms", _Any) ->
    "ms.gov.br";

gov_br("pe", _Any) ->
    "pe.gov.br";

gov_br("rr", _Any) ->
    "rr.gov.br";

gov_br("ap", _Any) ->
    "ap.gov.br";

gov_br("ac", _Any) ->
    "ac.gov.br";

gov_br("pi", _Any) ->
    "pi.gov.br";

gov_br("mg", _Any) ->
    "mg.gov.br";

gov_br("es", _Any) ->
    "es.gov.br";

gov_br("to", _Any) ->
    "to.gov.br";

gov_br("mt", _Any) ->
    "mt.gov.br";

gov_br("rn", _Any) ->
    "rn.gov.br";

gov_br("ro", _Any) ->
    "ro.gov.br";

gov_br("df", _Any) ->
    "df.gov.br";

gov_br("al", _Any) ->
    "al.gov.br";

gov_br("go", _Any) ->
    "go.gov.br";

gov_br("sc", _Any) ->
    "sc.gov.br";

gov_br("sp", _Any) ->
    "sp.gov.br";

gov_br("ma", _Any) ->
    "ma.gov.br";


gov_br(_, _) ->
    "gov.br".

%% regular rules
leg_br("rj", _Any) ->
    "rj.leg.br";

leg_br("ba", _Any) ->
    "ba.leg.br";

leg_br("se", _Any) ->
    "se.leg.br";

leg_br("pr", _Any) ->
    "pr.leg.br";

leg_br("ce", _Any) ->
    "ce.leg.br";

leg_br("am", _Any) ->
    "am.leg.br";

leg_br("pb", _Any) ->
    "pb.leg.br";

leg_br("ms", _Any) ->
    "ms.leg.br";

leg_br("pe", _Any) ->
    "pe.leg.br";

leg_br("pa", _Any) ->
    "pa.leg.br";

leg_br("rs", _Any) ->
    "rs.leg.br";

leg_br("mg", _Any) ->
    "mg.leg.br";

leg_br("pi", _Any) ->
    "pi.leg.br";

leg_br("ac", _Any) ->
    "ac.leg.br";

leg_br("es", _Any) ->
    "es.leg.br";

leg_br("ap", _Any) ->
    "ap.leg.br";

leg_br("rr", _Any) ->
    "rr.leg.br";

leg_br("ma", _Any) ->
    "ma.leg.br";

leg_br("sp", _Any) ->
    "sp.leg.br";

leg_br("df", _Any) ->
    "df.leg.br";

leg_br("al", _Any) ->
    "al.leg.br";

leg_br("go", _Any) ->
    "go.leg.br";

leg_br("sc", _Any) ->
    "sc.leg.br";

leg_br("ro", _Any) ->
    "ro.leg.br";

leg_br("to", _Any) ->
    "to.leg.br";

leg_br("mt", _Any) ->
    "mt.leg.br";

leg_br("rn", _Any) ->
    "rn.leg.br";


leg_br(_, _) ->
    "leg.br".

%% regular rules
cv("edu", _Any) ->
    "edu.cv";

cv("int", _Any) ->
    "int.cv";

cv("com", _Any) ->
    "com.cv";

cv("org", _Any) ->
    "org.cv";

cv("blogspot", _Any) ->
    "blogspot.cv";

cv("nome", _Any) ->
    "nome.cv";


cv(_, _) ->
    "cv".

%% regular rules
eg("org", _Any) ->
    "org.eg";

eg("net", _Any) ->
    "net.eg";

eg("gov", _Any) ->
    "gov.eg";

eg("name", _Any) ->
    "name.eg";

eg("sci", _Any) ->
    "sci.eg";

eg("edu", _Any) ->
    "edu.eg";

eg("eun", _Any) ->
    "eun.eg";

eg("com", []) ->
    "com.eg";
eg("com", Parts) ->
    [First | Rest] = Parts,
    com_eg(First, Rest);

eg("mil", _Any) ->
    "mil.eg";


eg(_, _) ->
    "eg".

%% regular rules
com_eg("blogspot", _Any) ->
    "blogspot.com.eg";


com_eg(_, _) ->
    "com.eg".

%% regular rules
bh("gov", _Any) ->
    "gov.bh";

bh("edu", _Any) ->
    "edu.bh";

bh("net", _Any) ->
    "net.bh";

bh("com", _Any) ->
    "com.bh";

bh("org", _Any) ->
    "org.bh";


bh(_, _) ->
    "bh".

%% regular rules
as("gov", _Any) ->
    "gov.as";


as(_, _) ->
    "as".

%% regular rules
cool("elementor", _Any) ->
    "elementor.cool";

cool("de", _Any) ->
    "de.cool";


cool(_, _) ->
    "cool".

%% regular rules
je("co", _Any) ->
    "co.je";

je("net", _Any) ->
    "net.je";

je("of", _Any) ->
    "of.je";

je("org", _Any) ->
    "org.je";


je(_, _) ->
    "je".

%% regular rules
kn("gov", _Any) ->
    "gov.kn";

kn("net", _Any) ->
    "net.kn";

kn("edu", _Any) ->
    "edu.kn";

kn("org", _Any) ->
    "org.kn";


kn(_, _) ->
    "kn".

%% regular rules
orange("tech", _Any) ->
    "tech.orange";


orange(_, _) ->
    "orange".

%% regular rules
uk("barsy", _Any) ->
    "barsy.uk";

uk("ltd", _Any) ->
    "ltd.uk";

uk("net", _Any) ->
    "net.uk";

uk("police", _Any) ->
    "police.uk";

uk("hosp", _Any) ->
    "hosp.uk";

uk("copro", _Any) ->
    "copro.uk";

uk("gov", []) ->
    "gov.uk";
uk("gov", Parts) ->
    [First | Rest] = Parts,
    gov_uk(First, Rest);

uk("co", []) ->
    "co.uk";
uk("co", Parts) ->
    [First | Rest] = Parts,
    co_uk(First, Rest);

uk("ac", _Any) ->
    "ac.uk";

uk("pymnt", _Any) ->
    "pymnt.uk";

uk("plc", _Any) ->
    "plc.uk";

uk("me", _Any) ->
    "me.uk";

uk("conn", _Any) ->
    "conn.uk";

uk("org", []) ->
    "org.uk";
uk("org", Parts) ->
    [First | Rest] = Parts,
    org_uk(First, Rest);

uk("nhs", _Any) ->
    "nhs.uk";


uk(_, _) ->
    "uk".

%% regular rules
gov_uk("service", _Any) ->
    "service.gov.uk";

gov_uk("campaign", _Any) ->
    "campaign.gov.uk";

gov_uk("api", _Any) ->
    "api.gov.uk";


gov_uk(_, _) ->
    "gov.uk".

%% regular rules
co_uk("wellbeingzone", _Any) ->
    "wellbeingzone.co.uk";

co_uk("barsyonline", _Any) ->
    "barsyonline.co.uk";

co_uk("bytemark", []) ->
    "bytemark.co.uk";
co_uk("bytemark", Parts) ->
    [First | Rest] = Parts,
    bytemark_co_uk(First, Rest);

co_uk("myspreadshop", _Any) ->
    "myspreadshop.co.uk";

co_uk("adimo", _Any) ->
    "adimo.co.uk";

co_uk("barsy", _Any) ->
    "barsy.co.uk";

co_uk("layershift", []) ->
    "layershift.co.uk";
co_uk("layershift", Parts) ->
    [First | Rest] = Parts,
    layershift_co_uk(First, Rest);

co_uk("retrosnub", []) ->
    "retrosnub.co.uk";
co_uk("retrosnub", Parts) ->
    [First | Rest] = Parts,
    retrosnub_co_uk(First, Rest);

co_uk("blogspot", _Any) ->
    "blogspot.co.uk";


co_uk(_, _) ->
    "co.uk".

%% regular rules
bytemark_co_uk("vm", _Any) ->
    "vm.bytemark.co.uk";

bytemark_co_uk("dh", _Any) ->
    "dh.bytemark.co.uk";


bytemark_co_uk(_, _) ->
    "bytemark.co.uk".

%% regular rules
layershift_co_uk("j", _Any) ->
    "j.layershift.co.uk";


layershift_co_uk(_, _) ->
    "layershift.co.uk".

%% regular rules
retrosnub_co_uk("cust", _Any) ->
    "cust.retrosnub.co.uk";


retrosnub_co_uk(_, _) ->
    "retrosnub.co.uk".

%% regular rules
org_uk("lugs", _Any) ->
    "lugs.org.uk";

org_uk("raffleentry", _Any) ->
    "raffleentry.org.uk";

org_uk("affinitylottery", _Any) ->
    "affinitylottery.org.uk";

org_uk("lug", _Any) ->
    "lug.org.uk";

org_uk("weeklylottery", _Any) ->
    "weeklylottery.org.uk";

org_uk("glug", _Any) ->
    "glug.org.uk";


org_uk(_, _) ->
    "org.uk".

%% regular rules
cr("fi", _Any) ->
    "fi.cr";

cr("or", _Any) ->
    "or.cr";

cr("ed", _Any) ->
    "ed.cr";

cr("sa", _Any) ->
    "sa.cr";

cr("go", _Any) ->
    "go.cr";

cr("ac", _Any) ->
    "ac.cr";

cr("co", _Any) ->
    "co.cr";


cr(_, _) ->
    "cr".

%% regular rules
ir("sch", _Any) ->
    "sch.ir";

ir("org", _Any) ->
    "org.ir";

ir("id", _Any) ->
    "id.ir";

ir("net", _Any) ->
    "net.ir";

ir("ac", _Any) ->
    "ac.ir";

ir("gov", _Any) ->
    "gov.ir";

ir("co", _Any) ->
    "co.ir";


ir(_, _) ->
    "ir".

%% regular rules
rw("org", _Any) ->
    "org.rw";

rw("coop", _Any) ->
    "coop.rw";

rw("net", _Any) ->
    "net.rw";

rw("mil", _Any) ->
    "mil.rw";

rw("co", _Any) ->
    "co.rw";

rw("gov", _Any) ->
    "gov.rw";

rw("ac", _Any) ->
    "ac.rw";


rw(_, _) ->
    "rw".

%% regular rules
dm("gov", _Any) ->
    "gov.dm";

dm("org", _Any) ->
    "org.dm";

dm("net", _Any) ->
    "net.dm";

dm("edu", _Any) ->
    "edu.dm";

dm("com", _Any) ->
    "com.dm";


dm(_, _) ->
    "dm".

%% regular rules
dev("githubpreview", _Any) ->
    "githubpreview.dev";

dev("curv", _Any) ->
    "curv.dev";

dev("fly", _Any) ->
    "fly.dev";

dev("pages", _Any) ->
    "pages.dev";

dev("vercel", _Any) ->
    "vercel.dev";

dev("iserv", _Any) ->
    "iserv.dev";

dev("autocode", _Any) ->
    "autocode.dev";

dev("deno", _Any) ->
    "deno.dev";

dev("deta", _Any) ->
    "deta.dev";

dev("ngrok", _Any) ->
    "ngrok.dev";

dev("loginline", _Any) ->
    "loginline.dev";

dev("panel", _Any) ->
    "panel.dev";

dev("shiftcrypto", _Any) ->
    "shiftcrypto.dev";

dev("mediatech", _Any) ->
    "mediatech.dev";

dev("workers", _Any) ->
    "workers.dev";


dev(_, _) ->
    "dev".

%% regular rules
run("wix", _Any) ->
    "wix.run";

run("ravendb", _Any) ->
    "ravendb.run";

run("repl", _Any) ->
    "repl.run";

run("development", _Any) ->
    "development.run";

run("servers", _Any) ->
    "servers.run";

run("hs", _Any) ->
    "hs.run";

run("onporter", _Any) ->
    "onporter.run";


run(_, _) ->
    "run".

%% regular rules
ch("myspreadshop", _Any) ->
    "myspreadshop.ch";

ch("dnsking", _Any) ->
    "dnsking.ch";

ch("gotdns", _Any) ->
    "gotdns.ch";

ch("flow", []) ->
    "flow.ch";
ch("flow", Parts) ->
    [First | Rest] = Parts,
    flow_ch(First, Rest);

ch("blogspot", _Any) ->
    "blogspot.ch";


ch(_, _) ->
    "ch".

%% regular rules
flow_ch("appengine", _Any) ->
    "appengine.flow.ch";


flow_ch(_, _) ->
    "flow.ch".

%% regular rules
ro("blogspot", _Any) ->
    "blogspot.ro";

ro("arts", _Any) ->
    "arts.ro";

ro("store", _Any) ->
    "store.ro";

ro("rec", _Any) ->
    "rec.ro";

ro("org", _Any) ->
    "org.ro";

ro("barsy", _Any) ->
    "barsy.ro";

ro("info", _Any) ->
    "info.ro";

ro("com", _Any) ->
    "com.ro";

ro("shop", _Any) ->
    "shop.ro";

ro("co", _Any) ->
    "co.ro";

ro("www", _Any) ->
    "www.ro";

ro("tm", _Any) ->
    "tm.ro";

ro("firm", _Any) ->
    "firm.ro";

ro("nom", _Any) ->
    "nom.ro";

ro("nt", _Any) ->
    "nt.ro";


ro(_, _) ->
    "ro".

%% regular rules
ua("zhytomyr", _Any) ->
    "zhytomyr.ua";

ua("khmelnitskiy", _Any) ->
    "khmelnitskiy.ua";

ua("ks", _Any) ->
    "ks.ua";

ua("kiev", _Any) ->
    "kiev.ua";

ua("rv", _Any) ->
    "rv.ua";

ua("com", _Any) ->
    "com.ua";

ua("sebastopol", _Any) ->
    "sebastopol.ua";

ua("pp", _Any) ->
    "pp.ua";

ua("zhitomir", _Any) ->
    "zhitomir.ua";

ua("yalta", _Any) ->
    "yalta.ua";

ua("zt", _Any) ->
    "zt.ua";

ua("zaporizhzhe", _Any) ->
    "zaporizhzhe.ua";

ua("org", _Any) ->
    "org.ua";

ua("dn", _Any) ->
    "dn.ua";

ua("lv", _Any) ->
    "lv.ua";

ua("vinnytsia", _Any) ->
    "vinnytsia.ua";

ua("lg", _Any) ->
    "lg.ua";

ua("te", _Any) ->
    "te.ua";

ua("lugansk", _Any) ->
    "lugansk.ua";

ua("uzhgorod", _Any) ->
    "uzhgorod.ua";

ua("cc", _Any) ->
    "cc.ua";

ua("khmelnytskyi", _Any) ->
    "khmelnytskyi.ua";

ua("cherkassy", _Any) ->
    "cherkassy.ua";

ua("lviv", _Any) ->
    "lviv.ua";

ua("krym", _Any) ->
    "krym.ua";

ua("zakarpattia", _Any) ->
    "zakarpattia.ua";

ua("chernovtsy", _Any) ->
    "chernovtsy.ua";

ua("nikolaev", _Any) ->
    "nikolaev.ua";

ua("ltd", _Any) ->
    "ltd.ua";

ua("mykolaiv", _Any) ->
    "mykolaiv.ua";

ua("ternopil", _Any) ->
    "ternopil.ua";

ua("dnepropetrovsk", _Any) ->
    "dnepropetrovsk.ua";

ua("kyiv", _Any) ->
    "kyiv.ua";

ua("edu", _Any) ->
    "edu.ua";

ua("ie", _Any) ->
    "ie.ua";

ua("cx", _Any) ->
    "cx.ua";

ua("vn", _Any) ->
    "vn.ua";

ua("odesa", _Any) ->
    "odesa.ua";

ua("cv", _Any) ->
    "cv.ua";

ua("mk", _Any) ->
    "mk.ua";

ua("sb", _Any) ->
    "sb.ua";

ua("kv", _Any) ->
    "kv.ua";

ua("kirovograd", _Any) ->
    "kirovograd.ua";

ua("dnipropetrovsk", _Any) ->
    "dnipropetrovsk.ua";

ua("crimea", _Any) ->
    "crimea.ua";

ua("volyn", _Any) ->
    "volyn.ua";

ua("km", _Any) ->
    "km.ua";

ua("lutsk", _Any) ->
    "lutsk.ua";

ua("sm", _Any) ->
    "sm.ua";

ua("net", _Any) ->
    "net.ua";

ua("poltava", _Any) ->
    "poltava.ua";

ua("chernihiv", _Any) ->
    "chernihiv.ua";

ua("kh", _Any) ->
    "kh.ua";

ua("gov", _Any) ->
    "gov.ua";

ua("ck", _Any) ->
    "ck.ua";

ua("lt", _Any) ->
    "lt.ua";

ua("vinnica", _Any) ->
    "vinnica.ua";

ua("chernivtsi", _Any) ->
    "chernivtsi.ua";

ua("donetsk", _Any) ->
    "donetsk.ua";

ua("odessa", _Any) ->
    "odessa.ua";

ua("biz", _Any) ->
    "biz.ua";

ua("cherkasy", _Any) ->
    "cherkasy.ua";

ua("kharkiv", _Any) ->
    "kharkiv.ua";

ua("inf", _Any) ->
    "inf.ua";

ua("rovno", _Any) ->
    "rovno.ua";

ua("sumy", _Any) ->
    "sumy.ua";

ua("pl", _Any) ->
    "pl.ua";

ua("kropyvnytskyi", _Any) ->
    "kropyvnytskyi.ua";

ua("v", _Any) ->
    "v.ua";

ua("in", _Any) ->
    "in.ua";

ua("dp", _Any) ->
    "dp.ua";

ua("if", _Any) ->
    "if.ua";

ua("cn", _Any) ->
    "cn.ua";

ua("chernigov", _Any) ->
    "chernigov.ua";

ua("od", _Any) ->
    "od.ua";

ua("uz", _Any) ->
    "uz.ua";

ua("co", _Any) ->
    "co.ua";

ua("zp", _Any) ->
    "zp.ua";

ua("kherson", _Any) ->
    "kherson.ua";

ua("zaporizhzhia", _Any) ->
    "zaporizhzhia.ua";

ua("cr", _Any) ->
    "cr.ua";

ua("kr", _Any) ->
    "kr.ua";

ua("rivne", _Any) ->
    "rivne.ua";

ua("uzhhorod", _Any) ->
    "uzhhorod.ua";

ua("luhansk", _Any) ->
    "luhansk.ua";

ua("sevastopol", _Any) ->
    "sevastopol.ua";

ua("kharkov", _Any) ->
    "kharkov.ua";


ua(_, _) ->
    "ua".

%% regular rules
gn("org", _Any) ->
    "org.gn";

gn("net", _Any) ->
    "net.gn";

gn("gov", _Any) ->
    "gov.gn";

gn("ac", _Any) ->
    "ac.gn";

gn("com", _Any) ->
    "com.gn";

gn("edu", _Any) ->
    "edu.gn";


gn(_, _) ->
    "gn".

%% regular rules
dz("com", _Any) ->
    "com.dz";

dz("edu", _Any) ->
    "edu.dz";

dz("pol", _Any) ->
    "pol.dz";

dz("art", _Any) ->
    "art.dz";

dz("net", _Any) ->
    "net.dz";

dz("org", _Any) ->
    "org.dz";

dz("soc", _Any) ->
    "soc.dz";

dz("tm", _Any) ->
    "tm.dz";

dz("gov", _Any) ->
    "gov.dz";

dz("asso", _Any) ->
    "asso.dz";


dz(_, _) ->
    "dz".

%% regular rules
academy("official", _Any) ->
    "official.academy";


academy(_, _) ->
    "academy".

%% regular rules
sy("net", _Any) ->
    "net.sy";

sy("edu", _Any) ->
    "edu.sy";

sy("com", _Any) ->
    "com.sy";

sy("org", _Any) ->
    "org.sy";

sy("gov", _Any) ->
    "gov.sy";

sy("mil", _Any) ->
    "mil.sy";


sy(_, _) ->
    "sy".

%% regular rules
eu("dogado", []) ->
    "dogado.eu";
eu("dogado", Parts) ->
    [First | Rest] = Parts,
    dogado_eu(First, Rest);

eu("airkitapps", _Any) ->
    "airkitapps.eu";

eu("cloudns", _Any) ->
    "cloudns.eu";

eu("barsy", _Any) ->
    "barsy.eu";

eu("wellbeingzone", _Any) ->
    "wellbeingzone.eu";

eu("diskstation", _Any) ->
    "diskstation.eu";

eu("mycd", _Any) ->
    "mycd.eu";

eu("spdns", _Any) ->
    "spdns.eu";


eu(_, _) ->
    "eu".

%% regular rules
dogado_eu("jelastic", _Any) ->
    "jelastic.dogado.eu";


dogado_eu(_, _) ->
    "dogado.eu".

%% regular rules
com("doesntexist", _Any) ->
    "doesntexist.com";

com("servesarcasm", _Any) ->
    "servesarcasm.com";

com("ddnsking", _Any) ->
    "ddnsking.com";

com("serveirc", _Any) ->
    "serveirc.com";

com("pixolino", _Any) ->
    "pixolino.com";

com("ar", _Any) ->
    "ar.com";

com("servehumour", _Any) ->
    "servehumour.com";

com("hotelwithflight", _Any) ->
    "hotelwithflight.com";

com("awsmppl", _Any) ->
    "awsmppl.com";

com("outsystemscloud", _Any) ->
    "outsystemscloud.com";

com("servebeer", _Any) ->
    "servebeer.com";

com("discordsays", _Any) ->
    "discordsays.com";

com("authgearapps", _Any) ->
    "authgearapps.com";

com("dattolocal", _Any) ->
    "dattolocal.com";

com("wpmucdn", _Any) ->
    "wpmucdn.com";

com("dnsiskinky", _Any) ->
    "dnsiskinky.com";

com("familyds", _Any) ->
    "familyds.com";

com("myvnc", _Any) ->
    "myvnc.com";

com("xnbay", _Any) ->
    "xnbay.com";

com("servepics", _Any) ->
    "servepics.com";

com("appchizi", _Any) ->
    "appchizi.com";

com("sakuratan", _Any) ->
    "sakuratan.com";

com("fldrv", _Any) ->
    "fldrv.com";

com("br", _Any) ->
    "br.com";

com("gotpantheon", _Any) ->
    "gotpantheon.com";

com("yolasite", _Any) ->
    "yolasite.com";

com("orsites", _Any) ->
    "orsites.com";

com("wiardweb", []) ->
    "wiardweb.com";
com("wiardweb", Parts) ->
    [First | Rest] = Parts,
    wiardweb_com(First, Rest);

com("ddnsgeek", _Any) ->
    "ddnsgeek.com";

com("gleeze", _Any) ->
    "gleeze.com";

com("gotdns", _Any) ->
    "gotdns.com";

com("quicksytes", _Any) ->
    "quicksytes.com";

com("blogdns", _Any) ->
    "blogdns.com";

com("cafjs", _Any) ->
    "cafjs.com";

com("wpdevcloud", _Any) ->
    "wpdevcloud.com";

com("wixsite", _Any) ->
    "wixsite.com";

com("messwithdns", _Any) ->
    "messwithdns.com";

com("myspreadshop", _Any) ->
    "myspreadshop.com";

com("wafaicloud", []) ->
    "wafaicloud.com";
com("wafaicloud", Parts) ->
    [First | Rest] = Parts,
    wafaicloud_com(First, Rest);

com("observableusercontent", []) ->
    "observableusercontent.com";
com("observableusercontent", Parts) ->
    [First | Rest] = Parts,
    observableusercontent_com(First, Rest);

com("dnsalias", _Any) ->
    "dnsalias.com";

com("aivencloud", _Any) ->
    "aivencloud.com";

com("qbuser", _Any) ->
    "qbuser.com";

com("pleskns", _Any) ->
    "pleskns.com";

com("myasustor", _Any) ->
    "myasustor.com";

com("onrender", _Any) ->
    "onrender.com";

com("cloudcontrolapp", _Any) ->
    "cloudcontrolapp.com";

com("bloxcms", _Any) ->
    "bloxcms.com";

com("servehttp", _Any) ->
    "servehttp.com";

com("trycloudflare", _Any) ->
    "trycloudflare.com";

com("servequake", _Any) ->
    "servequake.com";

com("onfabrica", _Any) ->
    "onfabrica.com";

com("impertrixcdn", _Any) ->
    "impertrixcdn.com";

com("workisboring", _Any) ->
    "workisboring.com";

com("nospamproxy", []) ->
    "nospamproxy.com";
com("nospamproxy", Parts) ->
    [First | Rest] = Parts,
    nospamproxy_com(First, Rest);

com("logoip", _Any) ->
    "logoip.com";

com("uk", _Any) ->
    "uk.com";

com("gentapps", _Any) ->
    "gentapps.com";

com("gentlentapis", _Any) ->
    "gentlentapis.com";

com("barsyonline", _Any) ->
    "barsyonline.com";

com("homesecuritymac", _Any) ->
    "homesecuritymac.com";

com("sa", _Any) ->
    "sa.com";

com("appspot", _Any) ->
    "appspot.com";

com("stdlib", []) ->
    "stdlib.com";
com("stdlib", Parts) ->
    [First | Rest] = Parts,
    stdlib_com(First, Rest);

com("dattoweb", _Any) ->
    "dattoweb.com";

com("co", _Any) ->
    "co.com";

com("appspacehosted", _Any) ->
    "appspacehosted.com";

com("impertrix", _Any) ->
    "impertrix.com";

com("lpusercontent", _Any) ->
    "lpusercontent.com";

com("iamallama", _Any) ->
    "iamallama.com";

com("githubusercontent", _Any) ->
    "githubusercontent.com";

com("mydobiss", _Any) ->
    "mydobiss.com";

com("mytuleap", _Any) ->
    "mytuleap.com";

com("likescandy", _Any) ->
    "likescandy.com";

com("vipsinaapp", _Any) ->
    "vipsinaapp.com";

com("de", _Any) ->
    "de.com";

com("ciscofreak", _Any) ->
    "ciscofreak.com";

com("unusualperson", _Any) ->
    "unusualperson.com";

com("miniserver", _Any) ->
    "miniserver.com";

com("hk", _Any) ->
    "hk.com";

com("dontexist", _Any) ->
    "dontexist.com";

com("servecounterstrike", _Any) ->
    "servecounterstrike.com";

com("servegame", _Any) ->
    "servegame.com";

com("africa", _Any) ->
    "africa.com";

com("linode", []) ->
    "linode.com";
com("linode", Parts) ->
    [First | Rest] = Parts,
    linode_com(First, Rest);

com("onthewifi", _Any) ->
    "onthewifi.com";

com("applinzi", _Any) ->
    "applinzi.com";

com("pagespeedmobilizer", _Any) ->
    "pagespeedmobilizer.com";

com("firebaseapp", _Any) ->
    "firebaseapp.com";

com("betainabox", _Any) ->
    "betainabox.com";

com("kilatiron", _Any) ->
    "kilatiron.com";

com("codespot", _Any) ->
    "codespot.com";

com("siiites", _Any) ->
    "siiites.com";

com("framercanvas", _Any) ->
    "framercanvas.com";

com("cpserver", _Any) ->
    "cpserver.com";

com("kozow", _Any) ->
    "kozow.com";

com("elasticbeanstalk", _Any) ->
    "elasticbeanstalk.com";

com("upsunapp", _Any) ->
    "upsunapp.com";

com("eu", _Any) ->
    "eu.com";

com("fbsbx", []) ->
    "fbsbx.com";
com("fbsbx", Parts) ->
    [First | Rest] = Parts,
    fbsbx_com(First, Rest);

com("pgfog", _Any) ->
    "pgfog.com";

com("rackmaze", _Any) ->
    "rackmaze.com";

com("withyoutube", _Any) ->
    "withyoutube.com";

com("myiphost", _Any) ->
    "myiphost.com";

com("ru", _Any) ->
    "ru.com";

com("uy", _Any) ->
    "uy.com";

com("ownprovider", _Any) ->
    "ownprovider.com";

com("dopaas", _Any) ->
    "dopaas.com";

com("geekgalaxy", _Any) ->
    "geekgalaxy.com";

com("cloudcontrolled", _Any) ->
    "cloudcontrolled.com";

com("za", _Any) ->
    "za.com";

com("giize", _Any) ->
    "giize.com";

com("blogsyte", _Any) ->
    "blogsyte.com";

com("encoreapi", _Any) ->
    "encoreapi.com";

com("meteorapp", []) ->
    "meteorapp.com";
com("meteorapp", Parts) ->
    [First | Rest] = Parts,
    meteorapp_com(First, Rest);

com("adobeaemcloud", _Any) ->
    "adobeaemcloud.com";

com("datadetect", []) ->
    "datadetect.com";
com("datadetect", Parts) ->
    [First | Rest] = Parts,
    datadetect_com(First, Rest);

com("homeunix", _Any) ->
    "homeunix.com";

com("appspaceusercontent", _Any) ->
    "appspaceusercontent.com";

com("issmarterthanyou", _Any) ->
    "issmarterthanyou.com";

com("kasserver", _Any) ->
    "kasserver.com";

com("myactivedirectory", _Any) ->
    "myactivedirectory.com";

com("boutir", _Any) ->
    "boutir.com";

com("rhcloud", _Any) ->
    "rhcloud.com";

com("kr", _Any) ->
    "kr.com";

com("cechire", _Any) ->
    "cechire.com";

com("jdevcloud", _Any) ->
    "jdevcloud.com";

com("dsmynas", _Any) ->
    "dsmynas.com";

com("blogspot", _Any) ->
    "blogspot.com";

com("googlecode", _Any) ->
    "googlecode.com";

com("cn", _Any) ->
    "cn.com";

com("pagexl", _Any) ->
    "pagexl.com";

com("it", _Any) ->
    "it.com";

com("ooguy", _Any) ->
    "ooguy.com";

com("dynns", _Any) ->
    "dynns.com";

com("typeform", []) ->
    "typeform.com";
com("typeform", Parts) ->
    [First | Rest] = Parts,
    typeform_com(First, Rest);

com("servebbs", _Any) ->
    "servebbs.com";

com("skygearapp", _Any) ->
    "skygearapp.com";

com("herokussl", _Any) ->
    "herokussl.com";

com("gr", _Any) ->
    "gr.com";

com("mex", _Any) ->
    "mex.com";

com("thingdustdata", _Any) ->
    "thingdustdata.com";

com("loseyourip", _Any) ->
    "loseyourip.com";

com("shopitsite", _Any) ->
    "shopitsite.com";

com("discordsez", _Any) ->
    "discordsez.com";

com("mydrobo", _Any) ->
    "mydrobo.com";

com("remotewd", _Any) ->
    "remotewd.com";

com("pythonanywhere", []) ->
    "pythonanywhere.com";
com("pythonanywhere", Parts) ->
    [First | Rest] = Parts,
    pythonanywhere_com(First, Rest);

com("us", _Any) ->
    "us.com";

com("qualifioapp", _Any) ->
    "qualifioapp.com";

com("hu", _Any) ->
    "hu.com";

com("wafflecell", _Any) ->
    "wafflecell.com";

com("selfip", _Any) ->
    "selfip.com";

com("simplesite", _Any) ->
    "simplesite.com";

com("qc", _Any) ->
    "qc.com";

com("homelinux", _Any) ->
    "homelinux.com";

com("mazeplay", _Any) ->
    "mazeplay.com";

com("writesthisblog", _Any) ->
    "writesthisblog.com";

com("ktistory", _Any) ->
    "ktistory.com";

com("dojin", _Any) ->
    "dojin.com";

com("getmyip", _Any) ->
    "getmyip.com";

com("reservd", _Any) ->
    "reservd.com";

com("doomdns", _Any) ->
    "doomdns.com";

com("myshopify", _Any) ->
    "myshopify.com";

com("scrysec", _Any) ->
    "scrysec.com";

com("builtwithdark", _Any) ->
    "builtwithdark.com";

com("freeboxos", _Any) ->
    "freeboxos.com";

com("linodeusercontent", []) ->
    "linodeusercontent.com";
com("linodeusercontent", Parts) ->
    [First | Rest] = Parts,
    linodeusercontent_com(First, Rest);

com("atmeta", _Any) ->
    "atmeta.com";

com("publishproxy", _Any) ->
    "publishproxy.com";

com("massivegrid", []) ->
    "massivegrid.com";
com("massivegrid", Parts) ->
    [First | Rest] = Parts,
    massivegrid_com(First, Rest);

com("prgmr", []) ->
    "prgmr.com";
com("prgmr", Parts) ->
    [First | Rest] = Parts,
    prgmr_com(First, Rest);

com("render", []) ->
    "render.com";
com("render", Parts) ->
    [First | Rest] = Parts,
    render_com(First, Rest);

com("mysecuritycamera", _Any) ->
    "mysecuritycamera.com";

com("bplaced", _Any) ->
    "bplaced.com";

com("homesecuritypc", _Any) ->
    "homesecuritypc.com";

com("ditchyourip", _Any) ->
    "ditchyourip.com";

com("barsycenter", _Any) ->
    "barsycenter.com";

com("servehalflife", _Any) ->
    "servehalflife.com";

com("dreamhosters", _Any) ->
    "dreamhosters.com";

com("theworkpc", _Any) ->
    "theworkpc.com";

com("mytabit", _Any) ->
    "mytabit.com";

com("herokuapp", _Any) ->
    "herokuapp.com";

com("googleapis", _Any) ->
    "googleapis.com";

com("airkitapps", _Any) ->
    "airkitapps.com";

com("myqnapcloud", _Any) ->
    "myqnapcloud.com";

com("damnserver", _Any) ->
    "damnserver.com";

com("lmpm", []) ->
    "lmpm.com";
com("lmpm", Parts) ->
    [First | Rest] = Parts,
    lmpm_com(First, Rest);

com("ddnslive", _Any) ->
    "ddnslive.com";

com("wpenginepowered", []) ->
    "wpenginepowered.com";
com("wpenginepowered", Parts) ->
    [First | Rest] = Parts,
    wpenginepowered_com(First, Rest);

com("myshopblocks", _Any) ->
    "myshopblocks.com";

com("dnsdojo", _Any) ->
    "dnsdojo.com";

com("mydatto", _Any) ->
    "mydatto.com";

com("smushcdn", _Any) ->
    "smushcdn.com";

com("ladesk", _Any) ->
    "ladesk.com";

com("dynalias", _Any) ->
    "dynalias.com";

com("no", _Any) ->
    "no.com";

com("operaunite", _Any) ->
    "operaunite.com";

com("securitytactics", _Any) ->
    "securitytactics.com";

com("hostedpi", _Any) ->
    "hostedpi.com";

com("drayddns", _Any) ->
    "drayddns.com";

com("stufftoread", _Any) ->
    "stufftoread.com";

com("streamlitapp", _Any) ->
    "streamlitapp.com";

com("sakuraweb", _Any) ->
    "sakuraweb.com";

com("awsglobalaccelerator", _Any) ->
    "awsglobalaccelerator.com";

com("amscompute", _Any) ->
    "amscompute.com";

com("dattorelay", _Any) ->
    "dattorelay.com";

com("ddnsfree", _Any) ->
    "ddnsfree.com";

com("jelastic", []) ->
    "jelastic.com";
com("jelastic", Parts) ->
    [First | Rest] = Parts,
    jelastic_com(First, Rest);

com("forgeblocks", _Any) ->
    "forgeblocks.com";

com("serveftp", _Any) ->
    "serveftp.com";

com("nfshost", _Any) ->
    "nfshost.com";

com("wphostedmail", _Any) ->
    "wphostedmail.com";

com("withgoogle", _Any) ->
    "withgoogle.com";

com("freemyip", _Any) ->
    "freemyip.com";

com("pagefrontapp", _Any) ->
    "pagefrontapp.com";

com("sinaapp", _Any) ->
    "sinaapp.com";

com("serveexchange", _Any) ->
    "serveexchange.com";

com("jpn", _Any) ->
    "jpn.com";


com(_, _) ->
    "com".

%% regular rules
wiardweb_com("pages", _Any) ->
    "pages.wiardweb.com";


wiardweb_com(_, _) ->
    "wiardweb.com".

%% regular rules
wafaicloud_com("jed", _Any) ->
    "jed.wafaicloud.com";

wafaicloud_com("ryd", _Any) ->
    "ryd.wafaicloud.com";

wafaicloud_com("lon", _Any) ->
    "lon.wafaicloud.com";


wafaicloud_com(_, _) ->
    "wafaicloud.com".

%% regular rules
observableusercontent_com("static", _Any) ->
    "static.observableusercontent.com";


observableusercontent_com(_, _) ->
    "observableusercontent.com".

%% regular rules
nospamproxy_com("cloud", _Any) ->
    "cloud.nospamproxy.com";


nospamproxy_com(_, _) ->
    "nospamproxy.com".

%% regular rules
stdlib_com("api", _Any) ->
    "api.stdlib.com";


stdlib_com(_, _) ->
    "stdlib.com".

%% regular rules
linode_com("members", _Any) ->
    "members.linode.com";


linode_com(_, _) ->
    "linode.com".

%% regular rules
fbsbx_com("apps", _Any) ->
    "apps.fbsbx.com";


fbsbx_com(_, _) ->
    "fbsbx.com".

%% regular rules
meteorapp_com("eu", _Any) ->
    "eu.meteorapp.com";


meteorapp_com(_, _) ->
    "meteorapp.com".

%% regular rules
datadetect_com("demo", _Any) ->
    "demo.datadetect.com";

datadetect_com("instance", _Any) ->
    "instance.datadetect.com";


datadetect_com(_, _) ->
    "datadetect.com".

%% regular rules
typeform_com("pro", _Any) ->
    "pro.typeform.com";


typeform_com(_, _) ->
    "typeform.com".

%% regular rules
pythonanywhere_com("eu", _Any) ->
    "eu.pythonanywhere.com";


pythonanywhere_com(_, _) ->
    "pythonanywhere.com".

%% regular rules
linodeusercontent_com("ip", _Any) ->
    "ip.linodeusercontent.com";


linodeusercontent_com(_, _) ->
    "linodeusercontent.com".

%% regular rules
massivegrid_com("paas", _Any) ->
    "paas.massivegrid.com";


massivegrid_com(_, _) ->
    "massivegrid.com".

%% regular rules
prgmr_com("xen", _Any) ->
    "xen.prgmr.com";


prgmr_com(_, _) ->
    "prgmr.com".

%% regular rules
render_com("app", _Any) ->
    "app.render.com";


render_com(_, _) ->
    "render.com".

%% regular rules
lmpm_com("app", _Any) ->
    "app.lmpm.com";


lmpm_com(_, _) ->
    "lmpm.com".

%% regular rules
wpenginepowered_com("js", _Any) ->
    "js.wpenginepowered.com";


wpenginepowered_com(_, _) ->
    "wpenginepowered.com".

%% regular rules
jelastic_com("demo", _Any) ->
    "demo.jelastic.com";


jelastic_com(_, _) ->
    "jelastic.com".

%% regular rules
lol("omg", _Any) ->
    "omg.lol";


lol(_, _) ->
    "lol".

%% regular rules
krd("co", _Any) ->
    "co.krd";

krd("edu", _Any) ->
    "edu.krd";


krd(_, _) ->
    "krd".

%% regular rules
mn("gov", _Any) ->
    "gov.mn";

mn("nyc", _Any) ->
    "nyc.mn";

mn("org", _Any) ->
    "org.mn";

mn("edu", _Any) ->
    "edu.mn";


mn(_, _) ->
    "mn".

%% regular rules
cc("scrapping", _Any) ->
    "scrapping.cc";

cc("fantasyleague", _Any) ->
    "fantasyleague.cc";

cc("ftpaccess", _Any) ->
    "ftpaccess.cc";

cc("twmail", _Any) ->
    "twmail.cc";

cc("myphotos", _Any) ->
    "myphotos.cc";

cc("spawn", []) ->
    "spawn.cc";
cc("spawn", Parts) ->
    [First | Rest] = Parts,
    spawn_cc(First, Rest);

cc("csx", _Any) ->
    "csx.cc";

cc("cloudns", _Any) ->
    "cloudns.cc";


cc(_, _) ->
    "cc".

%% regular rules
spawn_cc("instances", _Any) ->
    "instances.spawn.cc";


spawn_cc(_, _) ->
    "spawn.cc".

%% regular rules
et("com", _Any) ->
    "com.et";

et("info", _Any) ->
    "info.et";

et("edu", _Any) ->
    "edu.et";

et("name", _Any) ->
    "name.et";

et("gov", _Any) ->
    "gov.et";

et("org", _Any) ->
    "org.et";

et("biz", _Any) ->
    "biz.et";

et("net", _Any) ->
    "net.et";


et(_, _) ->
    "et".

%% regular rules
in("res", _Any) ->
    "res.in";

in("pro", _Any) ->
    "pro.in";

in("gen", _Any) ->
    "gen.in";

in("net", _Any) ->
    "net.in";

in("internet", _Any) ->
    "internet.in";

in("gov", _Any) ->
    "gov.in";

in("me", _Any) ->
    "me.in";

in("biz", _Any) ->
    "biz.in";

in("delhi", _Any) ->
    "delhi.in";

in("cn", _Any) ->
    "cn.in";

in("travel", _Any) ->
    "travel.in";

in("io", _Any) ->
    "io.in";

in("co", []) ->
    "co.in";
in("co", Parts) ->
    [First | Rest] = Parts,
    co_in(First, Rest);

in("ca", _Any) ->
    "ca.in";

in("blogspot", _Any) ->
    "blogspot.in";

in("uk", _Any) ->
    "uk.in";

in("nic", _Any) ->
    "nic.in";

in("er", _Any) ->
    "er.in";

in("web", _Any) ->
    "web.in";

in("com", _Any) ->
    "com.in";

in("ind", _Any) ->
    "ind.in";

in("ai", _Any) ->
    "ai.in";

in("tv", _Any) ->
    "tv.in";

in("cs", _Any) ->
    "cs.in";

in("dr", _Any) ->
    "dr.in";

in("ac", _Any) ->
    "ac.in";

in("business", _Any) ->
    "business.in";

in("cloudns", _Any) ->
    "cloudns.in";

in("org", _Any) ->
    "org.in";

in("supabase", _Any) ->
    "supabase.in";

in("am", _Any) ->
    "am.in";

in("gujarat", _Any) ->
    "gujarat.in";

in("info", _Any) ->
    "info.in";

in("edu", _Any) ->
    "edu.in";

in("up", _Any) ->
    "up.in";

in("pg", _Any) ->
    "pg.in";

in("barsy", _Any) ->
    "barsy.in";

in("mil", _Any) ->
    "mil.in";

in("coop", _Any) ->
    "coop.in";

in("int", _Any) ->
    "int.in";

in("firm", _Any) ->
    "firm.in";

in("us", _Any) ->
    "us.in";

in("post", _Any) ->
    "post.in";

in("bihar", _Any) ->
    "bihar.in";


in(_, _) ->
    "in".

%% regular rules
co_in("cyclic", _Any) ->
    "cyclic.co.in";


co_in(_, _) ->
    "co.in".

%% regular rules
cn("hn", _Any) ->
    "hn.cn";

cn("fj", _Any) ->
    "fj.cn";

cn("ha", _Any) ->
    "ha.cn";

cn("yn", _Any) ->
    "yn.cn";

cn("tw", _Any) ->
    "tw.cn";

cn("he", _Any) ->
    "he.cn";

cn("qh", _Any) ->
    "qh.cn";

cn("xz", _Any) ->
    "xz.cn";

cn("xj", _Any) ->
    "xj.cn";

cn("gs", _Any) ->
    "gs.cn";

cn("gz", _Any) ->
    "gz.cn";

cn("edu", _Any) ->
    "edu.cn";

cn("hb", _Any) ->
    "hb.cn";

cn("quickconnect", []) ->
    "quickconnect.cn";
cn("quickconnect", Parts) ->
    [First | Rest] = Parts,
    quickconnect_cn(First, Rest);

cn("mil", _Any) ->
    "mil.cn";

cn("sd", _Any) ->
    "sd.cn";

cn("jx", _Any) ->
    "jx.cn";

cn("sx", _Any) ->
    "sx.cn";

cn("tj", _Any) ->
    "tj.cn";

cn("zj", _Any) ->
    "zj.cn";

cn("sn", _Any) ->
    "sn.cn";

cn("hl", _Any) ->
    "hl.cn";

cn("gd", _Any) ->
    "gd.cn";

cn("gx", _Any) ->
    "gx.cn";

cn("instantcloud", _Any) ->
    "instantcloud.cn";

cn("hk", _Any) ->
    "hk.cn";

cn("org", _Any) ->
    "org.cn";

cn("sc", _Any) ->
    "sc.cn";

cn("nm", _Any) ->
    "nm.cn";

cn("ah", _Any) ->
    "ah.cn";

cn("bj", _Any) ->
    "bj.cn";

cn("mo", _Any) ->
    "mo.cn";

cn("com", _Any) ->
    "com.cn";

cn("ln", _Any) ->
    "ln.cn";

cn("nx", _Any) ->
    "nx.cn";

cn("net", _Any) ->
    "net.cn";

cn("sh", _Any) ->
    "sh.cn";

cn("hi", _Any) ->
    "hi.cn";

cn("gov", _Any) ->
    "gov.cn";

cn("jl", _Any) ->
    "jl.cn";

cn("ac", _Any) ->
    "ac.cn";

cn("js", _Any) ->
    "js.cn";

cn("cq", _Any) ->
    "cq.cn";


cn(_, _) ->
    "cn".

%% regular rules
quickconnect_cn("direct", _Any) ->
    "direct.quickconnect.cn";


quickconnect_cn(_, _) ->
    "quickconnect.cn".

%% regular rules
mc("tm", _Any) ->
    "tm.mc";

mc("asso", _Any) ->
    "asso.mc";


mc(_, _) ->
    "mc".

%% regular rules
gh("mil", _Any) ->
    "mil.gh";

gh("gov", _Any) ->
    "gov.gh";

gh("org", _Any) ->
    "org.gh";

gh("com", _Any) ->
    "com.gh";

gh("edu", _Any) ->
    "edu.gh";


gh(_, _) ->
    "gh".

%% regular rules
kr("ne", _Any) ->
    "ne.kr";

kr("jeju", _Any) ->
    "jeju.kr";

kr("ac", _Any) ->
    "ac.kr";

kr("es", _Any) ->
    "es.kr";

kr("gyeonggi", _Any) ->
    "gyeonggi.kr";

kr("gangwon", _Any) ->
    "gangwon.kr";

kr("re", _Any) ->
    "re.kr";

kr("seoul", _Any) ->
    "seoul.kr";

kr("sc", _Any) ->
    "sc.kr";

kr("go", _Any) ->
    "go.kr";

kr("jeonnam", _Any) ->
    "jeonnam.kr";

kr("incheon", _Any) ->
    "incheon.kr";

kr("daegu", _Any) ->
    "daegu.kr";

kr("hs", _Any) ->
    "hs.kr";

kr("jeonbuk", _Any) ->
    "jeonbuk.kr";

kr("gyeongnam", _Any) ->
    "gyeongnam.kr";

kr("gyeongbuk", _Any) ->
    "gyeongbuk.kr";

kr("ulsan", _Any) ->
    "ulsan.kr";

kr("co", _Any) ->
    "co.kr";

kr("chungbuk", _Any) ->
    "chungbuk.kr";

kr("mil", _Any) ->
    "mil.kr";

kr("busan", _Any) ->
    "busan.kr";

kr("ms", _Any) ->
    "ms.kr";

kr("pe", _Any) ->
    "pe.kr";

kr("kg", _Any) ->
    "kg.kr";

kr("gwangju", _Any) ->
    "gwangju.kr";

kr("or", _Any) ->
    "or.kr";

kr("blogspot", _Any) ->
    "blogspot.kr";

kr("chungnam", _Any) ->
    "chungnam.kr";

kr("daejeon", _Any) ->
    "daejeon.kr";


kr(_, _) ->
    "kr".

%% regular rules
az("biz", _Any) ->
    "biz.az";

az("org", _Any) ->
    "org.az";

az("name", _Any) ->
    "name.az";

az("net", _Any) ->
    "net.az";

az("int", _Any) ->
    "int.az";

az("gov", _Any) ->
    "gov.az";

az("com", _Any) ->
    "com.az";

az("info", _Any) ->
    "info.az";

az("edu", _Any) ->
    "edu.az";

az("pro", _Any) ->
    "pro.az";

az("pp", _Any) ->
    "pp.az";

az("mil", _Any) ->
    "mil.az";


az(_, _) ->
    "az".

%% regular rules
media("framer", _Any) ->
    "framer.media";


media(_, _) ->
    "media".

%% regular rules
gr("simplesite", _Any) ->
    "simplesite.gr";

gr("blogspot", _Any) ->
    "blogspot.gr";

gr("com", _Any) ->
    "com.gr";

gr("edu", _Any) ->
    "edu.gr";

gr("gov", _Any) ->
    "gov.gr";

gr("net", _Any) ->
    "net.gr";

gr("org", _Any) ->
    "org.gr";


gr(_, _) ->
    "gr".

%% regular rules
lr("gov", _Any) ->
    "gov.lr";

lr("org", _Any) ->
    "org.lr";

lr("com", _Any) ->
    "com.lr";

lr("net", _Any) ->
    "net.lr";

lr("edu", _Any) ->
    "edu.lr";


lr(_, _) ->
    "lr".

%% regular rules
hosting("opencraft", _Any) ->
    "opencraft.hosting";


hosting(_, _) ->
    "hosting".

%% regular rules
basketball("aus", _Any) ->
    "aus.basketball";

basketball("nz", _Any) ->
    "nz.basketball";


basketball(_, _) ->
    "basketball".

%% regular rules
am("net", _Any) ->
    "net.am";

am("commune", _Any) ->
    "commune.am";

am("org", _Any) ->
    "org.am";

am("co", _Any) ->
    "co.am";

am("nyaa", _Any) ->
    "nyaa.am";

am("com", _Any) ->
    "com.am";

am("blogspot", _Any) ->
    "blogspot.am";

am("radio", _Any) ->
    "radio.am";

am("neko", _Any) ->
    "neko.am";


am(_, _) ->
    "am".

%% regular rules
wf("biz", _Any) ->
    "biz.wf";

wf("sch", _Any) ->
    "sch.wf";


wf(_, _) ->
    "wf".

%% regular rules
fi("aland", _Any) ->
    "aland.fi";

fi("datacenter", []) ->
    "datacenter.fi";
fi("datacenter", Parts) ->
    [First | Rest] = Parts,
    datacenter_fi(First, Rest);

fi("cloudplatform", []) ->
    "cloudplatform.fi";
fi("cloudplatform", Parts) ->
    [First | Rest] = Parts,
    cloudplatform_fi(First, Rest);

fi("blogspot", _Any) ->
    "blogspot.fi";

fi("iki", _Any) ->
    "iki.fi";

fi("kapsi", _Any) ->
    "kapsi.fi";

fi("dy", _Any) ->
    "dy.fi";

fi("myspreadshop", _Any) ->
    "myspreadshop.fi";


fi(_, _) ->
    "fi".

%% regular rules
datacenter_fi("paas", _Any) ->
    "paas.datacenter.fi";

datacenter_fi("demo", _Any) ->
    "demo.datacenter.fi";


datacenter_fi(_, _) ->
    "datacenter.fi".

%% regular rules
cloudplatform_fi("fi", _Any) ->
    "fi.cloudplatform.fi";


cloudplatform_fi(_, _) ->
    "cloudplatform.fi".

%% regular rules
link("mypep", _Any) ->
    "mypep.link";

link("cyon", _Any) ->
    "cyon.link";


link(_, _) ->
    "link".

%% regular rules
zw("co", _Any) ->
    "co.zw";

zw("gov", _Any) ->
    "gov.zw";

zw("ac", _Any) ->
    "ac.zw";

zw("mil", _Any) ->
    "mil.zw";

zw("org", _Any) ->
    "org.zw";


zw(_, _) ->
    "zw".

%% regular rules
lc("oy", _Any) ->
    "oy.lc";

lc("com", _Any) ->
    "com.lc";

lc("edu", _Any) ->
    "edu.lc";

lc("gov", _Any) ->
    "gov.lc";

lc("co", _Any) ->
    "co.lc";

lc("org", _Any) ->
    "org.lc";

lc("net", _Any) ->
    "net.lc";


lc(_, _) ->
    "lc".

%% regular rules
mr("blogspot", _Any) ->
    "blogspot.mr";

mr("gov", _Any) ->
    "gov.mr";


mr(_, _) ->
    "mr".

%% regular rules
group("discourse", _Any) ->
    "discourse.group";


group(_, _) ->
    "group".

%% regular rules
ss("edu", _Any) ->
    "edu.ss";

ss("com", _Any) ->
    "com.ss";

ss("me", _Any) ->
    "me.ss";

ss("net", _Any) ->
    "net.ss";

ss("biz", _Any) ->
    "biz.ss";

ss("sch", _Any) ->
    "sch.ss";

ss("org", _Any) ->
    "org.ss";

ss("gov", _Any) ->
    "gov.ss";


ss(_, _) ->
    "ss".

%% regular rules
name("his", []) ->
    "his.name";
name("his", Parts) ->
    [First | Rest] = Parts,
    his_name(First, Rest);

name("her", []) ->
    "her.name";
name("her", Parts) ->
    [First | Rest] = Parts,
    her_name(First, Rest);


name(_, _) ->
    "name".

%% regular rules
his_name("forgot", _Any) ->
    "forgot.his.name";


his_name(_, _) ->
    "his.name".

%% regular rules
her_name("forgot", _Any) ->
    "forgot.her.name";


her_name(_, _) ->
    "her.name".

%% regular rules
pr("isla", _Any) ->
    "isla.pr";

pr("name", _Any) ->
    "name.pr";

pr("prof", _Any) ->
    "prof.pr";

pr("org", _Any) ->
    "org.pr";

pr("biz", _Any) ->
    "biz.pr";

pr("pro", _Any) ->
    "pro.pr";

pr("edu", _Any) ->
    "edu.pr";

pr("info", _Any) ->
    "info.pr";

pr("com", _Any) ->
    "com.pr";

pr("est", _Any) ->
    "est.pr";

pr("ac", _Any) ->
    "ac.pr";

pr("gov", _Any) ->
    "gov.pr";

pr("net", _Any) ->
    "net.pr";


pr(_, _) ->
    "pr".

%% regular rules
tl("gov", _Any) ->
    "gov.tl";


tl(_, _) ->
    "tl".

%% regular rules
support("barsy", _Any) ->
    "barsy.support";


support(_, _) ->
    "support".

%% regular rules
no("vagsoy", _Any) ->
    "vagsoy.no";

no("deatnu", _Any) ->
    "deatnu.no";

no("namsos", _Any) ->
    "namsos.no";

no("honefoss", _Any) ->
    "honefoss.no";

no("namdalseid", _Any) ->
    "namdalseid.no";

no("sokndal", _Any) ->
    "sokndal.no";

no("agdenes", _Any) ->
    "agdenes.no";

no("ringsaker", _Any) ->
    "ringsaker.no";

no("jessheim", _Any) ->
    "jessheim.no";

no("jorpeland", _Any) ->
    "jorpeland.no";

no("bearalvahki", _Any) ->
    "bearalvahki.no";

no("gamvik", _Any) ->
    "gamvik.no";

no("eidskog", _Any) ->
    "eidskog.no";

no("rana", _Any) ->
    "rana.no";

no("ballangen", _Any) ->
    "ballangen.no";

no("tydal", _Any) ->
    "tydal.no";

no("bronnoysund", _Any) ->
    "bronnoysund.no";

no("kongsvinger", _Any) ->
    "kongsvinger.no";

no("alta", _Any) ->
    "alta.no";

no("mjondalen", _Any) ->
    "mjondalen.no";

no("hapmir", _Any) ->
    "hapmir.no";

no("hole", _Any) ->
    "hole.no";

no("halden", _Any) ->
    "halden.no";

no("fuossko", _Any) ->
    "fuossko.no";

no("rygge", _Any) ->
    "rygge.no";

no("rade", _Any) ->
    "rade.no";

no("roros", _Any) ->
    "roros.no";

no("sauherad", _Any) ->
    "sauherad.no";

no("skjak", _Any) ->
    "skjak.no";

no("gausdal", _Any) ->
    "gausdal.no";

no("aa", []) ->
    "aa.no";
no("aa", Parts) ->
    [First | Rest] = Parts,
    aa_no(First, Rest);

no("vaapste", _Any) ->
    "vaapste.no";

no("nesseby", _Any) ->
    "nesseby.no";

no("risor", _Any) ->
    "risor.no";

no("voss", _Any) ->
    "voss.no";

no("bronnoy", _Any) ->
    "bronnoy.no";

no("flora", _Any) ->
    "flora.no";

no("modalen", _Any) ->
    "modalen.no";

no("stjordalshalsen", _Any) ->
    "stjordalshalsen.no";

no("mosvik", _Any) ->
    "mosvik.no";

no("sel", _Any) ->
    "sel.no";

no("sandefjord", _Any) ->
    "sandefjord.no";

no("tysvar", _Any) ->
    "tysvar.no";

no("galsa", _Any) ->
    "galsa.no";

no("kommune", _Any) ->
    "kommune.no";

no("aure", _Any) ->
    "aure.no";

no("eidsvoll", _Any) ->
    "eidsvoll.no";

no("bykle", _Any) ->
    "bykle.no";

no("tjome", _Any) ->
    "tjome.no";

no("rennebu", _Any) ->
    "rennebu.no";

no("kvalsund", _Any) ->
    "kvalsund.no";

no("moss", _Any) ->
    "moss.no";

no("askoy", _Any) ->
    "askoy.no";

no("leka", _Any) ->
    "leka.no";

no("dep", _Any) ->
    "dep.no";

no("oyer", _Any) ->
    "oyer.no";

no("nesna", _Any) ->
    "nesna.no";

no("hjelmeland", _Any) ->
    "hjelmeland.no";

no("fla", _Any) ->
    "fla.no";

no("samnanger", _Any) ->
    "samnanger.no";

no("aukra", _Any) ->
    "aukra.no";

no("ibestad", _Any) ->
    "ibestad.no";

no("skodje", _Any) ->
    "skodje.no";

no("voagat", _Any) ->
    "voagat.no";

no("hemsedal", _Any) ->
    "hemsedal.no";

no("vevelstad", _Any) ->
    "vevelstad.no";

no("hurdal", _Any) ->
    "hurdal.no";

no("rennesoy", _Any) ->
    "rennesoy.no";

no("vanylven", _Any) ->
    "vanylven.no";

no("ostfold", []) ->
    "ostfold.no";
no("ostfold", Parts) ->
    [First | Rest] = Parts,
    ostfold_no(First, Rest);

no("kopervik", _Any) ->
    "kopervik.no";

no("hamaroy", _Any) ->
    "hamaroy.no";

no("davvenjarga", _Any) ->
    "davvenjarga.no";

no("hjartdal", _Any) ->
    "hjartdal.no";

no("lom", _Any) ->
    "lom.no";

no("gjovik", _Any) ->
    "gjovik.no";

no("trogstad", _Any) ->
    "trogstad.no";

no("smola", _Any) ->
    "smola.no";

no("vestfold", []) ->
    "vestfold.no";
no("vestfold", Parts) ->
    [First | Rest] = Parts,
    vestfold_no(First, Rest);

no("idrett", _Any) ->
    "idrett.no";

no("gjemnes", _Any) ->
    "gjemnes.no";

no("alvdal", _Any) ->
    "alvdal.no";

no("naamesjevuemie", _Any) ->
    "naamesjevuemie.no";

no("andasuolo", _Any) ->
    "andasuolo.no";

no("meloy", _Any) ->
    "meloy.no";

no("lavangen", _Any) ->
    "lavangen.no";

no("svalbard", []) ->
    "svalbard.no";
no("svalbard", Parts) ->
    [First | Rest] = Parts,
    svalbard_no(First, Rest);

no("tinn", _Any) ->
    "tinn.no";

no("hemne", _Any) ->
    "hemne.no";

no("sirdal", _Any) ->
    "sirdal.no";

no("leirfjord", _Any) ->
    "leirfjord.no";

no("tana", _Any) ->
    "tana.no";

no("surnadal", _Any) ->
    "surnadal.no";

no("muosat", _Any) ->
    "muosat.no";

no("skaun", _Any) ->
    "skaun.no";

no("nissedal", _Any) ->
    "nissedal.no";

no("trondheim", _Any) ->
    "trondheim.no";

no("mr", []) ->
    "mr.no";
no("mr", Parts) ->
    [First | Rest] = Parts,
    mr_no(First, Rest);

no("gjerdrum", _Any) ->
    "gjerdrum.no";

no("lesja", _Any) ->
    "lesja.no";

no("blogspot", _Any) ->
    "blogspot.no";

no("stranda", _Any) ->
    "stranda.no";

no("rl", []) ->
    "rl.no";
no("rl", Parts) ->
    [First | Rest] = Parts,
    rl_no(First, Rest);

no("time", _Any) ->
    "time.no";

no("berlevag", _Any) ->
    "berlevag.no";

no("meldal", _Any) ->
    "meldal.no";

no("nordkapp", _Any) ->
    "nordkapp.no";

no("siljan", _Any) ->
    "siljan.no";

no("marker", _Any) ->
    "marker.no";

no("hitra", _Any) ->
    "hitra.no";

no("tysfjord", _Any) ->
    "tysfjord.no";

no("eid", _Any) ->
    "eid.no";

no("oppdal", _Any) ->
    "oppdal.no";

no("vestnes", _Any) ->
    "vestnes.no";

no("rendalen", _Any) ->
    "rendalen.no";

no("divttasvuotna", _Any) ->
    "divttasvuotna.no";

no("lunner", _Any) ->
    "lunner.no";

no("audnedaln", _Any) ->
    "audnedaln.no";

no("stathelle", _Any) ->
    "stathelle.no";

no("melhus", _Any) ->
    "melhus.no";

no("haugesund", _Any) ->
    "haugesund.no";

no("molde", _Any) ->
    "molde.no";

no("aejrie", _Any) ->
    "aejrie.no";

no("randaberg", _Any) ->
    "randaberg.no";

no("omasvuotna", _Any) ->
    "omasvuotna.no";

no("andebu", _Any) ->
    "andebu.no";

no("kvanangen", _Any) ->
    "kvanangen.no";

no("hof", _Any) ->
    "hof.no";

no("harstad", _Any) ->
    "harstad.no";

no("bremanger", _Any) ->
    "bremanger.no";

no("svelvik", _Any) ->
    "svelvik.no";

no("asnes", _Any) ->
    "asnes.no";

no("naustdal", _Any) ->
    "naustdal.no";

no("stryn", _Any) ->
    "stryn.no";

no("donna", _Any) ->
    "donna.no";

no("hol", _Any) ->
    "hol.no";

no("gulen", _Any) ->
    "gulen.no";

no("orland", _Any) ->
    "orland.no";

no("aknoluokta", _Any) ->
    "aknoluokta.no";

no("va", []) ->
    "va.no";
no("va", Parts) ->
    [First | Rest] = Parts,
    va_no(First, Rest);

no("grue", _Any) ->
    "grue.no";

no("oslo", []) ->
    "oslo.no";
no("oslo", Parts) ->
    [First | Rest] = Parts,
    oslo_no(First, Rest);

no("mil", _Any) ->
    "mil.no";

no("fosnes", _Any) ->
    "fosnes.no";

no("froland", _Any) ->
    "froland.no";

no("notodden", _Any) ->
    "notodden.no";

no("granvin", _Any) ->
    "granvin.no";

no("fjaler", _Any) ->
    "fjaler.no";

no("inderoy", _Any) ->
    "inderoy.no";

no("gloppen", _Any) ->
    "gloppen.no";

no("bjugn", _Any) ->
    "bjugn.no";

no("roan", _Any) ->
    "roan.no";

no("mosjoen", _Any) ->
    "mosjoen.no";

no("ulvik", _Any) ->
    "ulvik.no";

no("sigdal", _Any) ->
    "sigdal.no";

no("hobol", _Any) ->
    "hobol.no";

no("luster", _Any) ->
    "luster.no";

no("askim", _Any) ->
    "askim.no";

no("lierne", _Any) ->
    "lierne.no";

no("holmestrand", _Any) ->
    "holmestrand.no";

no("aurland", _Any) ->
    "aurland.no";

no("askvoll", _Any) ->
    "askvoll.no";

no("flakstad", _Any) ->
    "flakstad.no";

no("kraanghke", _Any) ->
    "kraanghke.no";

no("sorfold", _Any) ->
    "sorfold.no";

no("siellak", _Any) ->
    "siellak.no";

no("tranby", _Any) ->
    "tranby.no";

no("kafjord", _Any) ->
    "kafjord.no";

no("vossevangen", _Any) ->
    "vossevangen.no";

no("flatanger", _Any) ->
    "flatanger.no";

no("sorum", _Any) ->
    "sorum.no";

no("skanland", _Any) ->
    "skanland.no";

no("ruovat", _Any) ->
    "ruovat.no";

no("hedmark", []) ->
    "hedmark.no";
no("hedmark", Parts) ->
    [First | Rest] = Parts,
    hedmark_no(First, Rest);

no("salangen", _Any) ->
    "salangen.no";

no("gildeskal", _Any) ->
    "gildeskal.no";

no("sortland", _Any) ->
    "sortland.no";

no("aremark", _Any) ->
    "aremark.no";

no("farsund", _Any) ->
    "farsund.no";

no("sund", _Any) ->
    "sund.no";

no("stange", _Any) ->
    "stange.no";

no("sunndal", _Any) ->
    "sunndal.no";

no("bahccavuotna", _Any) ->
    "bahccavuotna.no";

no("bindal", _Any) ->
    "bindal.no";

no("sf", []) ->
    "sf.no";
no("sf", Parts) ->
    [First | Rest] = Parts,
    sf_no(First, Rest);

no("stordal", _Any) ->
    "stordal.no";

no("porsgrunn", _Any) ->
    "porsgrunn.no";

no("bomlo", _Any) ->
    "bomlo.no";

no("klabu", _Any) ->
    "klabu.no";

no("langevag", _Any) ->
    "langevag.no";

no("bygland", _Any) ->
    "bygland.no";

no("egersund", _Any) ->
    "egersund.no";

no("hl", []) ->
    "hl.no";
no("hl", Parts) ->
    [First | Rest] = Parts,
    hl_no(First, Rest);

no("balestrand", _Any) ->
    "balestrand.no";

no("varoy", _Any) ->
    "varoy.no";

no("ralingen", _Any) ->
    "ralingen.no";

no("stavanger", _Any) ->
    "stavanger.no";

no("saltdal", _Any) ->
    "saltdal.no";

no("nordland", []) ->
    "nordland.no";
no("nordland", Parts) ->
    [First | Rest] = Parts,
    nordland_no(First, Rest);

no("fet", _Any) ->
    "fet.no";

no("osoyro", _Any) ->
    "osoyro.no";

no("lardal", _Any) ->
    "lardal.no";

no("jevnaker", _Any) ->
    "jevnaker.no";

no("bjerkreim", _Any) ->
    "bjerkreim.no";

no("barum", _Any) ->
    "barum.no";

no("sola", _Any) ->
    "sola.no";

no("bodo", _Any) ->
    "bodo.no";

no("vardo", _Any) ->
    "vardo.no";

no("habmer", _Any) ->
    "habmer.no";

no("mandal", _Any) ->
    "mandal.no";

no("naroy", _Any) ->
    "naroy.no";

no("fitjar", _Any) ->
    "fitjar.no";

no("lyngen", _Any) ->
    "lyngen.no";

no("divtasvuodna", _Any) ->
    "divtasvuodna.no";

no("grimstad", _Any) ->
    "grimstad.no";

no("dielddanuorri", _Any) ->
    "dielddanuorri.no";

no("meland", _Any) ->
    "meland.no";

no("vaksdal", _Any) ->
    "vaksdal.no";

no("rindal", _Any) ->
    "rindal.no";

no("royrvik", _Any) ->
    "royrvik.no";

no("laakesvuemie", _Any) ->
    "laakesvuemie.no";

no("skien", _Any) ->
    "skien.no";

no("solund", _Any) ->
    "solund.no";

no("birkenes", _Any) ->
    "birkenes.no";

no("lerdal", _Any) ->
    "lerdal.no";

no("bokn", _Any) ->
    "bokn.no";

no("suldal", _Any) ->
    "suldal.no";

no("fetsund", _Any) ->
    "fetsund.no";

no("valle", _Any) ->
    "valle.no";

no("spjelkavik", _Any) ->
    "spjelkavik.no";

no("kvitsoy", _Any) ->
    "kvitsoy.no";

no("frogn", _Any) ->
    "frogn.no";

no("verdal", _Any) ->
    "verdal.no";

no("ski", _Any) ->
    "ski.no";

no("fuoisku", _Any) ->
    "fuoisku.no";

no("lorenskog", _Any) ->
    "lorenskog.no";

no("hokksund", _Any) ->
    "hokksund.no";

no("tysnes", _Any) ->
    "tysnes.no";

no("fauske", _Any) ->
    "fauske.no";

no("hemnes", _Any) ->
    "hemnes.no";

no("lindas", _Any) ->
    "lindas.no";

no("vennesla", _Any) ->
    "vennesla.no";

no("bu", []) ->
    "bu.no";
no("bu", Parts) ->
    [First | Rest] = Parts,
    bu_no(First, Rest);

no("priv", _Any) ->
    "priv.no";

no("drammen", _Any) ->
    "drammen.no";

no("museum", _Any) ->
    "museum.no";

no("badaddja", _Any) ->
    "badaddja.no";

no("ringebu", _Any) ->
    "ringebu.no";

no("ah", []) ->
    "ah.no";
no("ah", Parts) ->
    [First | Rest] = Parts,
    ah_no(First, Rest);

no("namsskogan", _Any) ->
    "namsskogan.no";

no("berg", _Any) ->
    "berg.no";

no("leksvik", _Any) ->
    "leksvik.no";

no("sandoy", _Any) ->
    "sandoy.no";

no("norddal", _Any) ->
    "norddal.no";

no("vestby", _Any) ->
    "vestby.no";

no("osen", _Any) ->
    "osen.no";

no("telemark", []) ->
    "telemark.no";
no("telemark", Parts) ->
    [First | Rest] = Parts,
    telemark_no(First, Rest);

no("klepp", _Any) ->
    "klepp.no";

no("midsund", _Any) ->
    "midsund.no";

no("nannestad", _Any) ->
    "nannestad.no";

no("romsa", _Any) ->
    "romsa.no";

no("krokstadelva", _Any) ->
    "krokstadelva.no";

no("nt", []) ->
    "nt.no";
no("nt", Parts) ->
    [First | Rest] = Parts,
    nt_no(First, Rest);

no("fusa", _Any) ->
    "fusa.no";

no("krodsherad", _Any) ->
    "krodsherad.no";

no("enebakk", _Any) ->
    "enebakk.no";

no("forsand", _Any) ->
    "forsand.no";

no("vadso", _Any) ->
    "vadso.no";

no("rodoy", _Any) ->
    "rodoy.no";

no("gaivuotna", _Any) ->
    "gaivuotna.no";

no("oygarden", _Any) ->
    "oygarden.no";

no("lavagis", _Any) ->
    "lavagis.no";

no("trysil", _Any) ->
    "trysil.no";

no("tromso", _Any) ->
    "tromso.no";

no("horten", _Any) ->
    "horten.no";

no("tonsberg", _Any) ->
    "tonsberg.no";

no("kvafjord", _Any) ->
    "kvafjord.no";

no("evenes", _Any) ->
    "evenes.no";

no("tolga", _Any) ->
    "tolga.no";

no("aseral", _Any) ->
    "aseral.no";

no("sogndal", _Any) ->
    "sogndal.no";

no("bjarkoy", _Any) ->
    "bjarkoy.no";

no("kristiansand", _Any) ->
    "kristiansand.no";

no("overhalla", _Any) ->
    "overhalla.no";

no("amot", _Any) ->
    "amot.no";

no("vindafjord", _Any) ->
    "vindafjord.no";

no("vega", _Any) ->
    "vega.no";

no("ullensvang", _Any) ->
    "ullensvang.no";

no("modum", _Any) ->
    "modum.no";

no("narvik", _Any) ->
    "narvik.no";

no("strand", _Any) ->
    "strand.no";

no("rissa", _Any) ->
    "rissa.no";

no("leangaviika", _Any) ->
    "leangaviika.no";

no("karmoy", _Any) ->
    "karmoy.no";

no("somna", _Any) ->
    "somna.no";

no("balsfjord", _Any) ->
    "balsfjord.no";

no("notteroy", _Any) ->
    "notteroy.no";

no("afjord", _Any) ->
    "afjord.no";

no("lillehammer", _Any) ->
    "lillehammer.no";

no("brumunddal", _Any) ->
    "brumunddal.no";

no("lyngdal", _Any) ->
    "lyngdal.no";

no("narviika", _Any) ->
    "narviika.no";

no("lebesby", _Any) ->
    "lebesby.no";

no("amli", _Any) ->
    "amli.no";

no("kvinnherad", _Any) ->
    "kvinnherad.no";

no("rollag", _Any) ->
    "rollag.no";

no("frei", _Any) ->
    "frei.no";

no("loten", _Any) ->
    "loten.no";

no("karasjohka", _Any) ->
    "karasjohka.no";

no("leirvik", _Any) ->
    "leirvik.no";

no("floro", _Any) ->
    "floro.no";

no("tynset", _Any) ->
    "tynset.no";

no("marnardal", _Any) ->
    "marnardal.no";

no("bardu", _Any) ->
    "bardu.no";

no("evenassi", _Any) ->
    "evenassi.no";

no("hagebostad", _Any) ->
    "hagebostad.no";

no("trana", _Any) ->
    "trana.no";

no("drangedal", _Any) ->
    "drangedal.no";

no("fylkesbibl", _Any) ->
    "fylkesbibl.no";

no("alstahaug", _Any) ->
    "alstahaug.no";

no("nesoddtangen", _Any) ->
    "nesoddtangen.no";

no("gjesdal", _Any) ->
    "gjesdal.no";

no("gaular", _Any) ->
    "gaular.no";

no("gratangen", _Any) ->
    "gratangen.no";

no("malselv", _Any) ->
    "malselv.no";

no("orsta", _Any) ->
    "orsta.no";

no("al", _Any) ->
    "al.no";

no("akershus", []) ->
    "akershus.no";
no("akershus", Parts) ->
    [First | Rest] = Parts,
    akershus_no(First, Rest);

no("kviteseid", _Any) ->
    "kviteseid.no";

no("grong", _Any) ->
    "grong.no";

no("giehtavuoatna", _Any) ->
    "giehtavuoatna.no";

no("iveland", _Any) ->
    "iveland.no";

no("masoy", _Any) ->
    "masoy.no";

no("halsa", _Any) ->
    "halsa.no";

no("lier", _Any) ->
    "lier.no";

no("karasjok", _Any) ->
    "karasjok.no";

no("seljord", _Any) ->
    "seljord.no";

no("lillesand", _Any) ->
    "lillesand.no";

no("skedsmo", _Any) ->
    "skedsmo.no";

no("nordreisa", _Any) ->
    "nordreisa.no";

no("vang", _Any) ->
    "vang.no";

no("karlsoy", _Any) ->
    "karlsoy.no";

no("beiarn", _Any) ->
    "beiarn.no";

no("slattum", _Any) ->
    "slattum.no";

no("fyresdal", _Any) ->
    "fyresdal.no";

no("salat", _Any) ->
    "salat.no";

no("kragero", _Any) ->
    "kragero.no";

no("snasa", _Any) ->
    "snasa.no";

no("sykkylven", _Any) ->
    "sykkylven.no";

no("verran", _Any) ->
    "verran.no";

no("grane", _Any) ->
    "grane.no";

no("averoy", _Any) ->
    "averoy.no";

no("folldal", _Any) ->
    "folldal.no";

no("hyllestad", _Any) ->
    "hyllestad.no";

no("eigersund", _Any) ->
    "eigersund.no";

no("jondal", _Any) ->
    "jondal.no";

no("malatvuopmi", _Any) ->
    "malatvuopmi.no";

no("folkebibl", _Any) ->
    "folkebibl.no";

no("spydeberg", _Any) ->
    "spydeberg.no";

no("raisa", _Any) ->
    "raisa.no";

no("asker", _Any) ->
    "asker.no";

no("cahcesuolo", _Any) ->
    "cahcesuolo.no";

no("algard", _Any) ->
    "algard.no";

no("froya", _Any) ->
    "froya.no";

no("larvik", _Any) ->
    "larvik.no";

no("tm", []) ->
    "tm.no";
no("tm", Parts) ->
    [First | Rest] = Parts,
    tm_no(First, Rest);

no("gran", _Any) ->
    "gran.no";

no("finnoy", _Any) ->
    "finnoy.no";

no("bergen", _Any) ->
    "bergen.no";

no("hamar", _Any) ->
    "hamar.no";

no("lenvik", _Any) ->
    "lenvik.no";

no("hoylandet", _Any) ->
    "hoylandet.no";

no("rakkestad", _Any) ->
    "rakkestad.no";

no("nesset", _Any) ->
    "nesset.no";

no("tranoy", _Any) ->
    "tranoy.no";

no("kristiansund", _Any) ->
    "kristiansund.no";

no("steinkjer", _Any) ->
    "steinkjer.no";

no("snaase", _Any) ->
    "snaase.no";

no("masfjorden", _Any) ->
    "masfjorden.no";

no("of", []) ->
    "of.no";
no("of", Parts) ->
    [First | Rest] = Parts,
    of_no(First, Rest);

no("tokke", _Any) ->
    "tokke.no";

no("luroy", _Any) ->
    "luroy.no";

no("orkanger", _Any) ->
    "orkanger.no";

no("kirkenes", _Any) ->
    "kirkenes.no";

no("tananger", _Any) ->
    "tananger.no";

no("kvinesdal", _Any) ->
    "kvinesdal.no";

no("orkdal", _Any) ->
    "orkdal.no";

no("austevoll", _Any) ->
    "austevoll.no";

no("ringerike", _Any) ->
    "ringerike.no";

no("kautokeino", _Any) ->
    "kautokeino.no";

no("sogne", _Any) ->
    "sogne.no";

no("unjarga", _Any) ->
    "unjarga.no";

no("davvesiida", _Any) ->
    "davvesiida.no";

no("vegarshei", _Any) ->
    "vegarshei.no";

no("ol", []) ->
    "ol.no";
no("ol", Parts) ->
    [First | Rest] = Parts,
    ol_no(First, Rest);

no("vestvagoy", _Any) ->
    "vestvagoy.no";

no("vaga", _Any) ->
    "vaga.no";

no("beardu", _Any) ->
    "beardu.no";

no("flekkefjord", _Any) ->
    "flekkefjord.no";

no("stavern", _Any) ->
    "stavern.no";

no("guovdageaidnu", _Any) ->
    "guovdageaidnu.no";

no("alesund", _Any) ->
    "alesund.no";

no("fhs", _Any) ->
    "fhs.no";

no("hadsel", _Any) ->
    "hadsel.no";

no("hattfjelldal", _Any) ->
    "hattfjelldal.no";

no("vf", []) ->
    "vf.no";
no("vf", Parts) ->
    [First | Rest] = Parts,
    vf_no(First, Rest);

no("jolster", _Any) ->
    "jolster.no";

no("sarpsborg", _Any) ->
    "sarpsborg.no";

no("loabat", _Any) ->
    "loabat.no";

no("hurum", _Any) ->
    "hurum.no";

no("sorreisa", _Any) ->
    "sorreisa.no";

no("oksnes", _Any) ->
    "oksnes.no";

no("arna", _Any) ->
    "arna.no";

no("tjeldsund", _Any) ->
    "tjeldsund.no";

no("snillfjord", _Any) ->
    "snillfjord.no";

no("andoy", _Any) ->
    "andoy.no";

no("hareid", _Any) ->
    "hareid.no";

no("holtalen", _Any) ->
    "holtalen.no";

no("gol", _Any) ->
    "gol.no";

no("selje", _Any) ->
    "selje.no";

no("hvaler", _Any) ->
    "hvaler.no";

no("giske", _Any) ->
    "giske.no";

no("volda", _Any) ->
    "volda.no";

no("bamble", _Any) ->
    "bamble.no";

no("rauma", _Any) ->
    "rauma.no";

no("bahcavuotna", _Any) ->
    "bahcavuotna.no";

no("moareke", _Any) ->
    "moareke.no";

no("fedje", _Any) ->
    "fedje.no";

no("vikna", _Any) ->
    "vikna.no";

no("batsfjord", _Any) ->
    "batsfjord.no";

no("sandnes", _Any) ->
    "sandnes.no";

no("dovre", _Any) ->
    "dovre.no";

no("frana", _Any) ->
    "frana.no";

no("nesodden", _Any) ->
    "nesodden.no";

no("ha", _Any) ->
    "ha.no";

no("sveio", _Any) ->
    "sveio.no";

no("steigen", _Any) ->
    "steigen.no";

no("stjordal", _Any) ->
    "stjordal.no";

no("kongsberg", _Any) ->
    "kongsberg.no";

no("ivgu", _Any) ->
    "ivgu.no";

no("budejju", _Any) ->
    "budejju.no";

no("troandin", _Any) ->
    "troandin.no";

no("etnedal", _Any) ->
    "etnedal.no";

no("st", []) ->
    "st.no";
no("st", Parts) ->
    [First | Rest] = Parts,
    st_no(First, Rest);

no("bryne", _Any) ->
    "bryne.no";

no("selbu", _Any) ->
    "selbu.no";

no("co", _Any) ->
    "co.no";

no("flesberg", _Any) ->
    "flesberg.no";

no("storfjord", _Any) ->
    "storfjord.no";

no("lodingen", _Any) ->
    "lodingen.no";

no("skedsmokorset", _Any) ->
    "skedsmokorset.no";

no("varggat", _Any) ->
    "varggat.no";

no("hammerfest", _Any) ->
    "hammerfest.no";

no("stat", _Any) ->
    "stat.no";

no("eidsberg", _Any) ->
    "eidsberg.no";

no("lund", _Any) ->
    "lund.no";

no("snoasa", _Any) ->
    "snoasa.no";

no("fredrikstad", _Any) ->
    "fredrikstad.no";

no("hammarfeasta", _Any) ->
    "hammarfeasta.no";

no("loppa", _Any) ->
    "loppa.no";

no("bajddar", _Any) ->
    "bajddar.no";

no("leikanger", _Any) ->
    "leikanger.no";

no("levanger", _Any) ->
    "levanger.no";

no("raholt", _Any) ->
    "raholt.no";

no("skiptvet", _Any) ->
    "skiptvet.no";

no("lindesnes", _Any) ->
    "lindesnes.no";

no("orskog", _Any) ->
    "orskog.no";

no("lahppi", _Any) ->
    "lahppi.no";

no("vgs", _Any) ->
    "vgs.no";

no("fjell", _Any) ->
    "fjell.no";

no("royken", _Any) ->
    "royken.no";

no("bievat", _Any) ->
    "bievat.no";

no("dyroy", _Any) ->
    "dyroy.no";

no("radoy", _Any) ->
    "radoy.no";

no("hoyanger", _Any) ->
    "hoyanger.no";

no("skierva", _Any) ->
    "skierva.no";

no("porsanger", _Any) ->
    "porsanger.no";

no("rahkkeravju", _Any) ->
    "rahkkeravju.no";

no("gangaviika", _Any) ->
    "gangaviika.no";

no("ullensaker", _Any) ->
    "ullensaker.no";

no("sandnessjoen", _Any) ->
    "sandnessjoen.no";

no("tingvoll", _Any) ->
    "tingvoll.no";

no("torsken", _Any) ->
    "torsken.no";

no("hm", []) ->
    "hm.no";
no("hm", Parts) ->
    [First | Rest] = Parts,
    hm_no(First, Rest);

no("drobak", _Any) ->
    "drobak.no";

no("rost", _Any) ->
    "rost.no";

no("baidar", _Any) ->
    "baidar.no";

no("fm", []) ->
    "fm.no";
no("fm", Parts) ->
    [First | Rest] = Parts,
    fm_no(First, Rest);

no("vagan", _Any) ->
    "vagan.no";

no("odda", _Any) ->
    "odda.no";

no("akrehamn", _Any) ->
    "akrehamn.no";

no("forde", _Any) ->
    "forde.no";

no("nittedal", _Any) ->
    "nittedal.no";

no("engerdal", _Any) ->
    "engerdal.no";

no("herad", _Any) ->
    "herad.no";

no("vik", _Any) ->
    "vik.no";

no("vefsn", _Any) ->
    "vefsn.no";

no("myspreadshop", _Any) ->
    "myspreadshop.no";

no("etne", _Any) ->
    "etne.no";

no("hasvik", _Any) ->
    "hasvik.no";

no("porsangu", _Any) ->
    "porsangu.no";

no("navuotna", _Any) ->
    "navuotna.no";

no("meraker", _Any) ->
    "meraker.no";

no("tromsa", _Any) ->
    "tromsa.no";

no("stokke", _Any) ->
    "stokke.no";

no("skjervoy", _Any) ->
    "skjervoy.no";

no("alaheadju", _Any) ->
    "alaheadju.no";

no("balat", _Any) ->
    "balat.no";

no("sula", _Any) ->
    "sula.no";

no("malvik", _Any) ->
    "malvik.no";

no("tvedestrand", _Any) ->
    "tvedestrand.no";

no("nl", []) ->
    "nl.no";
no("nl", Parts) ->
    [First | Rest] = Parts,
    nl_no(First, Rest);

no("moskenes", _Any) ->
    "moskenes.no";

no("kvam", _Any) ->
    "kvam.no";

no("aarborte", _Any) ->
    "aarborte.no";

no("buskerud", []) ->
    "buskerud.no";
no("buskerud", Parts) ->
    [First | Rest] = Parts,
    buskerud_no(First, Rest);

no("skanit", _Any) ->
    "skanit.no";

no("ardal", _Any) ->
    "ardal.no";

no("hornindal", _Any) ->
    "hornindal.no";

no("romskog", _Any) ->
    "romskog.no";

no("osteroy", _Any) ->
    "osteroy.no";

no("sauda", _Any) ->
    "sauda.no";

no("haram", _Any) ->
    "haram.no";

no("elverum", _Any) ->
    "elverum.no";

no("austrheim", _Any) ->
    "austrheim.no";

no("arendal", _Any) ->
    "arendal.no";

no("stord", _Any) ->
    "stord.no";

no("oppegard", _Any) ->
    "oppegard.no";

no("utsira", _Any) ->
    "utsira.no";

no("songdalen", _Any) ->
    "songdalen.no";

no("gjerstad", _Any) ->
    "gjerstad.no";

no("tr", []) ->
    "tr.no";
no("tr", Parts) ->
    [First | Rest] = Parts,
    tr_no(First, Rest);

no("frosta", _Any) ->
    "frosta.no";

no("eidfjord", _Any) ->
    "eidfjord.no";

no("hordaland", []) ->
    "hordaland.no";
no("hordaland", Parts) ->
    [First | Rest] = Parts,
    hordaland_no(First, Rest);


no(_, _) ->
    "no".

%% regular rules
aa_no("gs", _Any) ->
    "gs.aa.no";


aa_no(_, _) ->
    "aa.no".

%% regular rules
ostfold_no("valer", _Any) ->
    "valer.ostfold.no";


ostfold_no(_, _) ->
    "ostfold.no".

%% regular rules
vestfold_no("sande", _Any) ->
    "sande.vestfold.no";


vestfold_no(_, _) ->
    "vestfold.no".

%% regular rules
svalbard_no("gs", _Any) ->
    "gs.svalbard.no";


svalbard_no(_, _) ->
    "svalbard.no".

%% regular rules
mr_no("gs", _Any) ->
    "gs.mr.no";


mr_no(_, _) ->
    "mr.no".

%% regular rules
rl_no("gs", _Any) ->
    "gs.rl.no";


rl_no(_, _) ->
    "rl.no".

%% regular rules
va_no("gs", _Any) ->
    "gs.va.no";


va_no(_, _) ->
    "va.no".

%% regular rules
oslo_no("gs", _Any) ->
    "gs.oslo.no";


oslo_no(_, _) ->
    "oslo.no".

%% regular rules
hedmark_no("os", _Any) ->
    "os.hedmark.no";

hedmark_no("valer", _Any) ->
    "valer.hedmark.no";


hedmark_no(_, _) ->
    "hedmark.no".

%% regular rules
sf_no("gs", _Any) ->
    "gs.sf.no";


sf_no(_, _) ->
    "sf.no".

%% regular rules
hl_no("gs", _Any) ->
    "gs.hl.no";


hl_no(_, _) ->
    "hl.no".

%% regular rules
nordland_no("bo", _Any) ->
    "bo.nordland.no";

nordland_no("heroy", _Any) ->
    "heroy.nordland.no";


nordland_no(_, _) ->
    "nordland.no".

%% regular rules
bu_no("gs", _Any) ->
    "gs.bu.no";


bu_no(_, _) ->
    "bu.no".

%% regular rules
ah_no("gs", _Any) ->
    "gs.ah.no";


ah_no(_, _) ->
    "ah.no".

%% regular rules
telemark_no("bo", _Any) ->
    "bo.telemark.no";


telemark_no(_, _) ->
    "telemark.no".

%% regular rules
nt_no("gs", _Any) ->
    "gs.nt.no";


nt_no(_, _) ->
    "nt.no".

%% regular rules
akershus_no("nes", _Any) ->
    "nes.akershus.no";


akershus_no(_, _) ->
    "akershus.no".

%% regular rules
tm_no("gs", _Any) ->
    "gs.tm.no";


tm_no(_, _) ->
    "tm.no".

%% regular rules
of_no("gs", _Any) ->
    "gs.of.no";


of_no(_, _) ->
    "of.no".

%% regular rules
ol_no("gs", _Any) ->
    "gs.ol.no";


ol_no(_, _) ->
    "ol.no".

%% regular rules
vf_no("gs", _Any) ->
    "gs.vf.no";


vf_no(_, _) ->
    "vf.no".

%% regular rules
st_no("gs", _Any) ->
    "gs.st.no";


st_no(_, _) ->
    "st.no".

%% regular rules
hm_no("gs", _Any) ->
    "gs.hm.no";


hm_no(_, _) ->
    "hm.no".

%% regular rules
fm_no("gs", _Any) ->
    "gs.fm.no";


fm_no(_, _) ->
    "fm.no".

%% regular rules
nl_no("gs", _Any) ->
    "gs.nl.no";


nl_no(_, _) ->
    "nl.no".

%% regular rules
buskerud_no("nes", _Any) ->
    "nes.buskerud.no";


buskerud_no(_, _) ->
    "buskerud.no".

%% regular rules
tr_no("gs", _Any) ->
    "gs.tr.no";


tr_no(_, _) ->
    "tr.no".

%% regular rules
hordaland_no("os", _Any) ->
    "os.hordaland.no";


hordaland_no(_, _) ->
    "hordaland.no".

%% regular rules
mv("mil", _Any) ->
    "mil.mv";

mv("pro", _Any) ->
    "pro.mv";

mv("info", _Any) ->
    "info.mv";

mv("edu", _Any) ->
    "edu.mv";

mv("com", _Any) ->
    "com.mv";

mv("gov", _Any) ->
    "gov.mv";

mv("aero", _Any) ->
    "aero.mv";

mv("museum", _Any) ->
    "museum.mv";

mv("int", _Any) ->
    "int.mv";

mv("net", _Any) ->
    "net.mv";

mv("coop", _Any) ->
    "coop.mv";

mv("name", _Any) ->
    "name.mv";

mv("org", _Any) ->
    "org.mv";

mv("biz", _Any) ->
    "biz.mv";


mv(_, _) ->
    "mv".

%% regular rules
tf("sch", _Any) ->
    "sch.tf";


tf(_, _) ->
    "tf".

%% regular rules
ph("ngo", _Any) ->
    "ngo.ph";

ph("i", _Any) ->
    "i.ph";

ph("mil", _Any) ->
    "mil.ph";

ph("com", _Any) ->
    "com.ph";

ph("edu", _Any) ->
    "edu.ph";

ph("gov", _Any) ->
    "gov.ph";

ph("net", _Any) ->
    "net.ph";

ph("org", _Any) ->
    "org.ph";


ph(_, _) ->
    "ph".

%% regular rules
bn("gov", _Any) ->
    "gov.bn";

bn("co", _Any) ->
    "co.bn";

bn("net", _Any) ->
    "net.bn";

bn("org", _Any) ->
    "org.bn";

bn("edu", _Any) ->
    "edu.bn";

bn("com", _Any) ->
    "com.bn";


bn(_, _) ->
    "bn".

%% regular rules
ee("com", []) ->
    "com.ee";
ee("com", Parts) ->
    [First | Rest] = Parts,
    com_ee(First, Rest);

ee("edu", _Any) ->
    "edu.ee";

ee("lib", _Any) ->
    "lib.ee";

ee("fie", _Any) ->
    "fie.ee";

ee("org", _Any) ->
    "org.ee";

ee("med", _Any) ->
    "med.ee";

ee("riik", _Any) ->
    "riik.ee";

ee("pri", _Any) ->
    "pri.ee";

ee("aip", _Any) ->
    "aip.ee";

ee("gov", _Any) ->
    "gov.ee";


ee(_, _) ->
    "ee".

%% regular rules
com_ee("blogspot", _Any) ->
    "blogspot.com.ee";


com_ee(_, _) ->
    "com.ee".

%% regular rules
fj("mil", _Any) ->
    "mil.fj";

fj("pro", _Any) ->
    "pro.fj";

fj("com", _Any) ->
    "com.fj";

fj("info", _Any) ->
    "info.fj";

fj("name", _Any) ->
    "name.fj";

fj("ac", _Any) ->
    "ac.fj";

fj("gov", _Any) ->
    "gov.fj";

fj("org", _Any) ->
    "org.fj";

fj("biz", _Any) ->
    "biz.fj";

fj("net", _Any) ->
    "net.fj";


fj(_, _) ->
    "fj".

%% regular rules
network("co", _Any) ->
    "co.network";

network("azimuth", _Any) ->
    "azimuth.network";

network("tlon", _Any) ->
    "tlon.network";

network("arvo", _Any) ->
    "arvo.network";


network(_, _) ->
    "network".

%% regular rules
om("com", _Any) ->
    "com.om";

om("edu", _Any) ->
    "edu.om";

om("pro", _Any) ->
    "pro.om";

om("gov", _Any) ->
    "gov.om";

om("co", _Any) ->
    "co.om";

om("net", _Any) ->
    "net.om";

om("med", _Any) ->
    "med.om";

om("org", _Any) ->
    "org.om";

om("museum", _Any) ->
    "museum.om";


om(_, _) ->
    "om".

%% regular rules
ug("blogspot", _Any) ->
    "blogspot.ug";

ug("com", _Any) ->
    "com.ug";

ug("or", _Any) ->
    "or.ug";

ug("ac", _Any) ->
    "ac.ug";

ug("co", _Any) ->
    "co.ug";

ug("ne", _Any) ->
    "ne.ug";

ug("org", _Any) ->
    "org.ug";

ug("go", _Any) ->
    "go.ug";

ug("sc", _Any) ->
    "sc.ug";


ug(_, _) ->
    "ug".

%% regular rules
lv("com", _Any) ->
    "com.lv";

lv("id", _Any) ->
    "id.lv";

lv("edu", _Any) ->
    "edu.lv";

lv("asn", _Any) ->
    "asn.lv";

lv("mil", _Any) ->
    "mil.lv";

lv("net", _Any) ->
    "net.lv";

lv("org", _Any) ->
    "org.lv";

lv("conf", _Any) ->
    "conf.lv";

lv("gov", _Any) ->
    "gov.lv";


lv(_, _) ->
    "lv".

%% regular rules
services("loginline", _Any) ->
    "loginline.services";


services(_, _) ->
    "services".

%% regular rules
review("ybo", _Any) ->
    "ybo.review";


review(_, _) ->
    "review".

%% regular rules
porn("indie", _Any) ->
    "indie.porn";


porn(_, _) ->
    "porn".

%% regular rules
rocks("myddns", _Any) ->
    "myddns.rocks";

rocks("webspace", _Any) ->
    "webspace.rocks";


rocks(_, _) ->
    "rocks".

%% regular rules
pa("ac", _Any) ->
    "ac.pa";

pa("abo", _Any) ->
    "abo.pa";

pa("net", _Any) ->
    "net.pa";

pa("nom", _Any) ->
    "nom.pa";

pa("gob", _Any) ->
    "gob.pa";

pa("med", _Any) ->
    "med.pa";

pa("org", _Any) ->
    "org.pa";

pa("sld", _Any) ->
    "sld.pa";

pa("ing", _Any) ->
    "ing.pa";

pa("edu", _Any) ->
    "edu.pa";

pa("com", _Any) ->
    "com.pa";


pa(_, _) ->
    "pa".

%% regular rules
pt("gov", _Any) ->
    "gov.pt";

pt("nome", _Any) ->
    "nome.pt";

pt("int", _Any) ->
    "int.pt";

pt("net", _Any) ->
    "net.pt";

pt("org", _Any) ->
    "org.pt";

pt("blogspot", _Any) ->
    "blogspot.pt";

pt("publ", _Any) ->
    "publ.pt";

pt("edu", _Any) ->
    "edu.pt";

pt("com", _Any) ->
    "com.pt";


pt(_, _) ->
    "pt".

%% regular rules
ao("it", _Any) ->
    "it.ao";

ao("pb", _Any) ->
    "pb.ao";

ao("co", _Any) ->
    "co.ao";

ao("og", _Any) ->
    "og.ao";

ao("ed", _Any) ->
    "ed.ao";

ao("gv", _Any) ->
    "gv.ao";


ao(_, _) ->
    "ao".

%% regular rules
zm("gov", _Any) ->
    "gov.zm";

zm("ac", _Any) ->
    "ac.zm";

zm("co", _Any) ->
    "co.zm";

zm("net", _Any) ->
    "net.zm";

zm("biz", _Any) ->
    "biz.zm";

zm("sch", _Any) ->
    "sch.zm";

zm("org", _Any) ->
    "org.zm";

zm("mil", _Any) ->
    "mil.zm";

zm("info", _Any) ->
    "info.zm";

zm("edu", _Any) ->
    "edu.zm";

zm("com", _Any) ->
    "com.zm";


zm(_, _) ->
    "zm".

%% regular rules
me("myds", _Any) ->
    "myds.me";

me("brasilia", _Any) ->
    "brasilia.me";

me("wedeploy", _Any) ->
    "wedeploy.me";

me("priv", _Any) ->
    "priv.me";

me("mcdir", _Any) ->
    "mcdir.me";

me("co", _Any) ->
    "co.me";

me("edu", _Any) ->
    "edu.me";

me("barsy", _Any) ->
    "barsy.me";

me("its", _Any) ->
    "its.me";

me("daplie", []) ->
    "daplie.me";
me("daplie", Parts) ->
    [First | Rest] = Parts,
    daplie_me(First, Rest);

me("transip", []) ->
    "transip.me";
me("transip", Parts) ->
    [First | Rest] = Parts,
    transip_me(First, Rest);

me("dnsfor", _Any) ->
    "dnsfor.me";

me("diskstation", _Any) ->
    "diskstation.me";

me("dscloud", _Any) ->
    "dscloud.me";

me("lohmus", _Any) ->
    "lohmus.me";

me("synology", _Any) ->
    "synology.me";

me("filegear", _Any) ->
    "filegear.me";

me("net", _Any) ->
    "net.me";

me("ravendb", _Any) ->
    "ravendb.me";

me("edgestack", _Any) ->
    "edgestack.me";

me("gov", _Any) ->
    "gov.me";

me("ac", _Any) ->
    "ac.me";

me("noip", _Any) ->
    "noip.me";

me("org", _Any) ->
    "org.me";

me("yombo", _Any) ->
    "yombo.me";

me("glitch", _Any) ->
    "glitch.me";

me("hopto", _Any) ->
    "hopto.me";

me("mcpe", _Any) ->
    "mcpe.me";

me("nohost", _Any) ->
    "nohost.me";

me("soundcast", _Any) ->
    "soundcast.me";

me("ddns", _Any) ->
    "ddns.me";

me("webhop", _Any) ->
    "webhop.me";

me("loginto", _Any) ->
    "loginto.me";


me(_, _) ->
    "me".

%% regular rules
daplie_me("localhost", _Any) ->
    "localhost.daplie.me";


daplie_me(_, _) ->
    "daplie.me".

%% regular rules
transip_me("site", _Any) ->
    "site.transip.me";


transip_me(_, _) ->
    "transip.me".

%% regular rules
aw("com", _Any) ->
    "com.aw";


aw(_, _) ->
    "aw".

%% regular rules
pk("fam", _Any) ->
    "fam.pk";

pk("gon", _Any) ->
    "gon.pk";

pk("com", _Any) ->
    "com.pk";

pk("web", _Any) ->
    "web.pk";

pk("info", _Any) ->
    "info.pk";

pk("edu", _Any) ->
    "edu.pk";

pk("gos", _Any) ->
    "gos.pk";

pk("gov", _Any) ->
    "gov.pk";

pk("net", _Any) ->
    "net.pk";

pk("gop", _Any) ->
    "gop.pk";

pk("org", _Any) ->
    "org.pk";

pk("gob", _Any) ->
    "gob.pk";

pk("biz", _Any) ->
    "biz.pk";

pk("gok", _Any) ->
    "gok.pk";


pk(_, _) ->
    "pk".

%% regular rules
bi("co", _Any) ->
    "co.bi";

bi("or", _Any) ->
    "or.bi";

bi("org", _Any) ->
    "org.bi";

bi("edu", _Any) ->
    "edu.bi";

bi("com", _Any) ->
    "com.bi";


bi(_, _) ->
    "bi".

%% regular rules
ke("mobi", _Any) ->
    "mobi.ke";

ke("me", _Any) ->
    "me.ke";

ke("or", _Any) ->
    "or.ke";

ke("info", _Any) ->
    "info.ke";

ke("go", _Any) ->
    "go.ke";

ke("sc", _Any) ->
    "sc.ke";

ke("ne", _Any) ->
    "ne.ke";

ke("ac", _Any) ->
    "ac.ke";

ke("co", []) ->
    "co.ke";
ke("co", Parts) ->
    [First | Rest] = Parts,
    co_ke(First, Rest);


ke(_, _) ->
    "ke".

%% regular rules
co_ke("blogspot", _Any) ->
    "blogspot.co.ke";


co_ke(_, _) ->
    "co.ke".

%% regular rules
asia("cloudns", _Any) ->
    "cloudns.asia";


asia(_, _) ->
    "asia".

%% regular rules
yt("org", _Any) ->
    "org.yt";


yt(_, _) ->
    "yt".

%% regular rules
space("uber", _Any) ->
    "uber.space";

space("myfast", _Any) ->
    "myfast.space";


space(_, _) ->
    "space".

%% regular rules
ge("edu", _Any) ->
    "edu.ge";

ge("pvt", _Any) ->
    "pvt.ge";

ge("com", _Any) ->
    "com.ge";

ge("mil", _Any) ->
    "mil.ge";

ge("net", _Any) ->
    "net.ge";

ge("org", _Any) ->
    "org.ge";

ge("gov", _Any) ->
    "gov.ge";


ge(_, _) ->
    "ge".

%% regular rules
lk("sch", _Any) ->
    "sch.lk";

lk("org", _Any) ->
    "org.lk";

lk("ngo", _Any) ->
    "ngo.lk";

lk("hotel", _Any) ->
    "hotel.lk";

lk("ac", _Any) ->
    "ac.lk";

lk("gov", _Any) ->
    "gov.lk";

lk("soc", _Any) ->
    "soc.lk";

lk("ltd", _Any) ->
    "ltd.lk";

lk("int", _Any) ->
    "int.lk";

lk("net", _Any) ->
    "net.lk";

lk("grp", _Any) ->
    "grp.lk";

lk("assn", _Any) ->
    "assn.lk";

lk("edu", _Any) ->
    "edu.lk";

lk("web", _Any) ->
    "web.lk";

lk("com", _Any) ->
    "com.lk";


lk(_, _) ->
    "lk".

%% regular rules
party("ybo", _Any) ->
    "ybo.party";


party(_, _) ->
    "party".

%% regular rules
bg("o", _Any) ->
    "o.bg";

bg("b", _Any) ->
    "b.bg";

bg("j", _Any) ->
    "j.bg";

bg("s", _Any) ->
    "s.bg";

bg("k", _Any) ->
    "k.bg";

bg("e", _Any) ->
    "e.bg";

bg("c", _Any) ->
    "c.bg";

bg("i", _Any) ->
    "i.bg";

bg("w", _Any) ->
    "w.bg";

bg("y", _Any) ->
    "y.bg";

bg("h", _Any) ->
    "h.bg";

bg("p", _Any) ->
    "p.bg";

bg("a", _Any) ->
    "a.bg";

bg("v", _Any) ->
    "v.bg";

bg("x", _Any) ->
    "x.bg";

bg("n", _Any) ->
    "n.bg";

bg("f", _Any) ->
    "f.bg";

bg("l", _Any) ->
    "l.bg";

bg("barsy", _Any) ->
    "barsy.bg";

bg("t", _Any) ->
    "t.bg";

bg("z", _Any) ->
    "z.bg";

bg("r", _Any) ->
    "r.bg";

bg("u", _Any) ->
    "u.bg";

bg("q", _Any) ->
    "q.bg";

bg("g", _Any) ->
    "g.bg";

bg("blogspot", _Any) ->
    "blogspot.bg";

bg("d", _Any) ->
    "d.bg";

bg("m", _Any) ->
    "m.bg";


bg(_, _) ->
    "bg".

%% regular rules
nz("iwi", _Any) ->
    "iwi.nz";

nz("org", _Any) ->
    "org.nz";

nz("govt", _Any) ->
    "govt.nz";

nz("maori", _Any) ->
    "maori.nz";

nz("parliament", _Any) ->
    "parliament.nz";

nz("co", []) ->
    "co.nz";
nz("co", Parts) ->
    [First | Rest] = Parts,
    co_nz(First, Rest);

nz("ac", _Any) ->
    "ac.nz";

nz("geek", _Any) ->
    "geek.nz";

nz("health", _Any) ->
    "health.nz";

nz("net", _Any) ->
    "net.nz";

nz("gen", _Any) ->
    "gen.nz";

nz("school", _Any) ->
    "school.nz";

nz("mil", _Any) ->
    "mil.nz";

nz("kiwi", _Any) ->
    "kiwi.nz";

nz("cri", _Any) ->
    "cri.nz";


nz(_, _) ->
    "nz".

%% regular rules
co_nz("blogspot", _Any) ->
    "blogspot.co.nz";


co_nz(_, _) ->
    "co.nz".

%% regular rules
ye("org", _Any) ->
    "org.ye";

ye("net", _Any) ->
    "net.ye";

ye("edu", _Any) ->
    "edu.ye";

ye("com", _Any) ->
    "com.ye";

ye("mil", _Any) ->
    "mil.ye";

ye("gov", _Any) ->
    "gov.ye";


ye(_, _) ->
    "ye".

%% regular rules
lt("gov", _Any) ->
    "gov.lt";

lt("blogspot", _Any) ->
    "blogspot.lt";


lt(_, _) ->
    "lt".

%% regular rules
ws("gov", _Any) ->
    "gov.ws";

ws("mypets", _Any) ->
    "mypets.ws";

ws("net", _Any) ->
    "net.ws";

ws("org", _Any) ->
    "org.ws";

ws("dyndns", _Any) ->
    "dyndns.ws";

ws("com", _Any) ->
    "com.ws";

ws("edu", _Any) ->
    "edu.ws";


ws(_, _) ->
    "ws".

%% regular rules
sl("gov", _Any) ->
    "gov.sl";

sl("org", _Any) ->
    "org.sl";

sl("com", _Any) ->
    "com.sl";

sl("net", _Any) ->
    "net.sl";

sl("edu", _Any) ->
    "edu.sl";


sl(_, _) ->
    "sl".

%% regular rules
la("bnr", _Any) ->
    "bnr.la";

la("info", _Any) ->
    "info.la";

la("edu", _Any) ->
    "edu.la";

la("com", _Any) ->
    "com.la";

la("c", _Any) ->
    "c.la";

la("org", _Any) ->
    "org.la";

la("net", _Any) ->
    "net.la";

la("int", _Any) ->
    "int.la";

la("per", _Any) ->
    "per.la";

la("gov", _Any) ->
    "gov.la";


la(_, _) ->
    "la".

%% regular rules
trade("ybo", _Any) ->
    "ybo.trade";


trade(_, _) ->
    "trade".

%% regular rules
gt("de", _Any) ->
    "de.gt";

gt("com", _Any) ->
    "com.gt";

gt("to", _Any) ->
    "to.gt";

gt("edu", _Any) ->
    "edu.gt";

gt("ind", _Any) ->
    "ind.gt";

gt("mil", _Any) ->
    "mil.gt";

gt("blog", _Any) ->
    "blog.gt";

gt("org", _Any) ->
    "org.gt";

gt("gob", _Any) ->
    "gob.gt";

gt("net", _Any) ->
    "net.gt";


gt(_, _) ->
    "gt".

%% regular rules
gd("edu", _Any) ->
    "edu.gd";

gd("gov", _Any) ->
    "gov.gd";


gd(_, _) ->
    "gd".

%% regular rules
bj("univ", _Any) ->
    "univ.bj";

bj("org", _Any) ->
    "org.bj";

bj("eco", _Any) ->
    "eco.bj";

bj("assur", _Any) ->
    "assur.bj";

bj("restaurant", _Any) ->
    "restaurant.bj";

bj("blogspot", _Any) ->
    "blogspot.bj";

bj("architectes", _Any) ->
    "architectes.bj";

bj("agro", _Any) ->
    "agro.bj";

bj("co", _Any) ->
    "co.bj";

bj("loisirs", _Any) ->
    "loisirs.bj";

bj("ote", _Any) ->
    "ote.bj";

bj("resto", _Any) ->
    "resto.bj";

bj("money", _Any) ->
    "money.bj";

bj("net", _Any) ->
    "net.bj";

bj("econo", _Any) ->
    "econo.bj";

bj("avocats", _Any) ->
    "avocats.bj";

bj("com", _Any) ->
    "com.bj";

bj("info", _Any) ->
    "info.bj";

bj("edu", _Any) ->
    "edu.bj";

bj("africa", _Any) ->
    "africa.bj";

bj("tourism", _Any) ->
    "tourism.bj";


bj(_, _) ->
    "bj".

%% regular rules
cu("inf", _Any) ->
    "inf.cu";

cu("gov", _Any) ->
    "gov.cu";

cu("net", _Any) ->
    "net.cu";

cu("org", _Any) ->
    "org.cu";

cu("com", _Any) ->
    "com.cu";

cu("edu", _Any) ->
    "edu.cu";


cu(_, _) ->
    "cu".

%% regular rules
ax("us", _Any) ->
    "us.ax";

ax("xy", _Any) ->
    "xy.ax";

ax("mc", _Any) ->
    "mc.ax";

ax("cat", _Any) ->
    "cat.ax";

ax("eu", _Any) ->
    "eu.ax";

ax("es", _Any) ->
    "es.ax";

ax("be", _Any) ->
    "be.ax";

ax("gg", _Any) ->
    "gg.ax";


ax(_, _) ->
    "ax".

%% regular rules
rs("org", _Any) ->
    "org.rs";

rs("in", _Any) ->
    "in.rs";

rs("ox", _Any) ->
    "ox.rs";

rs("gov", _Any) ->
    "gov.rs";

rs("ac", _Any) ->
    "ac.rs";

rs("co", _Any) ->
    "co.rs";

rs("edu", _Any) ->
    "edu.rs";

rs("brendly", []) ->
    "brendly.rs";
rs("brendly", Parts) ->
    [First | Rest] = Parts,
    brendly_rs(First, Rest);

rs("ua", _Any) ->
    "ua.rs";

rs("blogspot", _Any) ->
    "blogspot.rs";


rs(_, _) ->
    "rs".

%% regular rules
brendly_rs("shop", _Any) ->
    "shop.brendly.rs";


brendly_rs(_, _) ->
    "brendly.rs".

%% regular rules
pe("com", _Any) ->
    "com.pe";

pe("edu", _Any) ->
    "edu.pe";

pe("blogspot", _Any) ->
    "blogspot.pe";

pe("mil", _Any) ->
    "mil.pe";

pe("nom", _Any) ->
    "nom.pe";

pe("net", _Any) ->
    "net.pe";

pe("org", _Any) ->
    "org.pe";

pe("gob", _Any) ->
    "gob.pe";


pe(_, _) ->
    "pe".

%% regular rules
mk("blogspot", _Any) ->
    "blogspot.mk";

mk("edu", _Any) ->
    "edu.mk";

mk("com", _Any) ->
    "com.mk";

mk("inf", _Any) ->
    "inf.mk";

mk("gov", _Any) ->
    "gov.mk";

mk("name", _Any) ->
    "name.mk";

mk("org", _Any) ->
    "org.mk";

mk("net", _Any) ->
    "net.mk";


mk(_, _) ->
    "mk".

%% regular rules
sb("com", _Any) ->
    "com.sb";

sb("edu", _Any) ->
    "edu.sb";

sb("net", _Any) ->
    "net.sb";

sb("org", _Any) ->
    "org.sb";

sb("gov", _Any) ->
    "gov.sb";


sb(_, _) ->
    "sb".

%% regular rules
business("co", _Any) ->
    "co.business";


business(_, _) ->
    "business".

%% regular rules
mt("org", _Any) ->
    "org.mt";

mt("net", _Any) ->
    "net.mt";

mt("edu", _Any) ->
    "edu.mt";

mt("com", []) ->
    "com.mt";
mt("com", Parts) ->
    [First | Rest] = Parts,
    com_mt(First, Rest);


mt(_, _) ->
    "mt".

%% regular rules
com_mt("blogspot", _Any) ->
    "blogspot.com.mt";


com_mt(_, _) ->
    "com.mt".

%% regular rules
md("to", _Any) ->
    "to.md";

md("de", _Any) ->
    "de.md";

md("at", _Any) ->
    "at.md";

md("blogspot", _Any) ->
    "blogspot.md";

md("jp", _Any) ->
    "jp.md";


md(_, _) ->
    "md".

%% regular rules
ci("com", _Any) ->
    "com.ci";

ci("edu", _Any) ->
    "edu.ci";

ci("nl", _Any) ->
    "nl.ci";

ci("ed", _Any) ->
    "ed.ci";

ci("gouv", _Any) ->
    "gouv.ci";

ci("net", _Any) ->
    "net.ci";

ci("int", _Any) ->
    "int.ci";

ci("presse", _Any) ->
    "presse.ci";

ci("ac", _Any) ->
    "ac.ci";

ci("co", _Any) ->
    "co.ci";

ci("fin", _Any) ->
    "fin.ci";

ci("md", _Any) ->
    "md.ci";

ci("or", _Any) ->
    "or.ci";

ci("org", _Any) ->
    "org.ci";

ci("go", _Any) ->
    "go.ci";

ci("asso", _Any) ->
    "asso.ci";


ci(_, _) ->
    "ci".

%% regular rules
ec("pro", _Any) ->
    "pro.ec";

ec("edu", _Any) ->
    "edu.ec";

ec("info", _Any) ->
    "info.ec";

ec("com", _Any) ->
    "com.ec";

ec("mil", _Any) ->
    "mil.ec";

ec("net", _Any) ->
    "net.ec";

ec("base", _Any) ->
    "base.ec";

ec("fin", _Any) ->
    "fin.ec";

ec("gov", _Any) ->
    "gov.ec";

ec("official", _Any) ->
    "official.ec";

ec("gob", _Any) ->
    "gob.ec";

ec("org", _Any) ->
    "org.ec";

ec("med", _Any) ->
    "med.ec";


ec(_, _) ->
    "ec".

%% regular rules
ma("net", _Any) ->
    "net.ma";

ma("org", _Any) ->
    "org.ma";

ma("ac", _Any) ->
    "ac.ma";

ma("gov", _Any) ->
    "gov.ma";

ma("co", _Any) ->
    "co.ma";

ma("press", _Any) ->
    "press.ma";


ma(_, _) ->
    "ma".
-ifdef(TEST).
-include_lib("eunit/include/eunit.hrl").

rules_test() ->
	?assertEqual(publicsuffix:domain("google.com"), "google.com"),
	?assertEqual(publicsuffix:domain("fr.google.com"), "google.com"),
	?assertEqual(publicsuffix:domain("fr.google.google"), "google.google"),
	?assertEqual(publicsuffix:domain("foo.google.co.uk"), "google.co.uk"),
	?assertEqual(publicsuffix:domain("t.co"), "t.co"),
	?assertEqual(publicsuffix:domain("fr.t.co"), "t.co").

-endif.

